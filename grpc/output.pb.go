// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: output.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string      `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type          int32       `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	URL           string      `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`
	CreatedAt     *Time       `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	ApplicationID string      `protobuf:"bytes,5,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	State         string      `protobuf:"bytes,6,opt,name=State,proto3" json:"State,omitempty"`
	Details       string      `protobuf:"bytes,7,opt,name=Details,proto3" json:"Details,omitempty"`
	Timestamps    *TimeStamps `protobuf:"bytes,8,opt,name=Timestamps,proto3" json:"Timestamps,omitempty"`
	Emoji         *Emoji      `protobuf:"bytes,9,opt,name=Emoji,proto3" json:"Emoji,omitempty"`
	Party         *Party      `protobuf:"bytes,10,opt,name=Party,proto3" json:"Party,omitempty"`
	Assets        *Assets     `protobuf:"bytes,11,opt,name=Assets,proto3" json:"Assets,omitempty"`
	Secrets       *Secrets    `protobuf:"bytes,12,opt,name=Secrets,proto3" json:"Secrets,omitempty"`
	Instance      bool        `protobuf:"varint,13,opt,name=Instance,proto3" json:"Instance,omitempty"`
	Flags         int32       `protobuf:"varint,14,opt,name=Flags,proto3" json:"Flags,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{0}
}

func (x *Activity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Activity) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Activity) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Activity) GetCreatedAt() *Time {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Activity) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *Activity) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Activity) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *Activity) GetTimestamps() *TimeStamps {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *Activity) GetEmoji() *Emoji {
	if x != nil {
		return x.Emoji
	}
	return nil
}

func (x *Activity) GetParty() *Party {
	if x != nil {
		return x.Party
	}
	return nil
}

func (x *Activity) GetAssets() *Assets {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *Activity) GetSecrets() *Secrets {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *Activity) GetInstance() bool {
	if x != nil {
		return x.Instance
	}
	return false
}

func (x *Activity) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                  string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Icon                string   `protobuf:"bytes,3,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Description         string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	RPCOrigins          []string `protobuf:"bytes,5,rep,name=RPCOrigins,proto3" json:"RPCOrigins,omitempty"`
	BotPublic           bool     `protobuf:"varint,6,opt,name=BotPublic,proto3" json:"BotPublic,omitempty"`
	BotRequireCodeGrant bool     `protobuf:"varint,7,opt,name=BotRequireCodeGrant,proto3" json:"BotRequireCodeGrant,omitempty"`
	TermsOfServiceURL   string   `protobuf:"bytes,8,opt,name=TermsOfServiceURL,proto3" json:"TermsOfServiceURL,omitempty"`
	PrivacyProxyURL     string   `protobuf:"bytes,9,opt,name=PrivacyProxyURL,proto3" json:"PrivacyProxyURL,omitempty"`
	Owner               *User    `protobuf:"bytes,10,opt,name=Owner,proto3" json:"Owner,omitempty"`
	Summary             string   `protobuf:"bytes,11,opt,name=Summary,proto3" json:"Summary,omitempty"`
	VerifyKey           string   `protobuf:"bytes,12,opt,name=VerifyKey,proto3" json:"VerifyKey,omitempty"`
	Team                *Team    `protobuf:"bytes,13,opt,name=Team,proto3" json:"Team,omitempty"`
	GuildID             string   `protobuf:"bytes,14,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	PrimarySKUID        string   `protobuf:"bytes,15,opt,name=PrimarySKUID,proto3" json:"PrimarySKUID,omitempty"`
	Slug                string   `protobuf:"bytes,16,opt,name=Slug,proto3" json:"Slug,omitempty"`
	CoverImage          string   `protobuf:"bytes,17,opt,name=CoverImage,proto3" json:"CoverImage,omitempty"`
	Flags               int32    `protobuf:"varint,18,opt,name=Flags,proto3" json:"Flags,omitempty"`
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{1}
}

func (x *Application) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Application) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Application) GetRPCOrigins() []string {
	if x != nil {
		return x.RPCOrigins
	}
	return nil
}

func (x *Application) GetBotPublic() bool {
	if x != nil {
		return x.BotPublic
	}
	return false
}

func (x *Application) GetBotRequireCodeGrant() bool {
	if x != nil {
		return x.BotRequireCodeGrant
	}
	return false
}

func (x *Application) GetTermsOfServiceURL() string {
	if x != nil {
		return x.TermsOfServiceURL
	}
	return ""
}

func (x *Application) GetPrivacyProxyURL() string {
	if x != nil {
		return x.PrivacyProxyURL
	}
	return ""
}

func (x *Application) GetOwner() *User {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Application) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Application) GetVerifyKey() string {
	if x != nil {
		return x.VerifyKey
	}
	return ""
}

func (x *Application) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *Application) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *Application) GetPrimarySKUID() string {
	if x != nil {
		return x.PrimarySKUID
	}
	return ""
}

func (x *Application) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Application) GetCoverImage() string {
	if x != nil {
		return x.CoverImage
	}
	return ""
}

func (x *Application) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ApplicationAssetsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
}

func (x *ApplicationAssetsInput) Reset() {
	*x = ApplicationAssetsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationAssetsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAssetsInput) ProtoMessage() {}

func (x *ApplicationAssetsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAssetsInput.ProtoReflect.Descriptor instead.
func (*ApplicationAssetsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{2}
}

func (x *ApplicationAssetsInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type ApplicationAssetsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ass []*Asset `protobuf:"bytes,1,rep,name=ass,proto3" json:"ass,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationAssetsOutput) Reset() {
	*x = ApplicationAssetsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationAssetsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAssetsOutput) ProtoMessage() {}

func (x *ApplicationAssetsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAssetsOutput.ProtoReflect.Descriptor instead.
func (*ApplicationAssetsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{3}
}

func (x *ApplicationAssetsOutput) GetAss() []*Asset {
	if x != nil {
		return x.Ass
	}
	return nil
}

func (x *ApplicationAssetsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationBotCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
}

func (x *ApplicationBotCreateInput) Reset() {
	*x = ApplicationBotCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationBotCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationBotCreateInput) ProtoMessage() {}

func (x *ApplicationBotCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationBotCreateInput.ProtoReflect.Descriptor instead.
func (*ApplicationBotCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{4}
}

func (x *ApplicationBotCreateInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type ApplicationBotCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *User   `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationBotCreateOutput) Reset() {
	*x = ApplicationBotCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationBotCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationBotCreateOutput) ProtoMessage() {}

func (x *ApplicationBotCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationBotCreateOutput.ProtoReflect.Descriptor instead.
func (*ApplicationBotCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{5}
}

func (x *ApplicationBotCreateOutput) GetSt() *User {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ApplicationBotCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                       string                      `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ApplicationID            string                      `protobuf:"bytes,2,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	GuildID                  string                      `protobuf:"bytes,3,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	Version                  string                      `protobuf:"bytes,4,opt,name=Version,proto3" json:"Version,omitempty"`
	Type                     uint32                      `protobuf:"varint,5,opt,name=Type,proto3" json:"Type,omitempty"`
	Name                     string                      `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	NameLocalizations        map[string]string           `protobuf:"bytes,7,rep,name=NameLocalizations,proto3" json:"NameLocalizations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DefaultPermission        bool                        `protobuf:"varint,8,opt,name=DefaultPermission,proto3" json:"DefaultPermission,omitempty"`
	DefaultMemberPermissions int64                       `protobuf:"varint,9,opt,name=DefaultMemberPermissions,proto3" json:"DefaultMemberPermissions,omitempty"`
	DMPermission             bool                        `protobuf:"varint,10,opt,name=DMPermission,proto3" json:"DMPermission,omitempty"`
	NSFW                     bool                        `protobuf:"varint,11,opt,name=NSFW,proto3" json:"NSFW,omitempty"`
	Description              string                      `protobuf:"bytes,12,opt,name=Description,proto3" json:"Description,omitempty"`
	DescriptionLocalizations map[string]string           `protobuf:"bytes,13,rep,name=DescriptionLocalizations,proto3" json:"DescriptionLocalizations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Options                  []*ApplicationCommandOption `protobuf:"bytes,14,rep,name=Options,proto3" json:"Options,omitempty"`
}

func (x *ApplicationCommand) Reset() {
	*x = ApplicationCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommand) ProtoMessage() {}

func (x *ApplicationCommand) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommand.ProtoReflect.Descriptor instead.
func (*ApplicationCommand) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{6}
}

func (x *ApplicationCommand) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ApplicationCommand) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *ApplicationCommand) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *ApplicationCommand) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ApplicationCommand) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ApplicationCommand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicationCommand) GetNameLocalizations() map[string]string {
	if x != nil {
		return x.NameLocalizations
	}
	return nil
}

func (x *ApplicationCommand) GetDefaultPermission() bool {
	if x != nil {
		return x.DefaultPermission
	}
	return false
}

func (x *ApplicationCommand) GetDefaultMemberPermissions() int64 {
	if x != nil {
		return x.DefaultMemberPermissions
	}
	return 0
}

func (x *ApplicationCommand) GetDMPermission() bool {
	if x != nil {
		return x.DMPermission
	}
	return false
}

func (x *ApplicationCommand) GetNSFW() bool {
	if x != nil {
		return x.NSFW
	}
	return false
}

func (x *ApplicationCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ApplicationCommand) GetDescriptionLocalizations() map[string]string {
	if x != nil {
		return x.DescriptionLocalizations
	}
	return nil
}

func (x *ApplicationCommand) GetOptions() []*ApplicationCommandOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type ApplicationCommandBulkOverwriteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID    string                `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	GuildID  string                `protobuf:"bytes,2,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Commands []*ApplicationCommand `protobuf:"bytes,3,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *ApplicationCommandBulkOverwriteInput) Reset() {
	*x = ApplicationCommandBulkOverwriteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandBulkOverwriteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandBulkOverwriteInput) ProtoMessage() {}

func (x *ApplicationCommandBulkOverwriteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandBulkOverwriteInput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandBulkOverwriteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{7}
}

func (x *ApplicationCommandBulkOverwriteInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ApplicationCommandBulkOverwriteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *ApplicationCommandBulkOverwriteInput) GetCommands() []*ApplicationCommand {
	if x != nil {
		return x.Commands
	}
	return nil
}

type ApplicationCommandBulkOverwriteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedCommands []*ApplicationCommand `protobuf:"bytes,1,rep,name=createdCommands,proto3" json:"createdCommands,omitempty"`
	Err             *string               `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationCommandBulkOverwriteOutput) Reset() {
	*x = ApplicationCommandBulkOverwriteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandBulkOverwriteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandBulkOverwriteOutput) ProtoMessage() {}

func (x *ApplicationCommandBulkOverwriteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandBulkOverwriteOutput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandBulkOverwriteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{8}
}

func (x *ApplicationCommandBulkOverwriteOutput) GetCreatedCommands() []*ApplicationCommand {
	if x != nil {
		return x.CreatedCommands
	}
	return nil
}

func (x *ApplicationCommandBulkOverwriteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationCommandCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string              `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	GuildID string              `protobuf:"bytes,2,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Cmd     *ApplicationCommand `protobuf:"bytes,3,opt,name=cmd,proto3" json:"cmd,omitempty"`
}

func (x *ApplicationCommandCreateInput) Reset() {
	*x = ApplicationCommandCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandCreateInput) ProtoMessage() {}

func (x *ApplicationCommandCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandCreateInput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{9}
}

func (x *ApplicationCommandCreateInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ApplicationCommandCreateInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *ApplicationCommandCreateInput) GetCmd() *ApplicationCommand {
	if x != nil {
		return x.Cmd
	}
	return nil
}

type ApplicationCommandCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ccmd *ApplicationCommand `protobuf:"bytes,1,opt,name=ccmd,proto3" json:"ccmd,omitempty"`
	Err  *string             `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationCommandCreateOutput) Reset() {
	*x = ApplicationCommandCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandCreateOutput) ProtoMessage() {}

func (x *ApplicationCommandCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandCreateOutput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{10}
}

func (x *ApplicationCommandCreateOutput) GetCcmd() *ApplicationCommand {
	if x != nil {
		return x.Ccmd
	}
	return nil
}

func (x *ApplicationCommandCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationCommandDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	GuildID string `protobuf:"bytes,2,opt,name=guildID,proto3" json:"guildID,omitempty"`
	CmdID   string `protobuf:"bytes,3,opt,name=cmdID,proto3" json:"cmdID,omitempty"`
}

func (x *ApplicationCommandDeleteInput) Reset() {
	*x = ApplicationCommandDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandDeleteInput) ProtoMessage() {}

func (x *ApplicationCommandDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandDeleteInput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{11}
}

func (x *ApplicationCommandDeleteInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ApplicationCommandDeleteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *ApplicationCommandDeleteInput) GetCmdID() string {
	if x != nil {
		return x.CmdID
	}
	return ""
}

type ApplicationCommandDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *ApplicationCommandDeleteOutput) Reset() {
	*x = ApplicationCommandDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandDeleteOutput) ProtoMessage() {}

func (x *ApplicationCommandDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandDeleteOutput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{12}
}

func (x *ApplicationCommandDeleteOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type ApplicationCommandEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string              `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	GuildID string              `protobuf:"bytes,2,opt,name=guildID,proto3" json:"guildID,omitempty"`
	CmdID   string              `protobuf:"bytes,3,opt,name=cmdID,proto3" json:"cmdID,omitempty"`
	Cmd     *ApplicationCommand `protobuf:"bytes,4,opt,name=cmd,proto3" json:"cmd,omitempty"`
}

func (x *ApplicationCommandEditInput) Reset() {
	*x = ApplicationCommandEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandEditInput) ProtoMessage() {}

func (x *ApplicationCommandEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandEditInput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{13}
}

func (x *ApplicationCommandEditInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ApplicationCommandEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *ApplicationCommandEditInput) GetCmdID() string {
	if x != nil {
		return x.CmdID
	}
	return ""
}

func (x *ApplicationCommandEditInput) GetCmd() *ApplicationCommand {
	if x != nil {
		return x.Cmd
	}
	return nil
}

type ApplicationCommandEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated *ApplicationCommand `protobuf:"bytes,1,opt,name=updated,proto3" json:"updated,omitempty"`
	Err     *string             `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationCommandEditOutput) Reset() {
	*x = ApplicationCommandEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandEditOutput) ProtoMessage() {}

func (x *ApplicationCommandEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandEditOutput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{14}
}

func (x *ApplicationCommandEditOutput) GetUpdated() *ApplicationCommand {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *ApplicationCommandEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationCommandInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	GuildID string `protobuf:"bytes,2,opt,name=guildID,proto3" json:"guildID,omitempty"`
	CmdID   string `protobuf:"bytes,3,opt,name=cmdID,proto3" json:"cmdID,omitempty"`
}

func (x *ApplicationCommandInput) Reset() {
	*x = ApplicationCommandInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandInput) ProtoMessage() {}

func (x *ApplicationCommandInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandInput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{15}
}

func (x *ApplicationCommandInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ApplicationCommandInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *ApplicationCommandInput) GetCmdID() string {
	if x != nil {
		return x.CmdID
	}
	return ""
}

type ApplicationCommandOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                     uint32                            `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Name                     string                            `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	NameLocalizations        map[string]string                 `protobuf:"bytes,3,rep,name=NameLocalizations,proto3" json:"NameLocalizations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Description              string                            `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	DescriptionLocalizations map[string]string                 `protobuf:"bytes,5,rep,name=DescriptionLocalizations,proto3" json:"DescriptionLocalizations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ChannelTypes             []int32                           `protobuf:"varint,6,rep,packed,name=ChannelTypes,proto3" json:"ChannelTypes,omitempty"`
	Required                 bool                              `protobuf:"varint,7,opt,name=Required,proto3" json:"Required,omitempty"`
	Options                  []*ApplicationCommandOption       `protobuf:"bytes,8,rep,name=Options,proto3" json:"Options,omitempty"`
	Autocomplete             bool                              `protobuf:"varint,9,opt,name=Autocomplete,proto3" json:"Autocomplete,omitempty"`
	Choices                  []*ApplicationCommandOptionChoice `protobuf:"bytes,10,rep,name=Choices,proto3" json:"Choices,omitempty"`
	MinValue                 float64                           `protobuf:"fixed64,11,opt,name=MinValue,proto3" json:"MinValue,omitempty"`
	MaxValue                 float64                           `protobuf:"fixed64,12,opt,name=MaxValue,proto3" json:"MaxValue,omitempty"`
	MinLength                int32                             `protobuf:"varint,13,opt,name=MinLength,proto3" json:"MinLength,omitempty"`
	MaxLength                int32                             `protobuf:"varint,14,opt,name=MaxLength,proto3" json:"MaxLength,omitempty"`
}

func (x *ApplicationCommandOption) Reset() {
	*x = ApplicationCommandOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandOption) ProtoMessage() {}

func (x *ApplicationCommandOption) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandOption.ProtoReflect.Descriptor instead.
func (*ApplicationCommandOption) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{16}
}

func (x *ApplicationCommandOption) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ApplicationCommandOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicationCommandOption) GetNameLocalizations() map[string]string {
	if x != nil {
		return x.NameLocalizations
	}
	return nil
}

func (x *ApplicationCommandOption) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ApplicationCommandOption) GetDescriptionLocalizations() map[string]string {
	if x != nil {
		return x.DescriptionLocalizations
	}
	return nil
}

func (x *ApplicationCommandOption) GetChannelTypes() []int32 {
	if x != nil {
		return x.ChannelTypes
	}
	return nil
}

func (x *ApplicationCommandOption) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *ApplicationCommandOption) GetOptions() []*ApplicationCommandOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ApplicationCommandOption) GetAutocomplete() bool {
	if x != nil {
		return x.Autocomplete
	}
	return false
}

func (x *ApplicationCommandOption) GetChoices() []*ApplicationCommandOptionChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *ApplicationCommandOption) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *ApplicationCommandOption) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *ApplicationCommandOption) GetMinLength() int32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *ApplicationCommandOption) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

type ApplicationCommandOptionChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	NameLocalizations map[string]string `protobuf:"bytes,2,rep,name=NameLocalizations,proto3" json:"NameLocalizations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Value             *anypb.Any        `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ApplicationCommandOptionChoice) Reset() {
	*x = ApplicationCommandOptionChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandOptionChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandOptionChoice) ProtoMessage() {}

func (x *ApplicationCommandOptionChoice) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandOptionChoice.ProtoReflect.Descriptor instead.
func (*ApplicationCommandOptionChoice) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{17}
}

func (x *ApplicationCommandOptionChoice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicationCommandOptionChoice) GetNameLocalizations() map[string]string {
	if x != nil {
		return x.NameLocalizations
	}
	return nil
}

func (x *ApplicationCommandOptionChoice) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type ApplicationCommandOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd *ApplicationCommand `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Err *string             `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationCommandOutput) Reset() {
	*x = ApplicationCommandOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandOutput) ProtoMessage() {}

func (x *ApplicationCommandOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandOutput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{18}
}

func (x *ApplicationCommandOutput) GetCmd() *ApplicationCommand {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *ApplicationCommandOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationCommandPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type       uint32 `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Permission bool   `protobuf:"varint,3,opt,name=Permission,proto3" json:"Permission,omitempty"`
}

func (x *ApplicationCommandPermissions) Reset() {
	*x = ApplicationCommandPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandPermissions) ProtoMessage() {}

func (x *ApplicationCommandPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandPermissions.ProtoReflect.Descriptor instead.
func (*ApplicationCommandPermissions) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{19}
}

func (x *ApplicationCommandPermissions) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ApplicationCommandPermissions) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ApplicationCommandPermissions) GetPermission() bool {
	if x != nil {
		return x.Permission
	}
	return false
}

type ApplicationCommandPermissionsBatchEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID       string                                `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	GuildID     string                                `protobuf:"bytes,2,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Permissions []*GuildApplicationCommandPermissions `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *ApplicationCommandPermissionsBatchEditInput) Reset() {
	*x = ApplicationCommandPermissionsBatchEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandPermissionsBatchEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandPermissionsBatchEditInput) ProtoMessage() {}

func (x *ApplicationCommandPermissionsBatchEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandPermissionsBatchEditInput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandPermissionsBatchEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{20}
}

func (x *ApplicationCommandPermissionsBatchEditInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ApplicationCommandPermissionsBatchEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *ApplicationCommandPermissionsBatchEditInput) GetPermissions() []*GuildApplicationCommandPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type ApplicationCommandPermissionsBatchEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationCommandPermissionsBatchEditOutput) Reset() {
	*x = ApplicationCommandPermissionsBatchEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandPermissionsBatchEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandPermissionsBatchEditOutput) ProtoMessage() {}

func (x *ApplicationCommandPermissionsBatchEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandPermissionsBatchEditOutput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandPermissionsBatchEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{21}
}

func (x *ApplicationCommandPermissionsBatchEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationCommandPermissionsEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID       string                             `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	GuildID     string                             `protobuf:"bytes,2,opt,name=guildID,proto3" json:"guildID,omitempty"`
	CmdID       string                             `protobuf:"bytes,3,opt,name=cmdID,proto3" json:"cmdID,omitempty"`
	Permissions *ApplicationCommandPermissionsList `protobuf:"bytes,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *ApplicationCommandPermissionsEditInput) Reset() {
	*x = ApplicationCommandPermissionsEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandPermissionsEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandPermissionsEditInput) ProtoMessage() {}

func (x *ApplicationCommandPermissionsEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandPermissionsEditInput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandPermissionsEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{22}
}

func (x *ApplicationCommandPermissionsEditInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ApplicationCommandPermissionsEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *ApplicationCommandPermissionsEditInput) GetCmdID() string {
	if x != nil {
		return x.CmdID
	}
	return ""
}

func (x *ApplicationCommandPermissionsEditInput) GetPermissions() *ApplicationCommandPermissionsList {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type ApplicationCommandPermissionsEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationCommandPermissionsEditOutput) Reset() {
	*x = ApplicationCommandPermissionsEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandPermissionsEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandPermissionsEditOutput) ProtoMessage() {}

func (x *ApplicationCommandPermissionsEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandPermissionsEditOutput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandPermissionsEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{23}
}

func (x *ApplicationCommandPermissionsEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationCommandPermissionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	GuildID string `protobuf:"bytes,2,opt,name=guildID,proto3" json:"guildID,omitempty"`
	CmdID   string `protobuf:"bytes,3,opt,name=cmdID,proto3" json:"cmdID,omitempty"`
}

func (x *ApplicationCommandPermissionsInput) Reset() {
	*x = ApplicationCommandPermissionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandPermissionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandPermissionsInput) ProtoMessage() {}

func (x *ApplicationCommandPermissionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandPermissionsInput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandPermissionsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{24}
}

func (x *ApplicationCommandPermissionsInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ApplicationCommandPermissionsInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *ApplicationCommandPermissionsInput) GetCmdID() string {
	if x != nil {
		return x.CmdID
	}
	return ""
}

type ApplicationCommandPermissionsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions []*ApplicationCommandPermissions `protobuf:"bytes,1,rep,name=Permissions,proto3" json:"Permissions,omitempty"`
}

func (x *ApplicationCommandPermissionsList) Reset() {
	*x = ApplicationCommandPermissionsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandPermissionsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandPermissionsList) ProtoMessage() {}

func (x *ApplicationCommandPermissionsList) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandPermissionsList.ProtoReflect.Descriptor instead.
func (*ApplicationCommandPermissionsList) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{25}
}

func (x *ApplicationCommandPermissionsList) GetPermissions() []*ApplicationCommandPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type ApplicationCommandPermissionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions *GuildApplicationCommandPermissions `protobuf:"bytes,1,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Err         *string                             `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationCommandPermissionsOutput) Reset() {
	*x = ApplicationCommandPermissionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandPermissionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandPermissionsOutput) ProtoMessage() {}

func (x *ApplicationCommandPermissionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandPermissionsOutput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandPermissionsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{26}
}

func (x *ApplicationCommandPermissionsOutput) GetPermissions() *GuildApplicationCommandPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *ApplicationCommandPermissionsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationCommandsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	GuildID string `protobuf:"bytes,2,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *ApplicationCommandsInput) Reset() {
	*x = ApplicationCommandsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandsInput) ProtoMessage() {}

func (x *ApplicationCommandsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandsInput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{27}
}

func (x *ApplicationCommandsInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ApplicationCommandsInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type ApplicationCommandsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd []*ApplicationCommand `protobuf:"bytes,1,rep,name=cmd,proto3" json:"cmd,omitempty"`
	Err *string               `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationCommandsOutput) Reset() {
	*x = ApplicationCommandsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCommandsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandsOutput) ProtoMessage() {}

func (x *ApplicationCommandsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandsOutput.ProtoReflect.Descriptor instead.
func (*ApplicationCommandsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{28}
}

func (x *ApplicationCommandsOutput) GetCmd() []*ApplicationCommand {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *ApplicationCommandsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ap *Application `protobuf:"bytes,1,opt,name=ap,proto3" json:"ap,omitempty"`
}

func (x *ApplicationCreateInput) Reset() {
	*x = ApplicationCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCreateInput) ProtoMessage() {}

func (x *ApplicationCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCreateInput.ProtoReflect.Descriptor instead.
func (*ApplicationCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{29}
}

func (x *ApplicationCreateInput) GetAp() *Application {
	if x != nil {
		return x.Ap
	}
	return nil
}

type ApplicationCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Application `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string      `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationCreateOutput) Reset() {
	*x = ApplicationCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCreateOutput) ProtoMessage() {}

func (x *ApplicationCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCreateOutput.ProtoReflect.Descriptor instead.
func (*ApplicationCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{30}
}

func (x *ApplicationCreateOutput) GetSt() *Application {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ApplicationCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
}

func (x *ApplicationDeleteInput) Reset() {
	*x = ApplicationDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDeleteInput) ProtoMessage() {}

func (x *ApplicationDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDeleteInput.ProtoReflect.Descriptor instead.
func (*ApplicationDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{31}
}

func (x *ApplicationDeleteInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type ApplicationDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationDeleteOutput) Reset() {
	*x = ApplicationDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDeleteOutput) ProtoMessage() {}

func (x *ApplicationDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDeleteOutput.ProtoReflect.Descriptor instead.
func (*ApplicationDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{32}
}

func (x *ApplicationDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
}

func (x *ApplicationInput) Reset() {
	*x = ApplicationInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationInput) ProtoMessage() {}

func (x *ApplicationInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationInput.ProtoReflect.Descriptor instead.
func (*ApplicationInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{33}
}

func (x *ApplicationInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type ApplicationOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Application `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string      `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationOutput) Reset() {
	*x = ApplicationOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationOutput) ProtoMessage() {}

func (x *ApplicationOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationOutput.ProtoReflect.Descriptor instead.
func (*ApplicationOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{34}
}

func (x *ApplicationOutput) GetSt() *Application {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ApplicationOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationRoleConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformName     string            `protobuf:"bytes,1,opt,name=PlatformName,proto3" json:"PlatformName,omitempty"`
	PlatformUsername string            `protobuf:"bytes,2,opt,name=PlatformUsername,proto3" json:"PlatformUsername,omitempty"`
	Metadata         map[string]string `protobuf:"bytes,3,rep,name=Metadata,proto3" json:"Metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ApplicationRoleConnection) Reset() {
	*x = ApplicationRoleConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationRoleConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationRoleConnection) ProtoMessage() {}

func (x *ApplicationRoleConnection) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationRoleConnection.ProtoReflect.Descriptor instead.
func (*ApplicationRoleConnection) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{35}
}

func (x *ApplicationRoleConnection) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *ApplicationRoleConnection) GetPlatformUsername() string {
	if x != nil {
		return x.PlatformUsername
	}
	return ""
}

func (x *ApplicationRoleConnection) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ApplicationRoleConnectionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                     int32             `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Key                      string            `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Name                     string            `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	NameLocalizations        map[string]string `protobuf:"bytes,4,rep,name=NameLocalizations,proto3" json:"NameLocalizations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Description              string            `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	DescriptionLocalizations map[string]string `protobuf:"bytes,6,rep,name=DescriptionLocalizations,proto3" json:"DescriptionLocalizations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ApplicationRoleConnectionMetadata) Reset() {
	*x = ApplicationRoleConnectionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationRoleConnectionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationRoleConnectionMetadata) ProtoMessage() {}

func (x *ApplicationRoleConnectionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationRoleConnectionMetadata.ProtoReflect.Descriptor instead.
func (*ApplicationRoleConnectionMetadata) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{36}
}

func (x *ApplicationRoleConnectionMetadata) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ApplicationRoleConnectionMetadata) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ApplicationRoleConnectionMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicationRoleConnectionMetadata) GetNameLocalizations() map[string]string {
	if x != nil {
		return x.NameLocalizations
	}
	return nil
}

func (x *ApplicationRoleConnectionMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ApplicationRoleConnectionMetadata) GetDescriptionLocalizations() map[string]string {
	if x != nil {
		return x.DescriptionLocalizations
	}
	return nil
}

type ApplicationRoleConnectionMetadataInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
}

func (x *ApplicationRoleConnectionMetadataInput) Reset() {
	*x = ApplicationRoleConnectionMetadataInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationRoleConnectionMetadataInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationRoleConnectionMetadataInput) ProtoMessage() {}

func (x *ApplicationRoleConnectionMetadataInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationRoleConnectionMetadataInput.ProtoReflect.Descriptor instead.
func (*ApplicationRoleConnectionMetadataInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{37}
}

func (x *ApplicationRoleConnectionMetadataInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type ApplicationRoleConnectionMetadataOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*ApplicationRoleConnectionMetadata `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string                              `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationRoleConnectionMetadataOutput) Reset() {
	*x = ApplicationRoleConnectionMetadataOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationRoleConnectionMetadataOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationRoleConnectionMetadataOutput) ProtoMessage() {}

func (x *ApplicationRoleConnectionMetadataOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationRoleConnectionMetadataOutput.ProtoReflect.Descriptor instead.
func (*ApplicationRoleConnectionMetadataOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{38}
}

func (x *ApplicationRoleConnectionMetadataOutput) GetSt() []*ApplicationRoleConnectionMetadata {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ApplicationRoleConnectionMetadataOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationRoleConnectionMetadataUpdateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID    string                               `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	Metadata []*ApplicationRoleConnectionMetadata `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ApplicationRoleConnectionMetadataUpdateInput) Reset() {
	*x = ApplicationRoleConnectionMetadataUpdateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationRoleConnectionMetadataUpdateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationRoleConnectionMetadataUpdateInput) ProtoMessage() {}

func (x *ApplicationRoleConnectionMetadataUpdateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationRoleConnectionMetadataUpdateInput.ProtoReflect.Descriptor instead.
func (*ApplicationRoleConnectionMetadataUpdateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{39}
}

func (x *ApplicationRoleConnectionMetadataUpdateInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ApplicationRoleConnectionMetadataUpdateInput) GetMetadata() []*ApplicationRoleConnectionMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ApplicationRoleConnectionMetadataUpdateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*ApplicationRoleConnectionMetadata `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string                              `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationRoleConnectionMetadataUpdateOutput) Reset() {
	*x = ApplicationRoleConnectionMetadataUpdateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationRoleConnectionMetadataUpdateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationRoleConnectionMetadataUpdateOutput) ProtoMessage() {}

func (x *ApplicationRoleConnectionMetadataUpdateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationRoleConnectionMetadataUpdateOutput.ProtoReflect.Descriptor instead.
func (*ApplicationRoleConnectionMetadataUpdateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{40}
}

func (x *ApplicationRoleConnectionMetadataUpdateOutput) GetSt() []*ApplicationRoleConnectionMetadata {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ApplicationRoleConnectionMetadataUpdateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationUpdateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string       `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	Ap    *Application `protobuf:"bytes,2,opt,name=ap,proto3" json:"ap,omitempty"`
}

func (x *ApplicationUpdateInput) Reset() {
	*x = ApplicationUpdateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationUpdateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationUpdateInput) ProtoMessage() {}

func (x *ApplicationUpdateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationUpdateInput.ProtoReflect.Descriptor instead.
func (*ApplicationUpdateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{41}
}

func (x *ApplicationUpdateInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ApplicationUpdateInput) GetAp() *Application {
	if x != nil {
		return x.Ap
	}
	return nil
}

type ApplicationUpdateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Application `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string      `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationUpdateOutput) Reset() {
	*x = ApplicationUpdateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationUpdateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationUpdateOutput) ProtoMessage() {}

func (x *ApplicationUpdateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationUpdateOutput.ProtoReflect.Descriptor instead.
func (*ApplicationUpdateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{42}
}

func (x *ApplicationUpdateOutput) GetSt() *Application {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ApplicationUpdateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ApplicationsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApplicationsInput) Reset() {
	*x = ApplicationsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationsInput) ProtoMessage() {}

func (x *ApplicationsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationsInput.ProtoReflect.Descriptor instead.
func (*ApplicationsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{43}
}

type ApplicationsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Application `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string        `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ApplicationsOutput) Reset() {
	*x = ApplicationsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationsOutput) ProtoMessage() {}

func (x *ApplicationsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationsOutput.ProtoReflect.Descriptor instead.
func (*ApplicationsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{44}
}

func (x *ApplicationsOutput) GetSt() []*Application {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ApplicationsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32  `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	ID   string `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{45}
}

func (x *Asset) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Asset) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Asset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Assets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LargeImageID string `protobuf:"bytes,1,opt,name=LargeImageID,proto3" json:"LargeImageID,omitempty"`
	SmallImageID string `protobuf:"bytes,2,opt,name=SmallImageID,proto3" json:"SmallImageID,omitempty"`
	LargeText    string `protobuf:"bytes,3,opt,name=LargeText,proto3" json:"LargeText,omitempty"`
	SmallText    string `protobuf:"bytes,4,opt,name=SmallText,proto3" json:"SmallText,omitempty"`
}

func (x *Assets) Reset() {
	*x = Assets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assets) ProtoMessage() {}

func (x *Assets) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assets.ProtoReflect.Descriptor instead.
func (*Assets) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{46}
}

func (x *Assets) GetLargeImageID() string {
	if x != nil {
		return x.LargeImageID
	}
	return ""
}

func (x *Assets) GetSmallImageID() string {
	if x != nil {
		return x.SmallImageID
	}
	return ""
}

func (x *Assets) GetLargeText() string {
	if x != nil {
		return x.LargeText
	}
	return ""
}

func (x *Assets) GetSmallText() string {
	if x != nil {
		return x.SmallText
	}
	return ""
}

type AuditLogChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewValue *anypb.Any `protobuf:"bytes,1,opt,name=NewValue,proto3" json:"NewValue,omitempty"`
	OldValue *anypb.Any `protobuf:"bytes,2,opt,name=OldValue,proto3" json:"OldValue,omitempty"`
	Key      string     `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
}

func (x *AuditLogChange) Reset() {
	*x = AuditLogChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogChange) ProtoMessage() {}

func (x *AuditLogChange) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogChange.ProtoReflect.Descriptor instead.
func (*AuditLogChange) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{47}
}

func (x *AuditLogChange) GetNewValue() *anypb.Any {
	if x != nil {
		return x.NewValue
	}
	return nil
}

func (x *AuditLogChange) GetOldValue() *anypb.Any {
	if x != nil {
		return x.OldValue
	}
	return nil
}

func (x *AuditLogChange) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type AuditLogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetID   string            `protobuf:"bytes,1,opt,name=TargetID,proto3" json:"TargetID,omitempty"`
	Changes    []*AuditLogChange `protobuf:"bytes,2,rep,name=Changes,proto3" json:"Changes,omitempty"`
	UserID     string            `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ID         string            `protobuf:"bytes,4,opt,name=ID,proto3" json:"ID,omitempty"`
	ActionType int32             `protobuf:"varint,5,opt,name=ActionType,proto3" json:"ActionType,omitempty"`
	Options    *AuditLogOptions  `protobuf:"bytes,6,opt,name=Options,proto3" json:"Options,omitempty"`
	Reason     string            `protobuf:"bytes,7,opt,name=Reason,proto3" json:"Reason,omitempty"`
}

func (x *AuditLogEntry) Reset() {
	*x = AuditLogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogEntry) ProtoMessage() {}

func (x *AuditLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogEntry.ProtoReflect.Descriptor instead.
func (*AuditLogEntry) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{48}
}

func (x *AuditLogEntry) GetTargetID() string {
	if x != nil {
		return x.TargetID
	}
	return ""
}

func (x *AuditLogEntry) GetChanges() []*AuditLogChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *AuditLogEntry) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *AuditLogEntry) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AuditLogEntry) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *AuditLogEntry) GetOptions() *AuditLogOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *AuditLogEntry) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AuditLogOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeleteMemberDays string `protobuf:"bytes,1,opt,name=DeleteMemberDays,proto3" json:"DeleteMemberDays,omitempty"`
	MembersRemoved   string `protobuf:"bytes,2,opt,name=MembersRemoved,proto3" json:"MembersRemoved,omitempty"`
	ChannelID        string `protobuf:"bytes,3,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	MessageID        string `protobuf:"bytes,4,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Count            string `protobuf:"bytes,5,opt,name=Count,proto3" json:"Count,omitempty"`
	ID               string `protobuf:"bytes,6,opt,name=ID,proto3" json:"ID,omitempty"`
	Type             string `protobuf:"bytes,7,opt,name=Type,proto3" json:"Type,omitempty"`
	RoleName         string `protobuf:"bytes,8,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
}

func (x *AuditLogOptions) Reset() {
	*x = AuditLogOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogOptions) ProtoMessage() {}

func (x *AuditLogOptions) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogOptions.ProtoReflect.Descriptor instead.
func (*AuditLogOptions) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{49}
}

func (x *AuditLogOptions) GetDeleteMemberDays() string {
	if x != nil {
		return x.DeleteMemberDays
	}
	return ""
}

func (x *AuditLogOptions) GetMembersRemoved() string {
	if x != nil {
		return x.MembersRemoved
	}
	return ""
}

func (x *AuditLogOptions) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *AuditLogOptions) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *AuditLogOptions) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

func (x *AuditLogOptions) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AuditLogOptions) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AuditLogOptions) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type AutoModerationAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     int32                         `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Metadata *AutoModerationActionMetadata `protobuf:"bytes,2,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
}

func (x *AutoModerationAction) Reset() {
	*x = AutoModerationAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationAction) ProtoMessage() {}

func (x *AutoModerationAction) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationAction.ProtoReflect.Descriptor instead.
func (*AutoModerationAction) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{50}
}

func (x *AutoModerationAction) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AutoModerationAction) GetMetadata() *AutoModerationActionMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type AutoModerationActionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	Duration  int32  `protobuf:"varint,2,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *AutoModerationActionMetadata) Reset() {
	*x = AutoModerationActionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationActionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationActionMetadata) ProtoMessage() {}

func (x *AutoModerationActionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationActionMetadata.ProtoReflect.Descriptor instead.
func (*AutoModerationActionMetadata) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{51}
}

func (x *AutoModerationActionMetadata) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *AutoModerationActionMetadata) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type AutoModerationRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string                         `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	GuildID         string                         `protobuf:"bytes,2,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	Name            string                         `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	CreatorID       string                         `protobuf:"bytes,4,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	EventType       int32                          `protobuf:"varint,5,opt,name=EventType,proto3" json:"EventType,omitempty"`
	TriggerType     int32                          `protobuf:"varint,6,opt,name=TriggerType,proto3" json:"TriggerType,omitempty"`
	TriggerMetadata *AutoModerationTriggerMetadata `protobuf:"bytes,7,opt,name=TriggerMetadata,proto3" json:"TriggerMetadata,omitempty"`
	Actions         []*AutoModerationAction        `protobuf:"bytes,8,rep,name=Actions,proto3" json:"Actions,omitempty"`
	Enabled         bool                           `protobuf:"varint,9,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	ExemptRoles     []string                       `protobuf:"bytes,10,rep,name=ExemptRoles,proto3" json:"ExemptRoles,omitempty"`
	ExemptChannels  []string                       `protobuf:"bytes,11,rep,name=ExemptChannels,proto3" json:"ExemptChannels,omitempty"`
}

func (x *AutoModerationRule) Reset() {
	*x = AutoModerationRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationRule) ProtoMessage() {}

func (x *AutoModerationRule) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationRule.ProtoReflect.Descriptor instead.
func (*AutoModerationRule) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{52}
}

func (x *AutoModerationRule) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AutoModerationRule) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *AutoModerationRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AutoModerationRule) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *AutoModerationRule) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *AutoModerationRule) GetTriggerType() int32 {
	if x != nil {
		return x.TriggerType
	}
	return 0
}

func (x *AutoModerationRule) GetTriggerMetadata() *AutoModerationTriggerMetadata {
	if x != nil {
		return x.TriggerMetadata
	}
	return nil
}

func (x *AutoModerationRule) GetActions() []*AutoModerationAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *AutoModerationRule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AutoModerationRule) GetExemptRoles() []string {
	if x != nil {
		return x.ExemptRoles
	}
	return nil
}

func (x *AutoModerationRule) GetExemptChannels() []string {
	if x != nil {
		return x.ExemptChannels
	}
	return nil
}

type AutoModerationRuleCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string              `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Rule    *AutoModerationRule `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *AutoModerationRuleCreateInput) Reset() {
	*x = AutoModerationRuleCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationRuleCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationRuleCreateInput) ProtoMessage() {}

func (x *AutoModerationRuleCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationRuleCreateInput.ProtoReflect.Descriptor instead.
func (*AutoModerationRuleCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{53}
}

func (x *AutoModerationRuleCreateInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *AutoModerationRuleCreateInput) GetRule() *AutoModerationRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type AutoModerationRuleCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *AutoModerationRule `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string             `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *AutoModerationRuleCreateOutput) Reset() {
	*x = AutoModerationRuleCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationRuleCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationRuleCreateOutput) ProtoMessage() {}

func (x *AutoModerationRuleCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationRuleCreateOutput.ProtoReflect.Descriptor instead.
func (*AutoModerationRuleCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{54}
}

func (x *AutoModerationRuleCreateOutput) GetSt() *AutoModerationRule {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *AutoModerationRuleCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type AutoModerationRuleDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	RuleID  string `protobuf:"bytes,2,opt,name=ruleID,proto3" json:"ruleID,omitempty"`
}

func (x *AutoModerationRuleDeleteInput) Reset() {
	*x = AutoModerationRuleDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationRuleDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationRuleDeleteInput) ProtoMessage() {}

func (x *AutoModerationRuleDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationRuleDeleteInput.ProtoReflect.Descriptor instead.
func (*AutoModerationRuleDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{55}
}

func (x *AutoModerationRuleDeleteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *AutoModerationRuleDeleteInput) GetRuleID() string {
	if x != nil {
		return x.RuleID
	}
	return ""
}

type AutoModerationRuleDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *AutoModerationRuleDeleteOutput) Reset() {
	*x = AutoModerationRuleDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationRuleDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationRuleDeleteOutput) ProtoMessage() {}

func (x *AutoModerationRuleDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationRuleDeleteOutput.ProtoReflect.Descriptor instead.
func (*AutoModerationRuleDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{56}
}

func (x *AutoModerationRuleDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type AutoModerationRuleEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string              `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	RuleID  string              `protobuf:"bytes,2,opt,name=ruleID,proto3" json:"ruleID,omitempty"`
	Rule    *AutoModerationRule `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *AutoModerationRuleEditInput) Reset() {
	*x = AutoModerationRuleEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationRuleEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationRuleEditInput) ProtoMessage() {}

func (x *AutoModerationRuleEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationRuleEditInput.ProtoReflect.Descriptor instead.
func (*AutoModerationRuleEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{57}
}

func (x *AutoModerationRuleEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *AutoModerationRuleEditInput) GetRuleID() string {
	if x != nil {
		return x.RuleID
	}
	return ""
}

func (x *AutoModerationRuleEditInput) GetRule() *AutoModerationRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type AutoModerationRuleEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *AutoModerationRule `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string             `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *AutoModerationRuleEditOutput) Reset() {
	*x = AutoModerationRuleEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationRuleEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationRuleEditOutput) ProtoMessage() {}

func (x *AutoModerationRuleEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationRuleEditOutput.ProtoReflect.Descriptor instead.
func (*AutoModerationRuleEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{58}
}

func (x *AutoModerationRuleEditOutput) GetSt() *AutoModerationRule {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *AutoModerationRuleEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type AutoModerationRuleInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	RuleID  string `protobuf:"bytes,2,opt,name=ruleID,proto3" json:"ruleID,omitempty"`
}

func (x *AutoModerationRuleInput) Reset() {
	*x = AutoModerationRuleInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationRuleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationRuleInput) ProtoMessage() {}

func (x *AutoModerationRuleInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationRuleInput.ProtoReflect.Descriptor instead.
func (*AutoModerationRuleInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{59}
}

func (x *AutoModerationRuleInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *AutoModerationRuleInput) GetRuleID() string {
	if x != nil {
		return x.RuleID
	}
	return ""
}

type AutoModerationRuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *AutoModerationRule `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string             `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *AutoModerationRuleOutput) Reset() {
	*x = AutoModerationRuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationRuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationRuleOutput) ProtoMessage() {}

func (x *AutoModerationRuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationRuleOutput.ProtoReflect.Descriptor instead.
func (*AutoModerationRuleOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{60}
}

func (x *AutoModerationRuleOutput) GetSt() *AutoModerationRule {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *AutoModerationRuleOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type AutoModerationRulesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *AutoModerationRulesInput) Reset() {
	*x = AutoModerationRulesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationRulesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationRulesInput) ProtoMessage() {}

func (x *AutoModerationRulesInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationRulesInput.ProtoReflect.Descriptor instead.
func (*AutoModerationRulesInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{61}
}

func (x *AutoModerationRulesInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type AutoModerationRulesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*AutoModerationRule `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string               `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *AutoModerationRulesOutput) Reset() {
	*x = AutoModerationRulesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationRulesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationRulesOutput) ProtoMessage() {}

func (x *AutoModerationRulesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationRulesOutput.ProtoReflect.Descriptor instead.
func (*AutoModerationRulesOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{62}
}

func (x *AutoModerationRulesOutput) GetSt() []*AutoModerationRule {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *AutoModerationRulesOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type AutoModerationTriggerMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeywordFilter     []string `protobuf:"bytes,1,rep,name=KeywordFilter,proto3" json:"KeywordFilter,omitempty"`
	RegexPatterns     []string `protobuf:"bytes,2,rep,name=RegexPatterns,proto3" json:"RegexPatterns,omitempty"`
	Presets           []uint32 `protobuf:"varint,3,rep,packed,name=Presets,proto3" json:"Presets,omitempty"`
	AllowList         []string `protobuf:"bytes,4,rep,name=AllowList,proto3" json:"AllowList,omitempty"`
	MentionTotalLimit int32    `protobuf:"varint,5,opt,name=MentionTotalLimit,proto3" json:"MentionTotalLimit,omitempty"`
}

func (x *AutoModerationTriggerMetadata) Reset() {
	*x = AutoModerationTriggerMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoModerationTriggerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoModerationTriggerMetadata) ProtoMessage() {}

func (x *AutoModerationTriggerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoModerationTriggerMetadata.ProtoReflect.Descriptor instead.
func (*AutoModerationTriggerMetadata) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{63}
}

func (x *AutoModerationTriggerMetadata) GetKeywordFilter() []string {
	if x != nil {
		return x.KeywordFilter
	}
	return nil
}

func (x *AutoModerationTriggerMetadata) GetRegexPatterns() []string {
	if x != nil {
		return x.RegexPatterns
	}
	return nil
}

func (x *AutoModerationTriggerMetadata) GetPresets() []uint32 {
	if x != nil {
		return x.Presets
	}
	return nil
}

func (x *AutoModerationTriggerMetadata) GetAllowList() []string {
	if x != nil {
		return x.AllowList
	}
	return nil
}

func (x *AutoModerationTriggerMetadata) GetMentionTotalLimit() int32 {
	if x != nil {
		return x.MentionTotalLimit
	}
	return 0
}

type Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	GuildID                       string                 `protobuf:"bytes,2,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	Name                          string                 `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Topic                         string                 `protobuf:"bytes,4,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Type                          int32                  `protobuf:"varint,5,opt,name=Type,proto3" json:"Type,omitempty"`
	LastMessageID                 string                 `protobuf:"bytes,6,opt,name=LastMessageID,proto3" json:"LastMessageID,omitempty"`
	LastPinTimestamp              *Time                  `protobuf:"bytes,7,opt,name=LastPinTimestamp,proto3" json:"LastPinTimestamp,omitempty"`
	MessageCount                  int32                  `protobuf:"varint,8,opt,name=MessageCount,proto3" json:"MessageCount,omitempty"`
	MemberCount                   int32                  `protobuf:"varint,9,opt,name=MemberCount,proto3" json:"MemberCount,omitempty"`
	NSFW                          bool                   `protobuf:"varint,10,opt,name=NSFW,proto3" json:"NSFW,omitempty"`
	Icon                          string                 `protobuf:"bytes,11,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Position                      int32                  `protobuf:"varint,12,opt,name=Position,proto3" json:"Position,omitempty"`
	Bitrate                       int32                  `protobuf:"varint,13,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	Recipients                    []*User                `protobuf:"bytes,14,rep,name=Recipients,proto3" json:"Recipients,omitempty"`
	Messages                      []*Message             `protobuf:"bytes,15,rep,name=Messages,proto3" json:"Messages,omitempty"`
	PermissionOverwrites          []*PermissionOverwrite `protobuf:"bytes,16,rep,name=PermissionOverwrites,proto3" json:"PermissionOverwrites,omitempty"`
	UserLimit                     int32                  `protobuf:"varint,17,opt,name=UserLimit,proto3" json:"UserLimit,omitempty"`
	ParentID                      string                 `protobuf:"bytes,18,opt,name=ParentID,proto3" json:"ParentID,omitempty"`
	RateLimitPerUser              int32                  `protobuf:"varint,19,opt,name=RateLimitPerUser,proto3" json:"RateLimitPerUser,omitempty"`
	OwnerID                       string                 `protobuf:"bytes,20,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	ApplicationID                 string                 `protobuf:"bytes,21,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	ThreadMetadata                *ThreadMetadata        `protobuf:"bytes,22,opt,name=ThreadMetadata,proto3" json:"ThreadMetadata,omitempty"`
	Member                        *ThreadMember          `protobuf:"bytes,23,opt,name=Member,proto3" json:"Member,omitempty"`
	Members                       []*ThreadMember        `protobuf:"bytes,24,rep,name=Members,proto3" json:"Members,omitempty"`
	Flags                         int32                  `protobuf:"varint,25,opt,name=Flags,proto3" json:"Flags,omitempty"`
	AvailableTags                 []*ForumTag            `protobuf:"bytes,26,rep,name=AvailableTags,proto3" json:"AvailableTags,omitempty"`
	AppliedTags                   []string               `protobuf:"bytes,27,rep,name=AppliedTags,proto3" json:"AppliedTags,omitempty"`
	DefaultReactionEmoji          *ForumDefaultReaction  `protobuf:"bytes,28,opt,name=DefaultReactionEmoji,proto3" json:"DefaultReactionEmoji,omitempty"`
	DefaultThreadRateLimitPerUser int32                  `protobuf:"varint,29,opt,name=DefaultThreadRateLimitPerUser,proto3" json:"DefaultThreadRateLimitPerUser,omitempty"`
	DefaultSortOrder              int32                  `protobuf:"varint,30,opt,name=DefaultSortOrder,proto3" json:"DefaultSortOrder,omitempty"`
	DefaultForumLayout            int32                  `protobuf:"varint,31,opt,name=DefaultForumLayout,proto3" json:"DefaultForumLayout,omitempty"`
}

func (x *Channel) Reset() {
	*x = Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{64}
}

func (x *Channel) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Channel) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *Channel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Channel) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Channel) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Channel) GetLastMessageID() string {
	if x != nil {
		return x.LastMessageID
	}
	return ""
}

func (x *Channel) GetLastPinTimestamp() *Time {
	if x != nil {
		return x.LastPinTimestamp
	}
	return nil
}

func (x *Channel) GetMessageCount() int32 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *Channel) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *Channel) GetNSFW() bool {
	if x != nil {
		return x.NSFW
	}
	return false
}

func (x *Channel) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Channel) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Channel) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Channel) GetRecipients() []*User {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *Channel) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Channel) GetPermissionOverwrites() []*PermissionOverwrite {
	if x != nil {
		return x.PermissionOverwrites
	}
	return nil
}

func (x *Channel) GetUserLimit() int32 {
	if x != nil {
		return x.UserLimit
	}
	return 0
}

func (x *Channel) GetParentID() string {
	if x != nil {
		return x.ParentID
	}
	return ""
}

func (x *Channel) GetRateLimitPerUser() int32 {
	if x != nil {
		return x.RateLimitPerUser
	}
	return 0
}

func (x *Channel) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *Channel) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *Channel) GetThreadMetadata() *ThreadMetadata {
	if x != nil {
		return x.ThreadMetadata
	}
	return nil
}

func (x *Channel) GetMember() *ThreadMember {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Channel) GetMembers() []*ThreadMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Channel) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Channel) GetAvailableTags() []*ForumTag {
	if x != nil {
		return x.AvailableTags
	}
	return nil
}

func (x *Channel) GetAppliedTags() []string {
	if x != nil {
		return x.AppliedTags
	}
	return nil
}

func (x *Channel) GetDefaultReactionEmoji() *ForumDefaultReaction {
	if x != nil {
		return x.DefaultReactionEmoji
	}
	return nil
}

func (x *Channel) GetDefaultThreadRateLimitPerUser() int32 {
	if x != nil {
		return x.DefaultThreadRateLimitPerUser
	}
	return 0
}

func (x *Channel) GetDefaultSortOrder() int32 {
	if x != nil {
		return x.DefaultSortOrder
	}
	return 0
}

func (x *Channel) GetDefaultForumLayout() int32 {
	if x != nil {
		return x.DefaultForumLayout
	}
	return 0
}

type ChannelDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *ChannelDeleteInput) Reset() {
	*x = ChannelDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelDeleteInput) ProtoMessage() {}

func (x *ChannelDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelDeleteInput.ProtoReflect.Descriptor instead.
func (*ChannelDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{65}
}

func (x *ChannelDeleteInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type ChannelDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Channel `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelDeleteOutput) Reset() {
	*x = ChannelDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelDeleteOutput) ProtoMessage() {}

func (x *ChannelDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelDeleteOutput.ProtoReflect.Descriptor instead.
func (*ChannelDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{66}
}

func (x *ChannelDeleteOutput) GetSt() *Channel {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Topic                         string                 `protobuf:"bytes,2,opt,name=Topic,proto3" json:"Topic,omitempty"`
	NSFW                          bool                   `protobuf:"varint,3,opt,name=NSFW,proto3" json:"NSFW,omitempty"`
	Position                      int32                  `protobuf:"varint,4,opt,name=Position,proto3" json:"Position,omitempty"`
	Bitrate                       int32                  `protobuf:"varint,5,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	UserLimit                     int32                  `protobuf:"varint,6,opt,name=UserLimit,proto3" json:"UserLimit,omitempty"`
	PermissionOverwrites          []*PermissionOverwrite `protobuf:"bytes,7,rep,name=PermissionOverwrites,proto3" json:"PermissionOverwrites,omitempty"`
	ParentID                      string                 `protobuf:"bytes,8,opt,name=ParentID,proto3" json:"ParentID,omitempty"`
	RateLimitPerUser              int32                  `protobuf:"varint,9,opt,name=RateLimitPerUser,proto3" json:"RateLimitPerUser,omitempty"`
	Flags                         int32                  `protobuf:"varint,10,opt,name=Flags,proto3" json:"Flags,omitempty"`
	DefaultThreadRateLimitPerUser int32                  `protobuf:"varint,11,opt,name=DefaultThreadRateLimitPerUser,proto3" json:"DefaultThreadRateLimitPerUser,omitempty"`
	Archived                      bool                   `protobuf:"varint,12,opt,name=Archived,proto3" json:"Archived,omitempty"`
	AutoArchiveDuration           int32                  `protobuf:"varint,13,opt,name=AutoArchiveDuration,proto3" json:"AutoArchiveDuration,omitempty"`
	Locked                        bool                   `protobuf:"varint,14,opt,name=Locked,proto3" json:"Locked,omitempty"`
	Invitable                     bool                   `protobuf:"varint,15,opt,name=Invitable,proto3" json:"Invitable,omitempty"`
	AvailableTags                 []*ForumTag            `protobuf:"bytes,16,rep,name=AvailableTags,proto3" json:"AvailableTags,omitempty"`
	DefaultReactionEmoji          *ForumDefaultReaction  `protobuf:"bytes,17,opt,name=DefaultReactionEmoji,proto3" json:"DefaultReactionEmoji,omitempty"`
	DefaultSortOrder              int32                  `protobuf:"varint,18,opt,name=DefaultSortOrder,proto3" json:"DefaultSortOrder,omitempty"`
	DefaultForumLayout            int32                  `protobuf:"varint,19,opt,name=DefaultForumLayout,proto3" json:"DefaultForumLayout,omitempty"`
	AppliedTags                   []string               `protobuf:"bytes,20,rep,name=AppliedTags,proto3" json:"AppliedTags,omitempty"`
}

func (x *ChannelEdit) Reset() {
	*x = ChannelEdit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEdit) ProtoMessage() {}

func (x *ChannelEdit) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEdit.ProtoReflect.Descriptor instead.
func (*ChannelEdit) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{67}
}

func (x *ChannelEdit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelEdit) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ChannelEdit) GetNSFW() bool {
	if x != nil {
		return x.NSFW
	}
	return false
}

func (x *ChannelEdit) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *ChannelEdit) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *ChannelEdit) GetUserLimit() int32 {
	if x != nil {
		return x.UserLimit
	}
	return 0
}

func (x *ChannelEdit) GetPermissionOverwrites() []*PermissionOverwrite {
	if x != nil {
		return x.PermissionOverwrites
	}
	return nil
}

func (x *ChannelEdit) GetParentID() string {
	if x != nil {
		return x.ParentID
	}
	return ""
}

func (x *ChannelEdit) GetRateLimitPerUser() int32 {
	if x != nil {
		return x.RateLimitPerUser
	}
	return 0
}

func (x *ChannelEdit) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *ChannelEdit) GetDefaultThreadRateLimitPerUser() int32 {
	if x != nil {
		return x.DefaultThreadRateLimitPerUser
	}
	return 0
}

func (x *ChannelEdit) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *ChannelEdit) GetAutoArchiveDuration() int32 {
	if x != nil {
		return x.AutoArchiveDuration
	}
	return 0
}

func (x *ChannelEdit) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *ChannelEdit) GetInvitable() bool {
	if x != nil {
		return x.Invitable
	}
	return false
}

func (x *ChannelEdit) GetAvailableTags() []*ForumTag {
	if x != nil {
		return x.AvailableTags
	}
	return nil
}

func (x *ChannelEdit) GetDefaultReactionEmoji() *ForumDefaultReaction {
	if x != nil {
		return x.DefaultReactionEmoji
	}
	return nil
}

func (x *ChannelEdit) GetDefaultSortOrder() int32 {
	if x != nil {
		return x.DefaultSortOrder
	}
	return 0
}

func (x *ChannelEdit) GetDefaultForumLayout() int32 {
	if x != nil {
		return x.DefaultForumLayout
	}
	return 0
}

func (x *ChannelEdit) GetAppliedTags() []string {
	if x != nil {
		return x.AppliedTags
	}
	return nil
}

type ChannelEditComplexInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string       `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Data      *ChannelEdit `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ChannelEditComplexInput) Reset() {
	*x = ChannelEditComplexInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelEditComplexInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEditComplexInput) ProtoMessage() {}

func (x *ChannelEditComplexInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEditComplexInput.ProtoReflect.Descriptor instead.
func (*ChannelEditComplexInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{68}
}

func (x *ChannelEditComplexInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelEditComplexInput) GetData() *ChannelEdit {
	if x != nil {
		return x.Data
	}
	return nil
}

type ChannelEditComplexOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Channel `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelEditComplexOutput) Reset() {
	*x = ChannelEditComplexOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelEditComplexOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEditComplexOutput) ProtoMessage() {}

func (x *ChannelEditComplexOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEditComplexOutput.ProtoReflect.Descriptor instead.
func (*ChannelEditComplexOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{69}
}

func (x *ChannelEditComplexOutput) GetSt() *Channel {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelEditComplexOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string       `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Data      *ChannelEdit `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ChannelEditInput) Reset() {
	*x = ChannelEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEditInput) ProtoMessage() {}

func (x *ChannelEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEditInput.ProtoReflect.Descriptor instead.
func (*ChannelEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{70}
}

func (x *ChannelEditInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelEditInput) GetData() *ChannelEdit {
	if x != nil {
		return x.Data
	}
	return nil
}

type ChannelEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Channel `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelEditOutput) Reset() {
	*x = ChannelEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEditOutput) ProtoMessage() {}

func (x *ChannelEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEditOutput.ProtoReflect.Descriptor instead.
func (*ChannelEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{71}
}

func (x *ChannelEditOutput) GetSt() *Channel {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelFileSendInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string  `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	R         *Reader `protobuf:"bytes,3,opt,name=r,proto3" json:"r,omitempty"`
}

func (x *ChannelFileSendInput) Reset() {
	*x = ChannelFileSendInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelFileSendInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelFileSendInput) ProtoMessage() {}

func (x *ChannelFileSendInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelFileSendInput.ProtoReflect.Descriptor instead.
func (*ChannelFileSendInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{72}
}

func (x *ChannelFileSendInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelFileSendInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelFileSendInput) GetR() *Reader {
	if x != nil {
		return x.R
	}
	return nil
}

type ChannelFileSendOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelFileSendOutput) Reset() {
	*x = ChannelFileSendOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelFileSendOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelFileSendOutput) ProtoMessage() {}

func (x *ChannelFileSendOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelFileSendOutput.ProtoReflect.Descriptor instead.
func (*ChannelFileSendOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{73}
}

func (x *ChannelFileSendOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelFileSendOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelFileSendWithMessageInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string  `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Content   string  `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Name      string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	R         *Reader `protobuf:"bytes,4,opt,name=r,proto3" json:"r,omitempty"`
}

func (x *ChannelFileSendWithMessageInput) Reset() {
	*x = ChannelFileSendWithMessageInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelFileSendWithMessageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelFileSendWithMessageInput) ProtoMessage() {}

func (x *ChannelFileSendWithMessageInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelFileSendWithMessageInput.ProtoReflect.Descriptor instead.
func (*ChannelFileSendWithMessageInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{74}
}

func (x *ChannelFileSendWithMessageInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelFileSendWithMessageInput) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChannelFileSendWithMessageInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelFileSendWithMessageInput) GetR() *Reader {
	if x != nil {
		return x.R
	}
	return nil
}

type ChannelFileSendWithMessageOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelFileSendWithMessageOutput) Reset() {
	*x = ChannelFileSendWithMessageOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelFileSendWithMessageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelFileSendWithMessageOutput) ProtoMessage() {}

func (x *ChannelFileSendWithMessageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelFileSendWithMessageOutput.ProtoReflect.Descriptor instead.
func (*ChannelFileSendWithMessageOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{75}
}

func (x *ChannelFileSendWithMessageOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelFileSendWithMessageOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelFollow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	WebhookID string `protobuf:"bytes,2,opt,name=WebhookID,proto3" json:"WebhookID,omitempty"`
}

func (x *ChannelFollow) Reset() {
	*x = ChannelFollow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelFollow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelFollow) ProtoMessage() {}

func (x *ChannelFollow) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelFollow.ProtoReflect.Descriptor instead.
func (*ChannelFollow) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{76}
}

func (x *ChannelFollow) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelFollow) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

type ChannelInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *ChannelInput) Reset() {
	*x = ChannelInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInput) ProtoMessage() {}

func (x *ChannelInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInput.ProtoReflect.Descriptor instead.
func (*ChannelInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{77}
}

func (x *ChannelInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type ChannelInviteCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string  `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	I         *Invite `protobuf:"bytes,2,opt,name=i,proto3" json:"i,omitempty"`
}

func (x *ChannelInviteCreateInput) Reset() {
	*x = ChannelInviteCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInviteCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInviteCreateInput) ProtoMessage() {}

func (x *ChannelInviteCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInviteCreateInput.ProtoReflect.Descriptor instead.
func (*ChannelInviteCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{78}
}

func (x *ChannelInviteCreateInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelInviteCreateInput) GetI() *Invite {
	if x != nil {
		return x.I
	}
	return nil
}

type ChannelInviteCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Invite `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelInviteCreateOutput) Reset() {
	*x = ChannelInviteCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInviteCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInviteCreateOutput) ProtoMessage() {}

func (x *ChannelInviteCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInviteCreateOutput.ProtoReflect.Descriptor instead.
func (*ChannelInviteCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{79}
}

func (x *ChannelInviteCreateOutput) GetSt() *Invite {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelInviteCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelInvitesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *ChannelInvitesInput) Reset() {
	*x = ChannelInvitesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInvitesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInvitesInput) ProtoMessage() {}

func (x *ChannelInvitesInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInvitesInput.ProtoReflect.Descriptor instead.
func (*ChannelInvitesInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{80}
}

func (x *ChannelInvitesInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type ChannelInvitesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Invite `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string   `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelInvitesOutput) Reset() {
	*x = ChannelInvitesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInvitesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInvitesOutput) ProtoMessage() {}

func (x *ChannelInvitesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInvitesOutput.ProtoReflect.Descriptor instead.
func (*ChannelInvitesOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{81}
}

func (x *ChannelInvitesOutput) GetSt() []*Invite {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelInvitesOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelMessageCrosspostInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *ChannelMessageCrosspostInput) Reset() {
	*x = ChannelMessageCrosspostInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageCrosspostInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageCrosspostInput) ProtoMessage() {}

func (x *ChannelMessageCrosspostInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageCrosspostInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageCrosspostInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{82}
}

func (x *ChannelMessageCrosspostInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageCrosspostInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type ChannelMessageCrosspostOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Message `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelMessageCrosspostOutput) Reset() {
	*x = ChannelMessageCrosspostOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageCrosspostOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageCrosspostOutput) ProtoMessage() {}

func (x *ChannelMessageCrosspostOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageCrosspostOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageCrosspostOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{83}
}

func (x *ChannelMessageCrosspostOutput) GetSt() *Message {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelMessageCrosspostOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelMessageDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *ChannelMessageDeleteInput) Reset() {
	*x = ChannelMessageDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageDeleteInput) ProtoMessage() {}

func (x *ChannelMessageDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageDeleteInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{84}
}

func (x *ChannelMessageDeleteInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageDeleteInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type ChannelMessageDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelMessageDeleteOutput) Reset() {
	*x = ChannelMessageDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageDeleteOutput) ProtoMessage() {}

func (x *ChannelMessageDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageDeleteOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{85}
}

func (x *ChannelMessageDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelMessageEditComplexInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M *MessageEdit `protobuf:"bytes,1,opt,name=m,proto3" json:"m,omitempty"`
}

func (x *ChannelMessageEditComplexInput) Reset() {
	*x = ChannelMessageEditComplexInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageEditComplexInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditComplexInput) ProtoMessage() {}

func (x *ChannelMessageEditComplexInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditComplexInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditComplexInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{86}
}

func (x *ChannelMessageEditComplexInput) GetM() *MessageEdit {
	if x != nil {
		return x.M
	}
	return nil
}

type ChannelMessageEditComplexOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Message `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelMessageEditComplexOutput) Reset() {
	*x = ChannelMessageEditComplexOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageEditComplexOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditComplexOutput) ProtoMessage() {}

func (x *ChannelMessageEditComplexOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditComplexOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditComplexOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{87}
}

func (x *ChannelMessageEditComplexOutput) GetSt() *Message {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelMessageEditComplexOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelMessageEditEmbedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string        `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string        `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Embed     *MessageEmbed `protobuf:"bytes,3,opt,name=embed,proto3" json:"embed,omitempty"`
}

func (x *ChannelMessageEditEmbedInput) Reset() {
	*x = ChannelMessageEditEmbedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageEditEmbedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditEmbedInput) ProtoMessage() {}

func (x *ChannelMessageEditEmbedInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditEmbedInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditEmbedInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{88}
}

func (x *ChannelMessageEditEmbedInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageEditEmbedInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *ChannelMessageEditEmbedInput) GetEmbed() *MessageEmbed {
	if x != nil {
		return x.Embed
	}
	return nil
}

type ChannelMessageEditEmbedOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelMessageEditEmbedOutput) Reset() {
	*x = ChannelMessageEditEmbedOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageEditEmbedOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditEmbedOutput) ProtoMessage() {}

func (x *ChannelMessageEditEmbedOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditEmbedOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditEmbedOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{89}
}

func (x *ChannelMessageEditEmbedOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelMessageEditEmbedOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelMessageEditEmbedsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string          `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string          `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Embeds    []*MessageEmbed `protobuf:"bytes,3,rep,name=embeds,proto3" json:"embeds,omitempty"`
}

func (x *ChannelMessageEditEmbedsInput) Reset() {
	*x = ChannelMessageEditEmbedsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageEditEmbedsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditEmbedsInput) ProtoMessage() {}

func (x *ChannelMessageEditEmbedsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditEmbedsInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditEmbedsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{90}
}

func (x *ChannelMessageEditEmbedsInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageEditEmbedsInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *ChannelMessageEditEmbedsInput) GetEmbeds() []*MessageEmbed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

type ChannelMessageEditEmbedsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelMessageEditEmbedsOutput) Reset() {
	*x = ChannelMessageEditEmbedsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageEditEmbedsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditEmbedsOutput) ProtoMessage() {}

func (x *ChannelMessageEditEmbedsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditEmbedsOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditEmbedsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{91}
}

func (x *ChannelMessageEditEmbedsOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelMessageEditEmbedsOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelMessageEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ChannelMessageEditInput) Reset() {
	*x = ChannelMessageEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditInput) ProtoMessage() {}

func (x *ChannelMessageEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{92}
}

func (x *ChannelMessageEditInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageEditInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *ChannelMessageEditInput) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ChannelMessageEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelMessageEditOutput) Reset() {
	*x = ChannelMessageEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditOutput) ProtoMessage() {}

func (x *ChannelMessageEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{93}
}

func (x *ChannelMessageEditOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelMessageEditOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelMessageInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *ChannelMessageInput) Reset() {
	*x = ChannelMessageInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageInput) ProtoMessage() {}

func (x *ChannelMessageInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{94}
}

func (x *ChannelMessageInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type ChannelMessageOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Message `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelMessageOutput) Reset() {
	*x = ChannelMessageOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageOutput) ProtoMessage() {}

func (x *ChannelMessageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{95}
}

func (x *ChannelMessageOutput) GetSt() *Message {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelMessageOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelMessagePinInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *ChannelMessagePinInput) Reset() {
	*x = ChannelMessagePinInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessagePinInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessagePinInput) ProtoMessage() {}

func (x *ChannelMessagePinInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessagePinInput.ProtoReflect.Descriptor instead.
func (*ChannelMessagePinInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{96}
}

func (x *ChannelMessagePinInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessagePinInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type ChannelMessagePinOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelMessagePinOutput) Reset() {
	*x = ChannelMessagePinOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessagePinOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessagePinOutput) ProtoMessage() {}

func (x *ChannelMessagePinOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessagePinOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessagePinOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{97}
}

func (x *ChannelMessagePinOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelMessageSendComplexInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string       `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Data      *MessageSend `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ChannelMessageSendComplexInput) Reset() {
	*x = ChannelMessageSendComplexInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendComplexInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendComplexInput) ProtoMessage() {}

func (x *ChannelMessageSendComplexInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendComplexInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendComplexInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{98}
}

func (x *ChannelMessageSendComplexInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageSendComplexInput) GetData() *MessageSend {
	if x != nil {
		return x.Data
	}
	return nil
}

type ChannelMessageSendComplexOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Message `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelMessageSendComplexOutput) Reset() {
	*x = ChannelMessageSendComplexOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendComplexOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendComplexOutput) ProtoMessage() {}

func (x *ChannelMessageSendComplexOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendComplexOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendComplexOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{99}
}

func (x *ChannelMessageSendComplexOutput) GetSt() *Message {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelMessageSendComplexOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelMessageSendEmbedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string        `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Embed     *MessageEmbed `protobuf:"bytes,2,opt,name=embed,proto3" json:"embed,omitempty"`
}

func (x *ChannelMessageSendEmbedInput) Reset() {
	*x = ChannelMessageSendEmbedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendEmbedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedInput) ProtoMessage() {}

func (x *ChannelMessageSendEmbedInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{100}
}

func (x *ChannelMessageSendEmbedInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageSendEmbedInput) GetEmbed() *MessageEmbed {
	if x != nil {
		return x.Embed
	}
	return nil
}

type ChannelMessageSendEmbedOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelMessageSendEmbedOutput) Reset() {
	*x = ChannelMessageSendEmbedOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendEmbedOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedOutput) ProtoMessage() {}

func (x *ChannelMessageSendEmbedOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{101}
}

func (x *ChannelMessageSendEmbedOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelMessageSendEmbedOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelMessageSendEmbedReplyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string            `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Embed     *MessageEmbed     `protobuf:"bytes,2,opt,name=embed,proto3" json:"embed,omitempty"`
	Reference *MessageReference `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
}

func (x *ChannelMessageSendEmbedReplyInput) Reset() {
	*x = ChannelMessageSendEmbedReplyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendEmbedReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedReplyInput) ProtoMessage() {}

func (x *ChannelMessageSendEmbedReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedReplyInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedReplyInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{102}
}

func (x *ChannelMessageSendEmbedReplyInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageSendEmbedReplyInput) GetEmbed() *MessageEmbed {
	if x != nil {
		return x.Embed
	}
	return nil
}

func (x *ChannelMessageSendEmbedReplyInput) GetReference() *MessageReference {
	if x != nil {
		return x.Reference
	}
	return nil
}

type ChannelMessageSendEmbedReplyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelMessageSendEmbedReplyOutput) Reset() {
	*x = ChannelMessageSendEmbedReplyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendEmbedReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedReplyOutput) ProtoMessage() {}

func (x *ChannelMessageSendEmbedReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedReplyOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedReplyOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{103}
}

func (x *ChannelMessageSendEmbedReplyOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelMessageSendEmbedReplyOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelMessageSendEmbedsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string          `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Embeds    []*MessageEmbed `protobuf:"bytes,2,rep,name=embeds,proto3" json:"embeds,omitempty"`
}

func (x *ChannelMessageSendEmbedsInput) Reset() {
	*x = ChannelMessageSendEmbedsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendEmbedsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedsInput) ProtoMessage() {}

func (x *ChannelMessageSendEmbedsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedsInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{104}
}

func (x *ChannelMessageSendEmbedsInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageSendEmbedsInput) GetEmbeds() []*MessageEmbed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

type ChannelMessageSendEmbedsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelMessageSendEmbedsOutput) Reset() {
	*x = ChannelMessageSendEmbedsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendEmbedsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedsOutput) ProtoMessage() {}

func (x *ChannelMessageSendEmbedsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedsOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{105}
}

func (x *ChannelMessageSendEmbedsOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelMessageSendEmbedsOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelMessageSendEmbedsReplyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string            `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Embeds    []*MessageEmbed   `protobuf:"bytes,2,rep,name=embeds,proto3" json:"embeds,omitempty"`
	Reference *MessageReference `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
}

func (x *ChannelMessageSendEmbedsReplyInput) Reset() {
	*x = ChannelMessageSendEmbedsReplyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendEmbedsReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedsReplyInput) ProtoMessage() {}

func (x *ChannelMessageSendEmbedsReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedsReplyInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedsReplyInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{106}
}

func (x *ChannelMessageSendEmbedsReplyInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageSendEmbedsReplyInput) GetEmbeds() []*MessageEmbed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

func (x *ChannelMessageSendEmbedsReplyInput) GetReference() *MessageReference {
	if x != nil {
		return x.Reference
	}
	return nil
}

type ChannelMessageSendEmbedsReplyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelMessageSendEmbedsReplyOutput) Reset() {
	*x = ChannelMessageSendEmbedsReplyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendEmbedsReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedsReplyOutput) ProtoMessage() {}

func (x *ChannelMessageSendEmbedsReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedsReplyOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedsReplyOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{107}
}

func (x *ChannelMessageSendEmbedsReplyOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelMessageSendEmbedsReplyOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelMessageSendInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ChannelMessageSendInput) Reset() {
	*x = ChannelMessageSendInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendInput) ProtoMessage() {}

func (x *ChannelMessageSendInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{108}
}

func (x *ChannelMessageSendInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageSendInput) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ChannelMessageSendOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelMessageSendOutput) Reset() {
	*x = ChannelMessageSendOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendOutput) ProtoMessage() {}

func (x *ChannelMessageSendOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{109}
}

func (x *ChannelMessageSendOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelMessageSendOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelMessageSendReplyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string            `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Content   string            `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Reference *MessageReference `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
}

func (x *ChannelMessageSendReplyInput) Reset() {
	*x = ChannelMessageSendReplyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendReplyInput) ProtoMessage() {}

func (x *ChannelMessageSendReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendReplyInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendReplyInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{110}
}

func (x *ChannelMessageSendReplyInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageSendReplyInput) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChannelMessageSendReplyInput) GetReference() *MessageReference {
	if x != nil {
		return x.Reference
	}
	return nil
}

type ChannelMessageSendReplyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelMessageSendReplyOutput) Reset() {
	*x = ChannelMessageSendReplyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendReplyOutput) ProtoMessage() {}

func (x *ChannelMessageSendReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendReplyOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendReplyOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{111}
}

func (x *ChannelMessageSendReplyOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelMessageSendReplyOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelMessageSendTTSInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ChannelMessageSendTTSInput) Reset() {
	*x = ChannelMessageSendTTSInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendTTSInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendTTSInput) ProtoMessage() {}

func (x *ChannelMessageSendTTSInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendTTSInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendTTSInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{112}
}

func (x *ChannelMessageSendTTSInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageSendTTSInput) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ChannelMessageSendTTSOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *ChannelMessageSendTTSOutput) Reset() {
	*x = ChannelMessageSendTTSOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageSendTTSOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendTTSOutput) ProtoMessage() {}

func (x *ChannelMessageSendTTSOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendTTSOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendTTSOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{113}
}

func (x *ChannelMessageSendTTSOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *ChannelMessageSendTTSOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ChannelMessageUnpinInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *ChannelMessageUnpinInput) Reset() {
	*x = ChannelMessageUnpinInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageUnpinInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageUnpinInput) ProtoMessage() {}

func (x *ChannelMessageUnpinInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageUnpinInput.ProtoReflect.Descriptor instead.
func (*ChannelMessageUnpinInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{114}
}

func (x *ChannelMessageUnpinInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessageUnpinInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type ChannelMessageUnpinOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelMessageUnpinOutput) Reset() {
	*x = ChannelMessageUnpinOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessageUnpinOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageUnpinOutput) ProtoMessage() {}

func (x *ChannelMessageUnpinOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageUnpinOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessageUnpinOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{115}
}

func (x *ChannelMessageUnpinOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelMessagesBulkDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string   `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Messages  []string `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *ChannelMessagesBulkDeleteInput) Reset() {
	*x = ChannelMessagesBulkDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessagesBulkDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessagesBulkDeleteInput) ProtoMessage() {}

func (x *ChannelMessagesBulkDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessagesBulkDeleteInput.ProtoReflect.Descriptor instead.
func (*ChannelMessagesBulkDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{116}
}

func (x *ChannelMessagesBulkDeleteInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessagesBulkDeleteInput) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ChannelMessagesBulkDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelMessagesBulkDeleteOutput) Reset() {
	*x = ChannelMessagesBulkDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessagesBulkDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessagesBulkDeleteOutput) ProtoMessage() {}

func (x *ChannelMessagesBulkDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessagesBulkDeleteOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessagesBulkDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{117}
}

func (x *ChannelMessagesBulkDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelMessagesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Limit     int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	BeforeID  string `protobuf:"bytes,3,opt,name=beforeID,proto3" json:"beforeID,omitempty"`
	AfterID   string `protobuf:"bytes,4,opt,name=afterID,proto3" json:"afterID,omitempty"`
	AroundID  string `protobuf:"bytes,5,opt,name=aroundID,proto3" json:"aroundID,omitempty"`
}

func (x *ChannelMessagesInput) Reset() {
	*x = ChannelMessagesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessagesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessagesInput) ProtoMessage() {}

func (x *ChannelMessagesInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessagesInput.ProtoReflect.Descriptor instead.
func (*ChannelMessagesInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{118}
}

func (x *ChannelMessagesInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelMessagesInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ChannelMessagesInput) GetBeforeID() string {
	if x != nil {
		return x.BeforeID
	}
	return ""
}

func (x *ChannelMessagesInput) GetAfterID() string {
	if x != nil {
		return x.AfterID
	}
	return ""
}

func (x *ChannelMessagesInput) GetAroundID() string {
	if x != nil {
		return x.AroundID
	}
	return ""
}

type ChannelMessagesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Message `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string    `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelMessagesOutput) Reset() {
	*x = ChannelMessagesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessagesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessagesOutput) ProtoMessage() {}

func (x *ChannelMessagesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessagesOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessagesOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{119}
}

func (x *ChannelMessagesOutput) GetSt() []*Message {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelMessagesOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelMessagesPinnedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *ChannelMessagesPinnedInput) Reset() {
	*x = ChannelMessagesPinnedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessagesPinnedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessagesPinnedInput) ProtoMessage() {}

func (x *ChannelMessagesPinnedInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessagesPinnedInput.ProtoReflect.Descriptor instead.
func (*ChannelMessagesPinnedInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{120}
}

func (x *ChannelMessagesPinnedInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type ChannelMessagesPinnedOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Message `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string    `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelMessagesPinnedOutput) Reset() {
	*x = ChannelMessagesPinnedOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessagesPinnedOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessagesPinnedOutput) ProtoMessage() {}

func (x *ChannelMessagesPinnedOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessagesPinnedOutput.ProtoReflect.Descriptor instead.
func (*ChannelMessagesPinnedOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{121}
}

func (x *ChannelMessagesPinnedOutput) GetSt() []*Message {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelMessagesPinnedOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelNewsFollowInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	TargetID  string `protobuf:"bytes,2,opt,name=targetID,proto3" json:"targetID,omitempty"`
}

func (x *ChannelNewsFollowInput) Reset() {
	*x = ChannelNewsFollowInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelNewsFollowInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelNewsFollowInput) ProtoMessage() {}

func (x *ChannelNewsFollowInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelNewsFollowInput.ProtoReflect.Descriptor instead.
func (*ChannelNewsFollowInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{122}
}

func (x *ChannelNewsFollowInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelNewsFollowInput) GetTargetID() string {
	if x != nil {
		return x.TargetID
	}
	return ""
}

type ChannelNewsFollowOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *ChannelFollow `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string        `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelNewsFollowOutput) Reset() {
	*x = ChannelNewsFollowOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelNewsFollowOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelNewsFollowOutput) ProtoMessage() {}

func (x *ChannelNewsFollowOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelNewsFollowOutput.ProtoReflect.Descriptor instead.
func (*ChannelNewsFollowOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{123}
}

func (x *ChannelNewsFollowOutput) GetSt() *ChannelFollow {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelNewsFollowOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Channel `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelOutput) Reset() {
	*x = ChannelOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelOutput) ProtoMessage() {}

func (x *ChannelOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelOutput.ProtoReflect.Descriptor instead.
func (*ChannelOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{124}
}

func (x *ChannelOutput) GetSt() *Channel {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelPermissionDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	TargetID  string `protobuf:"bytes,2,opt,name=targetID,proto3" json:"targetID,omitempty"`
}

func (x *ChannelPermissionDeleteInput) Reset() {
	*x = ChannelPermissionDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelPermissionDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPermissionDeleteInput) ProtoMessage() {}

func (x *ChannelPermissionDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPermissionDeleteInput.ProtoReflect.Descriptor instead.
func (*ChannelPermissionDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{125}
}

func (x *ChannelPermissionDeleteInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelPermissionDeleteInput) GetTargetID() string {
	if x != nil {
		return x.TargetID
	}
	return ""
}

type ChannelPermissionDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelPermissionDeleteOutput) Reset() {
	*x = ChannelPermissionDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelPermissionDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPermissionDeleteOutput) ProtoMessage() {}

func (x *ChannelPermissionDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPermissionDeleteOutput.ProtoReflect.Descriptor instead.
func (*ChannelPermissionDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{126}
}

func (x *ChannelPermissionDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelPermissionSetInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID  string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	TargetID   string `protobuf:"bytes,2,opt,name=targetID,proto3" json:"targetID,omitempty"`
	TargetType int32  `protobuf:"varint,3,opt,name=targetType,proto3" json:"targetType,omitempty"`
	Allow      int64  `protobuf:"varint,4,opt,name=allow,proto3" json:"allow,omitempty"`
	Deny       int64  `protobuf:"varint,5,opt,name=deny,proto3" json:"deny,omitempty"`
}

func (x *ChannelPermissionSetInput) Reset() {
	*x = ChannelPermissionSetInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelPermissionSetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPermissionSetInput) ProtoMessage() {}

func (x *ChannelPermissionSetInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPermissionSetInput.ProtoReflect.Descriptor instead.
func (*ChannelPermissionSetInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{127}
}

func (x *ChannelPermissionSetInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ChannelPermissionSetInput) GetTargetID() string {
	if x != nil {
		return x.TargetID
	}
	return ""
}

func (x *ChannelPermissionSetInput) GetTargetType() int32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *ChannelPermissionSetInput) GetAllow() int64 {
	if x != nil {
		return x.Allow
	}
	return 0
}

func (x *ChannelPermissionSetInput) GetDeny() int64 {
	if x != nil {
		return x.Deny
	}
	return 0
}

type ChannelPermissionSetOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelPermissionSetOutput) Reset() {
	*x = ChannelPermissionSetOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelPermissionSetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPermissionSetOutput) ProtoMessage() {}

func (x *ChannelPermissionSetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPermissionSetOutput.ProtoReflect.Descriptor instead.
func (*ChannelPermissionSetOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{128}
}

func (x *ChannelPermissionSetOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelTypingInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *ChannelTypingInput) Reset() {
	*x = ChannelTypingInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelTypingInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelTypingInput) ProtoMessage() {}

func (x *ChannelTypingInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelTypingInput.ProtoReflect.Descriptor instead.
func (*ChannelTypingInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{129}
}

func (x *ChannelTypingInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type ChannelTypingOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelTypingOutput) Reset() {
	*x = ChannelTypingOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelTypingOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelTypingOutput) ProtoMessage() {}

func (x *ChannelTypingOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelTypingOutput.ProtoReflect.Descriptor instead.
func (*ChannelTypingOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{130}
}

func (x *ChannelTypingOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelVoiceJoinManualInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GID  string `protobuf:"bytes,1,opt,name=gID,proto3" json:"gID,omitempty"`
	CID  string `protobuf:"bytes,2,opt,name=cID,proto3" json:"cID,omitempty"`
	Mute bool   `protobuf:"varint,3,opt,name=mute,proto3" json:"mute,omitempty"`
	Deaf bool   `protobuf:"varint,4,opt,name=deaf,proto3" json:"deaf,omitempty"`
}

func (x *ChannelVoiceJoinManualInput) Reset() {
	*x = ChannelVoiceJoinManualInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelVoiceJoinManualInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelVoiceJoinManualInput) ProtoMessage() {}

func (x *ChannelVoiceJoinManualInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelVoiceJoinManualInput.ProtoReflect.Descriptor instead.
func (*ChannelVoiceJoinManualInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{131}
}

func (x *ChannelVoiceJoinManualInput) GetGID() string {
	if x != nil {
		return x.GID
	}
	return ""
}

func (x *ChannelVoiceJoinManualInput) GetCID() string {
	if x != nil {
		return x.CID
	}
	return ""
}

func (x *ChannelVoiceJoinManualInput) GetMute() bool {
	if x != nil {
		return x.Mute
	}
	return false
}

func (x *ChannelVoiceJoinManualInput) GetDeaf() bool {
	if x != nil {
		return x.Deaf
	}
	return false
}

type ChannelVoiceJoinManualOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelVoiceJoinManualOutput) Reset() {
	*x = ChannelVoiceJoinManualOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelVoiceJoinManualOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelVoiceJoinManualOutput) ProtoMessage() {}

func (x *ChannelVoiceJoinManualOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelVoiceJoinManualOutput.ProtoReflect.Descriptor instead.
func (*ChannelVoiceJoinManualOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{132}
}

func (x *ChannelVoiceJoinManualOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ChannelWebhooksInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *ChannelWebhooksInput) Reset() {
	*x = ChannelWebhooksInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelWebhooksInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelWebhooksInput) ProtoMessage() {}

func (x *ChannelWebhooksInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelWebhooksInput.ProtoReflect.Descriptor instead.
func (*ChannelWebhooksInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{133}
}

func (x *ChannelWebhooksInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type ChannelWebhooksOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Webhook `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string    `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ChannelWebhooksOutput) Reset() {
	*x = ChannelWebhooksOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelWebhooksOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelWebhooksOutput) ProtoMessage() {}

func (x *ChannelWebhooksOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelWebhooksOutput.ProtoReflect.Descriptor instead.
func (*ChannelWebhooksOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{134}
}

func (x *ChannelWebhooksOutput) GetSt() []*Webhook {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *ChannelWebhooksOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ClientStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desktop string `protobuf:"bytes,1,opt,name=Desktop,proto3" json:"Desktop,omitempty"`
	Mobile  string `protobuf:"bytes,2,opt,name=Mobile,proto3" json:"Mobile,omitempty"`
	Web     string `protobuf:"bytes,3,opt,name=Web,proto3" json:"Web,omitempty"`
}

func (x *ClientStatus) Reset() {
	*x = ClientStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStatus) ProtoMessage() {}

func (x *ClientStatus) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStatus.ProtoReflect.Descriptor instead.
func (*ClientStatus) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{135}
}

func (x *ClientStatus) GetDesktop() string {
	if x != nil {
		return x.Desktop
	}
	return ""
}

func (x *ClientStatus) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ClientStatus) GetWeb() string {
	if x != nil {
		return x.Web
	}
	return ""
}

type Emoji struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Roles         []string `protobuf:"bytes,3,rep,name=Roles,proto3" json:"Roles,omitempty"`
	User          *User    `protobuf:"bytes,4,opt,name=User,proto3" json:"User,omitempty"`
	RequireColons bool     `protobuf:"varint,5,opt,name=RequireColons,proto3" json:"RequireColons,omitempty"`
	Managed       bool     `protobuf:"varint,6,opt,name=Managed,proto3" json:"Managed,omitempty"`
	Animated      bool     `protobuf:"varint,7,opt,name=Animated,proto3" json:"Animated,omitempty"`
	Available     bool     `protobuf:"varint,8,opt,name=Available,proto3" json:"Available,omitempty"`
}

func (x *Emoji) Reset() {
	*x = Emoji{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emoji) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emoji) ProtoMessage() {}

func (x *Emoji) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emoji.ProtoReflect.Descriptor instead.
func (*Emoji) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{136}
}

func (x *Emoji) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Emoji) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Emoji) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Emoji) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Emoji) GetRequireColons() bool {
	if x != nil {
		return x.RequireColons
	}
	return false
}

func (x *Emoji) GetManaged() bool {
	if x != nil {
		return x.Managed
	}
	return false
}

func (x *Emoji) GetAnimated() bool {
	if x != nil {
		return x.Animated
	}
	return false
}

func (x *Emoji) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type EmojiParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Image string   `protobuf:"bytes,2,opt,name=Image,proto3" json:"Image,omitempty"`
	Roles []string `protobuf:"bytes,3,rep,name=Roles,proto3" json:"Roles,omitempty"`
}

func (x *EmojiParams) Reset() {
	*x = EmojiParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmojiParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmojiParams) ProtoMessage() {}

func (x *EmojiParams) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmojiParams.ProtoReflect.Descriptor instead.
func (*EmojiParams) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{137}
}

func (x *EmojiParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmojiParams) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *EmojiParams) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	ContentType string  `protobuf:"bytes,2,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Reader      *Reader `protobuf:"bytes,3,opt,name=Reader,proto3" json:"Reader,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{138}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *File) GetReader() *Reader {
	if x != nil {
		return x.Reader
	}
	return nil
}

type FollowupMessageCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interaction *Interaction   `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
	Wait        bool           `protobuf:"varint,2,opt,name=wait,proto3" json:"wait,omitempty"`
	Data        *WebhookParams `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FollowupMessageCreateInput) Reset() {
	*x = FollowupMessageCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowupMessageCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowupMessageCreateInput) ProtoMessage() {}

func (x *FollowupMessageCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowupMessageCreateInput.ProtoReflect.Descriptor instead.
func (*FollowupMessageCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{139}
}

func (x *FollowupMessageCreateInput) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *FollowupMessageCreateInput) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

func (x *FollowupMessageCreateInput) GetData() *WebhookParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type FollowupMessageCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *FollowupMessageCreateOutput) Reset() {
	*x = FollowupMessageCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowupMessageCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowupMessageCreateOutput) ProtoMessage() {}

func (x *FollowupMessageCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowupMessageCreateOutput.ProtoReflect.Descriptor instead.
func (*FollowupMessageCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{140}
}

func (x *FollowupMessageCreateOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *FollowupMessageCreateOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type FollowupMessageDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interaction *Interaction `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
	MessageID   string       `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *FollowupMessageDeleteInput) Reset() {
	*x = FollowupMessageDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowupMessageDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowupMessageDeleteInput) ProtoMessage() {}

func (x *FollowupMessageDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowupMessageDeleteInput.ProtoReflect.Descriptor instead.
func (*FollowupMessageDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{141}
}

func (x *FollowupMessageDeleteInput) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *FollowupMessageDeleteInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type FollowupMessageDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *FollowupMessageDeleteOutput) Reset() {
	*x = FollowupMessageDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowupMessageDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowupMessageDeleteOutput) ProtoMessage() {}

func (x *FollowupMessageDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowupMessageDeleteOutput.ProtoReflect.Descriptor instead.
func (*FollowupMessageDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{142}
}

func (x *FollowupMessageDeleteOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type FollowupMessageEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interaction *Interaction `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
	MessageID   string       `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Data        *WebhookEdit `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FollowupMessageEditInput) Reset() {
	*x = FollowupMessageEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowupMessageEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowupMessageEditInput) ProtoMessage() {}

func (x *FollowupMessageEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowupMessageEditInput.ProtoReflect.Descriptor instead.
func (*FollowupMessageEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{143}
}

func (x *FollowupMessageEditInput) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *FollowupMessageEditInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *FollowupMessageEditInput) GetData() *WebhookEdit {
	if x != nil {
		return x.Data
	}
	return nil
}

type FollowupMessageEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *FollowupMessageEditOutput) Reset() {
	*x = FollowupMessageEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowupMessageEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowupMessageEditOutput) ProtoMessage() {}

func (x *FollowupMessageEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowupMessageEditOutput.ProtoReflect.Descriptor instead.
func (*FollowupMessageEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{144}
}

func (x *FollowupMessageEditOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *FollowupMessageEditOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type ForumDefaultReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiID   string `protobuf:"bytes,1,opt,name=EmojiID,proto3" json:"EmojiID,omitempty"`
	EmojiName string `protobuf:"bytes,2,opt,name=EmojiName,proto3" json:"EmojiName,omitempty"`
}

func (x *ForumDefaultReaction) Reset() {
	*x = ForumDefaultReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumDefaultReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumDefaultReaction) ProtoMessage() {}

func (x *ForumDefaultReaction) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumDefaultReaction.ProtoReflect.Descriptor instead.
func (*ForumDefaultReaction) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{145}
}

func (x *ForumDefaultReaction) GetEmojiID() string {
	if x != nil {
		return x.EmojiID
	}
	return ""
}

func (x *ForumDefaultReaction) GetEmojiName() string {
	if x != nil {
		return x.EmojiName
	}
	return ""
}

type ForumTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Moderated bool   `protobuf:"varint,3,opt,name=Moderated,proto3" json:"Moderated,omitempty"`
	EmojiID   string `protobuf:"bytes,4,opt,name=EmojiID,proto3" json:"EmojiID,omitempty"`
	EmojiName string `protobuf:"bytes,5,opt,name=EmojiName,proto3" json:"EmojiName,omitempty"`
}

func (x *ForumTag) Reset() {
	*x = ForumTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumTag) ProtoMessage() {}

func (x *ForumTag) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumTag.ProtoReflect.Descriptor instead.
func (*ForumTag) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{146}
}

func (x *ForumTag) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ForumTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ForumTag) GetModerated() bool {
	if x != nil {
		return x.Moderated
	}
	return false
}

func (x *ForumTag) GetEmojiID() string {
	if x != nil {
		return x.EmojiID
	}
	return ""
}

func (x *ForumTag) GetEmojiName() string {
	if x != nil {
		return x.EmojiName
	}
	return ""
}

type ForumThreadStartComplexInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID   string       `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	ThreadData  *ThreadStart `protobuf:"bytes,2,opt,name=threadData,proto3" json:"threadData,omitempty"`
	MessageData *MessageSend `protobuf:"bytes,3,opt,name=messageData,proto3" json:"messageData,omitempty"`
}

func (x *ForumThreadStartComplexInput) Reset() {
	*x = ForumThreadStartComplexInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumThreadStartComplexInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumThreadStartComplexInput) ProtoMessage() {}

func (x *ForumThreadStartComplexInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumThreadStartComplexInput.ProtoReflect.Descriptor instead.
func (*ForumThreadStartComplexInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{147}
}

func (x *ForumThreadStartComplexInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ForumThreadStartComplexInput) GetThreadData() *ThreadStart {
	if x != nil {
		return x.ThreadData
	}
	return nil
}

func (x *ForumThreadStartComplexInput) GetMessageData() *MessageSend {
	if x != nil {
		return x.MessageData
	}
	return nil
}

type ForumThreadStartComplexOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Th  *Channel `protobuf:"bytes,1,opt,name=th,proto3" json:"th,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ForumThreadStartComplexOutput) Reset() {
	*x = ForumThreadStartComplexOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumThreadStartComplexOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumThreadStartComplexOutput) ProtoMessage() {}

func (x *ForumThreadStartComplexOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumThreadStartComplexOutput.ProtoReflect.Descriptor instead.
func (*ForumThreadStartComplexOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{148}
}

func (x *ForumThreadStartComplexOutput) GetTh() *Channel {
	if x != nil {
		return x.Th
	}
	return nil
}

func (x *ForumThreadStartComplexOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ForumThreadStartEmbedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID       string        `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Name            string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ArchiveDuration int32         `protobuf:"varint,3,opt,name=archiveDuration,proto3" json:"archiveDuration,omitempty"`
	Embed           *MessageEmbed `protobuf:"bytes,4,opt,name=embed,proto3" json:"embed,omitempty"`
}

func (x *ForumThreadStartEmbedInput) Reset() {
	*x = ForumThreadStartEmbedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumThreadStartEmbedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumThreadStartEmbedInput) ProtoMessage() {}

func (x *ForumThreadStartEmbedInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumThreadStartEmbedInput.ProtoReflect.Descriptor instead.
func (*ForumThreadStartEmbedInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{149}
}

func (x *ForumThreadStartEmbedInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ForumThreadStartEmbedInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ForumThreadStartEmbedInput) GetArchiveDuration() int32 {
	if x != nil {
		return x.ArchiveDuration
	}
	return 0
}

func (x *ForumThreadStartEmbedInput) GetEmbed() *MessageEmbed {
	if x != nil {
		return x.Embed
	}
	return nil
}

type ForumThreadStartEmbedOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Th  *Channel `protobuf:"bytes,1,opt,name=th,proto3" json:"th,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ForumThreadStartEmbedOutput) Reset() {
	*x = ForumThreadStartEmbedOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumThreadStartEmbedOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumThreadStartEmbedOutput) ProtoMessage() {}

func (x *ForumThreadStartEmbedOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumThreadStartEmbedOutput.ProtoReflect.Descriptor instead.
func (*ForumThreadStartEmbedOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{150}
}

func (x *ForumThreadStartEmbedOutput) GetTh() *Channel {
	if x != nil {
		return x.Th
	}
	return nil
}

func (x *ForumThreadStartEmbedOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ForumThreadStartEmbedsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID       string          `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Name            string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ArchiveDuration int32           `protobuf:"varint,3,opt,name=archiveDuration,proto3" json:"archiveDuration,omitempty"`
	Embeds          []*MessageEmbed `protobuf:"bytes,4,rep,name=embeds,proto3" json:"embeds,omitempty"`
}

func (x *ForumThreadStartEmbedsInput) Reset() {
	*x = ForumThreadStartEmbedsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumThreadStartEmbedsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumThreadStartEmbedsInput) ProtoMessage() {}

func (x *ForumThreadStartEmbedsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumThreadStartEmbedsInput.ProtoReflect.Descriptor instead.
func (*ForumThreadStartEmbedsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{151}
}

func (x *ForumThreadStartEmbedsInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ForumThreadStartEmbedsInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ForumThreadStartEmbedsInput) GetArchiveDuration() int32 {
	if x != nil {
		return x.ArchiveDuration
	}
	return 0
}

func (x *ForumThreadStartEmbedsInput) GetEmbeds() []*MessageEmbed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

type ForumThreadStartEmbedsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Th  *Channel `protobuf:"bytes,1,opt,name=th,proto3" json:"th,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ForumThreadStartEmbedsOutput) Reset() {
	*x = ForumThreadStartEmbedsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumThreadStartEmbedsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumThreadStartEmbedsOutput) ProtoMessage() {}

func (x *ForumThreadStartEmbedsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumThreadStartEmbedsOutput.ProtoReflect.Descriptor instead.
func (*ForumThreadStartEmbedsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{152}
}

func (x *ForumThreadStartEmbedsOutput) GetTh() *Channel {
	if x != nil {
		return x.Th
	}
	return nil
}

func (x *ForumThreadStartEmbedsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ForumThreadStartInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID       string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ArchiveDuration int32  `protobuf:"varint,3,opt,name=archiveDuration,proto3" json:"archiveDuration,omitempty"`
	Content         string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ForumThreadStartInput) Reset() {
	*x = ForumThreadStartInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumThreadStartInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumThreadStartInput) ProtoMessage() {}

func (x *ForumThreadStartInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumThreadStartInput.ProtoReflect.Descriptor instead.
func (*ForumThreadStartInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{153}
}

func (x *ForumThreadStartInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ForumThreadStartInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ForumThreadStartInput) GetArchiveDuration() int32 {
	if x != nil {
		return x.ArchiveDuration
	}
	return 0
}

func (x *ForumThreadStartInput) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ForumThreadStartOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Th  *Channel `protobuf:"bytes,1,opt,name=th,proto3" json:"th,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ForumThreadStartOutput) Reset() {
	*x = ForumThreadStartOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumThreadStartOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumThreadStartOutput) ProtoMessage() {}

func (x *ForumThreadStartOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumThreadStartOutput.ProtoReflect.Descriptor instead.
func (*ForumThreadStartOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{154}
}

func (x *ForumThreadStartOutput) GetTh() *Channel {
	if x != nil {
		return x.Th
	}
	return nil
}

func (x *ForumThreadStartOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GatewayBotInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GatewayBotInput) Reset() {
	*x = GatewayBotInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayBotInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayBotInput) ProtoMessage() {}

func (x *GatewayBotInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayBotInput.ProtoReflect.Descriptor instead.
func (*GatewayBotInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{155}
}

type GatewayBotOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *GatewayBotResponse `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string             `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GatewayBotOutput) Reset() {
	*x = GatewayBotOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayBotOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayBotOutput) ProtoMessage() {}

func (x *GatewayBotOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayBotOutput.ProtoReflect.Descriptor instead.
func (*GatewayBotOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{156}
}

func (x *GatewayBotOutput) GetSt() *GatewayBotResponse {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GatewayBotOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GatewayBotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL               string              `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Shards            int32               `protobuf:"varint,2,opt,name=Shards,proto3" json:"Shards,omitempty"`
	SessionStartLimit *SessionInformation `protobuf:"bytes,3,opt,name=SessionStartLimit,proto3" json:"SessionStartLimit,omitempty"`
}

func (x *GatewayBotResponse) Reset() {
	*x = GatewayBotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayBotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayBotResponse) ProtoMessage() {}

func (x *GatewayBotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayBotResponse.ProtoReflect.Descriptor instead.
func (*GatewayBotResponse) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{157}
}

func (x *GatewayBotResponse) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *GatewayBotResponse) GetShards() int32 {
	if x != nil {
		return x.Shards
	}
	return 0
}

func (x *GatewayBotResponse) GetSessionStartLimit() *SessionInformation {
	if x != nil {
		return x.SessionStartLimit
	}
	return nil
}

type GatewayInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GatewayInput) Reset() {
	*x = GatewayInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayInput) ProtoMessage() {}

func (x *GatewayInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayInput.ProtoReflect.Descriptor instead.
func (*GatewayInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{158}
}

type GatewayOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gateway string  `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Err     *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GatewayOutput) Reset() {
	*x = GatewayOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayOutput) ProtoMessage() {}

func (x *GatewayOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayOutput.ProtoReflect.Descriptor instead.
func (*GatewayOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{159}
}

func (x *GatewayOutput) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *GatewayOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type Guild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                          string           `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                        string           `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Icon                        string           `protobuf:"bytes,3,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Region                      string           `protobuf:"bytes,4,opt,name=Region,proto3" json:"Region,omitempty"`
	AfkChannelID                string           `protobuf:"bytes,5,opt,name=AfkChannelID,proto3" json:"AfkChannelID,omitempty"`
	OwnerID                     string           `protobuf:"bytes,6,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	Owner                       bool             `protobuf:"varint,7,opt,name=Owner,proto3" json:"Owner,omitempty"`
	JoinedAt                    *Time            `protobuf:"bytes,8,opt,name=JoinedAt,proto3" json:"JoinedAt,omitempty"`
	DiscoverySplash             string           `protobuf:"bytes,9,opt,name=DiscoverySplash,proto3" json:"DiscoverySplash,omitempty"`
	Splash                      string           `protobuf:"bytes,10,opt,name=Splash,proto3" json:"Splash,omitempty"`
	AfkTimeout                  int32            `protobuf:"varint,11,opt,name=AfkTimeout,proto3" json:"AfkTimeout,omitempty"`
	MemberCount                 int32            `protobuf:"varint,12,opt,name=MemberCount,proto3" json:"MemberCount,omitempty"`
	VerificationLevel           int32            `protobuf:"varint,13,opt,name=VerificationLevel,proto3" json:"VerificationLevel,omitempty"`
	Large                       bool             `protobuf:"varint,14,opt,name=Large,proto3" json:"Large,omitempty"`
	DefaultMessageNotifications int32            `protobuf:"varint,15,opt,name=DefaultMessageNotifications,proto3" json:"DefaultMessageNotifications,omitempty"`
	Roles                       []*Role          `protobuf:"bytes,16,rep,name=Roles,proto3" json:"Roles,omitempty"`
	Emojis                      []*Emoji         `protobuf:"bytes,17,rep,name=Emojis,proto3" json:"Emojis,omitempty"`
	Stickers                    []*Sticker       `protobuf:"bytes,18,rep,name=Stickers,proto3" json:"Stickers,omitempty"`
	Members                     []*Member        `protobuf:"bytes,19,rep,name=Members,proto3" json:"Members,omitempty"`
	Presences                   []*Presence      `protobuf:"bytes,20,rep,name=Presences,proto3" json:"Presences,omitempty"`
	MaxPresences                int32            `protobuf:"varint,21,opt,name=MaxPresences,proto3" json:"MaxPresences,omitempty"`
	MaxMembers                  int32            `protobuf:"varint,22,opt,name=MaxMembers,proto3" json:"MaxMembers,omitempty"`
	Channels                    []*Channel       `protobuf:"bytes,23,rep,name=Channels,proto3" json:"Channels,omitempty"`
	Threads                     []*Channel       `protobuf:"bytes,24,rep,name=Threads,proto3" json:"Threads,omitempty"`
	VoiceStates                 []*VoiceState    `protobuf:"bytes,25,rep,name=VoiceStates,proto3" json:"VoiceStates,omitempty"`
	Unavailable                 bool             `protobuf:"varint,26,opt,name=Unavailable,proto3" json:"Unavailable,omitempty"`
	ExplicitContentFilter       int32            `protobuf:"varint,27,opt,name=ExplicitContentFilter,proto3" json:"ExplicitContentFilter,omitempty"`
	NSFWLevel                   int32            `protobuf:"varint,28,opt,name=NSFWLevel,proto3" json:"NSFWLevel,omitempty"`
	Features                    []string         `protobuf:"bytes,29,rep,name=Features,proto3" json:"Features,omitempty"`
	MfaLevel                    int32            `protobuf:"varint,30,opt,name=MfaLevel,proto3" json:"MfaLevel,omitempty"`
	ApplicationID               string           `protobuf:"bytes,31,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	WidgetEnabled               bool             `protobuf:"varint,32,opt,name=WidgetEnabled,proto3" json:"WidgetEnabled,omitempty"`
	WidgetChannelID             string           `protobuf:"bytes,33,opt,name=WidgetChannelID,proto3" json:"WidgetChannelID,omitempty"`
	SystemChannelID             string           `protobuf:"bytes,34,opt,name=SystemChannelID,proto3" json:"SystemChannelID,omitempty"`
	SystemChannelFlags          int32            `protobuf:"varint,35,opt,name=SystemChannelFlags,proto3" json:"SystemChannelFlags,omitempty"`
	RulesChannelID              string           `protobuf:"bytes,36,opt,name=RulesChannelID,proto3" json:"RulesChannelID,omitempty"`
	VanityURLCode               string           `protobuf:"bytes,37,opt,name=VanityURLCode,proto3" json:"VanityURLCode,omitempty"`
	Description                 string           `protobuf:"bytes,38,opt,name=Description,proto3" json:"Description,omitempty"`
	Banner                      string           `protobuf:"bytes,39,opt,name=Banner,proto3" json:"Banner,omitempty"`
	PremiumTier                 int32            `protobuf:"varint,40,opt,name=PremiumTier,proto3" json:"PremiumTier,omitempty"`
	PremiumSubscriptionCount    int32            `protobuf:"varint,41,opt,name=PremiumSubscriptionCount,proto3" json:"PremiumSubscriptionCount,omitempty"`
	PreferredLocale             string           `protobuf:"bytes,42,opt,name=PreferredLocale,proto3" json:"PreferredLocale,omitempty"`
	PublicUpdatesChannelID      string           `protobuf:"bytes,43,opt,name=PublicUpdatesChannelID,proto3" json:"PublicUpdatesChannelID,omitempty"`
	MaxVideoChannelUsers        int32            `protobuf:"varint,44,opt,name=MaxVideoChannelUsers,proto3" json:"MaxVideoChannelUsers,omitempty"`
	ApproximateMemberCount      int32            `protobuf:"varint,45,opt,name=ApproximateMemberCount,proto3" json:"ApproximateMemberCount,omitempty"`
	ApproximatePresenceCount    int32            `protobuf:"varint,46,opt,name=ApproximatePresenceCount,proto3" json:"ApproximatePresenceCount,omitempty"`
	Permissions                 int64            `protobuf:"varint,47,opt,name=Permissions,proto3" json:"Permissions,omitempty"`
	StageInstances              []*StageInstance `protobuf:"bytes,48,rep,name=StageInstances,proto3" json:"StageInstances,omitempty"`
}

func (x *Guild) Reset() {
	*x = Guild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guild) ProtoMessage() {}

func (x *Guild) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guild.ProtoReflect.Descriptor instead.
func (*Guild) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{160}
}

func (x *Guild) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Guild) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Guild) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Guild) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Guild) GetAfkChannelID() string {
	if x != nil {
		return x.AfkChannelID
	}
	return ""
}

func (x *Guild) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *Guild) GetOwner() bool {
	if x != nil {
		return x.Owner
	}
	return false
}

func (x *Guild) GetJoinedAt() *Time {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *Guild) GetDiscoverySplash() string {
	if x != nil {
		return x.DiscoverySplash
	}
	return ""
}

func (x *Guild) GetSplash() string {
	if x != nil {
		return x.Splash
	}
	return ""
}

func (x *Guild) GetAfkTimeout() int32 {
	if x != nil {
		return x.AfkTimeout
	}
	return 0
}

func (x *Guild) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *Guild) GetVerificationLevel() int32 {
	if x != nil {
		return x.VerificationLevel
	}
	return 0
}

func (x *Guild) GetLarge() bool {
	if x != nil {
		return x.Large
	}
	return false
}

func (x *Guild) GetDefaultMessageNotifications() int32 {
	if x != nil {
		return x.DefaultMessageNotifications
	}
	return 0
}

func (x *Guild) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Guild) GetEmojis() []*Emoji {
	if x != nil {
		return x.Emojis
	}
	return nil
}

func (x *Guild) GetStickers() []*Sticker {
	if x != nil {
		return x.Stickers
	}
	return nil
}

func (x *Guild) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Guild) GetPresences() []*Presence {
	if x != nil {
		return x.Presences
	}
	return nil
}

func (x *Guild) GetMaxPresences() int32 {
	if x != nil {
		return x.MaxPresences
	}
	return 0
}

func (x *Guild) GetMaxMembers() int32 {
	if x != nil {
		return x.MaxMembers
	}
	return 0
}

func (x *Guild) GetChannels() []*Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *Guild) GetThreads() []*Channel {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *Guild) GetVoiceStates() []*VoiceState {
	if x != nil {
		return x.VoiceStates
	}
	return nil
}

func (x *Guild) GetUnavailable() bool {
	if x != nil {
		return x.Unavailable
	}
	return false
}

func (x *Guild) GetExplicitContentFilter() int32 {
	if x != nil {
		return x.ExplicitContentFilter
	}
	return 0
}

func (x *Guild) GetNSFWLevel() int32 {
	if x != nil {
		return x.NSFWLevel
	}
	return 0
}

func (x *Guild) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *Guild) GetMfaLevel() int32 {
	if x != nil {
		return x.MfaLevel
	}
	return 0
}

func (x *Guild) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *Guild) GetWidgetEnabled() bool {
	if x != nil {
		return x.WidgetEnabled
	}
	return false
}

func (x *Guild) GetWidgetChannelID() string {
	if x != nil {
		return x.WidgetChannelID
	}
	return ""
}

func (x *Guild) GetSystemChannelID() string {
	if x != nil {
		return x.SystemChannelID
	}
	return ""
}

func (x *Guild) GetSystemChannelFlags() int32 {
	if x != nil {
		return x.SystemChannelFlags
	}
	return 0
}

func (x *Guild) GetRulesChannelID() string {
	if x != nil {
		return x.RulesChannelID
	}
	return ""
}

func (x *Guild) GetVanityURLCode() string {
	if x != nil {
		return x.VanityURLCode
	}
	return ""
}

func (x *Guild) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Guild) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *Guild) GetPremiumTier() int32 {
	if x != nil {
		return x.PremiumTier
	}
	return 0
}

func (x *Guild) GetPremiumSubscriptionCount() int32 {
	if x != nil {
		return x.PremiumSubscriptionCount
	}
	return 0
}

func (x *Guild) GetPreferredLocale() string {
	if x != nil {
		return x.PreferredLocale
	}
	return ""
}

func (x *Guild) GetPublicUpdatesChannelID() string {
	if x != nil {
		return x.PublicUpdatesChannelID
	}
	return ""
}

func (x *Guild) GetMaxVideoChannelUsers() int32 {
	if x != nil {
		return x.MaxVideoChannelUsers
	}
	return 0
}

func (x *Guild) GetApproximateMemberCount() int32 {
	if x != nil {
		return x.ApproximateMemberCount
	}
	return 0
}

func (x *Guild) GetApproximatePresenceCount() int32 {
	if x != nil {
		return x.ApproximatePresenceCount
	}
	return 0
}

func (x *Guild) GetPermissions() int64 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

func (x *Guild) GetStageInstances() []*StageInstance {
	if x != nil {
		return x.StageInstances
	}
	return nil
}

type GuildApplicationCommandPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string                           `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ApplicationID string                           `protobuf:"bytes,2,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	GuildID       string                           `protobuf:"bytes,3,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	Permissions   []*ApplicationCommandPermissions `protobuf:"bytes,4,rep,name=Permissions,proto3" json:"Permissions,omitempty"`
}

func (x *GuildApplicationCommandPermissions) Reset() {
	*x = GuildApplicationCommandPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildApplicationCommandPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildApplicationCommandPermissions) ProtoMessage() {}

func (x *GuildApplicationCommandPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildApplicationCommandPermissions.ProtoReflect.Descriptor instead.
func (*GuildApplicationCommandPermissions) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{161}
}

func (x *GuildApplicationCommandPermissions) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GuildApplicationCommandPermissions) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *GuildApplicationCommandPermissions) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildApplicationCommandPermissions) GetPermissions() []*ApplicationCommandPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type GuildApplicationCommandsPermissionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	GuildID string `protobuf:"bytes,2,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildApplicationCommandsPermissionsInput) Reset() {
	*x = GuildApplicationCommandsPermissionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildApplicationCommandsPermissionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildApplicationCommandsPermissionsInput) ProtoMessage() {}

func (x *GuildApplicationCommandsPermissionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildApplicationCommandsPermissionsInput.ProtoReflect.Descriptor instead.
func (*GuildApplicationCommandsPermissionsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{162}
}

func (x *GuildApplicationCommandsPermissionsInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GuildApplicationCommandsPermissionsInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildApplicationCommandsPermissionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions []*GuildApplicationCommandPermissions `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Err         *string                               `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildApplicationCommandsPermissionsOutput) Reset() {
	*x = GuildApplicationCommandsPermissionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildApplicationCommandsPermissionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildApplicationCommandsPermissionsOutput) ProtoMessage() {}

func (x *GuildApplicationCommandsPermissionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildApplicationCommandsPermissionsOutput.ProtoReflect.Descriptor instead.
func (*GuildApplicationCommandsPermissionsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{163}
}

func (x *GuildApplicationCommandsPermissionsOutput) GetPermissions() []*GuildApplicationCommandPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *GuildApplicationCommandsPermissionsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildAuditLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Webhooks        []*Webhook       `protobuf:"bytes,1,rep,name=Webhooks,proto3" json:"Webhooks,omitempty"`
	Users           []*User          `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
	AuditLogEntries []*AuditLogEntry `protobuf:"bytes,3,rep,name=AuditLogEntries,proto3" json:"AuditLogEntries,omitempty"`
	Integrations    []*Integration   `protobuf:"bytes,4,rep,name=Integrations,proto3" json:"Integrations,omitempty"`
}

func (x *GuildAuditLog) Reset() {
	*x = GuildAuditLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildAuditLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildAuditLog) ProtoMessage() {}

func (x *GuildAuditLog) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildAuditLog.ProtoReflect.Descriptor instead.
func (*GuildAuditLog) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{164}
}

func (x *GuildAuditLog) GetWebhooks() []*Webhook {
	if x != nil {
		return x.Webhooks
	}
	return nil
}

func (x *GuildAuditLog) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GuildAuditLog) GetAuditLogEntries() []*AuditLogEntry {
	if x != nil {
		return x.AuditLogEntries
	}
	return nil
}

func (x *GuildAuditLog) GetIntegrations() []*Integration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

type GuildAuditLogInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID    string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID     string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	BeforeID   string `protobuf:"bytes,3,opt,name=beforeID,proto3" json:"beforeID,omitempty"`
	ActionType int32  `protobuf:"varint,4,opt,name=actionType,proto3" json:"actionType,omitempty"`
	Limit      int32  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GuildAuditLogInput) Reset() {
	*x = GuildAuditLogInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildAuditLogInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildAuditLogInput) ProtoMessage() {}

func (x *GuildAuditLogInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildAuditLogInput.ProtoReflect.Descriptor instead.
func (*GuildAuditLogInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{165}
}

func (x *GuildAuditLogInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildAuditLogInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildAuditLogInput) GetBeforeID() string {
	if x != nil {
		return x.BeforeID
	}
	return ""
}

func (x *GuildAuditLogInput) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *GuildAuditLogInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GuildAuditLogOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *GuildAuditLog `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string        `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildAuditLogOutput) Reset() {
	*x = GuildAuditLogOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildAuditLogOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildAuditLogOutput) ProtoMessage() {}

func (x *GuildAuditLogOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildAuditLogOutput.ProtoReflect.Descriptor instead.
func (*GuildAuditLogOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{166}
}

func (x *GuildAuditLogOutput) GetSt() *GuildAuditLog {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildAuditLogOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildBan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=Reason,proto3" json:"Reason,omitempty"`
	User   *User  `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
}

func (x *GuildBan) Reset() {
	*x = GuildBan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBan) ProtoMessage() {}

func (x *GuildBan) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBan.ProtoReflect.Descriptor instead.
func (*GuildBan) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{167}
}

func (x *GuildBan) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GuildBan) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type GuildBanCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Days    int32  `protobuf:"varint,3,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *GuildBanCreateInput) Reset() {
	*x = GuildBanCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanCreateInput) ProtoMessage() {}

func (x *GuildBanCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanCreateInput.ProtoReflect.Descriptor instead.
func (*GuildBanCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{168}
}

func (x *GuildBanCreateInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildBanCreateInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildBanCreateInput) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GuildBanCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildBanCreateOutput) Reset() {
	*x = GuildBanCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanCreateOutput) ProtoMessage() {}

func (x *GuildBanCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanCreateOutput.ProtoReflect.Descriptor instead.
func (*GuildBanCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{169}
}

func (x *GuildBanCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildBanCreateWithReasonInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Reason  string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Days    int32  `protobuf:"varint,4,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *GuildBanCreateWithReasonInput) Reset() {
	*x = GuildBanCreateWithReasonInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanCreateWithReasonInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanCreateWithReasonInput) ProtoMessage() {}

func (x *GuildBanCreateWithReasonInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanCreateWithReasonInput.ProtoReflect.Descriptor instead.
func (*GuildBanCreateWithReasonInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{170}
}

func (x *GuildBanCreateWithReasonInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildBanCreateWithReasonInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildBanCreateWithReasonInput) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GuildBanCreateWithReasonInput) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GuildBanCreateWithReasonOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildBanCreateWithReasonOutput) Reset() {
	*x = GuildBanCreateWithReasonOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanCreateWithReasonOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanCreateWithReasonOutput) ProtoMessage() {}

func (x *GuildBanCreateWithReasonOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanCreateWithReasonOutput.ProtoReflect.Descriptor instead.
func (*GuildBanCreateWithReasonOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{171}
}

func (x *GuildBanCreateWithReasonOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildBanDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GuildBanDeleteInput) Reset() {
	*x = GuildBanDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanDeleteInput) ProtoMessage() {}

func (x *GuildBanDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanDeleteInput.ProtoReflect.Descriptor instead.
func (*GuildBanDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{172}
}

func (x *GuildBanDeleteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildBanDeleteInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GuildBanDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildBanDeleteOutput) Reset() {
	*x = GuildBanDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanDeleteOutput) ProtoMessage() {}

func (x *GuildBanDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanDeleteOutput.ProtoReflect.Descriptor instead.
func (*GuildBanDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{173}
}

func (x *GuildBanDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildBanInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GuildBanInput) Reset() {
	*x = GuildBanInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanInput) ProtoMessage() {}

func (x *GuildBanInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanInput.ProtoReflect.Descriptor instead.
func (*GuildBanInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{174}
}

func (x *GuildBanInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildBanInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GuildBanOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *GuildBan `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string   `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildBanOutput) Reset() {
	*x = GuildBanOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBanOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBanOutput) ProtoMessage() {}

func (x *GuildBanOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBanOutput.ProtoReflect.Descriptor instead.
func (*GuildBanOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{175}
}

func (x *GuildBanOutput) GetSt() *GuildBan {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildBanOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildBansInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID  string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Limit    int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	BeforeID string `protobuf:"bytes,3,opt,name=beforeID,proto3" json:"beforeID,omitempty"`
	AfterID  string `protobuf:"bytes,4,opt,name=afterID,proto3" json:"afterID,omitempty"`
}

func (x *GuildBansInput) Reset() {
	*x = GuildBansInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBansInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBansInput) ProtoMessage() {}

func (x *GuildBansInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBansInput.ProtoReflect.Descriptor instead.
func (*GuildBansInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{176}
}

func (x *GuildBansInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildBansInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GuildBansInput) GetBeforeID() string {
	if x != nil {
		return x.BeforeID
	}
	return ""
}

func (x *GuildBansInput) GetAfterID() string {
	if x != nil {
		return x.AfterID
	}
	return ""
}

type GuildBansOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*GuildBan `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string     `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildBansOutput) Reset() {
	*x = GuildBansOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildBansOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildBansOutput) ProtoMessage() {}

func (x *GuildBansOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildBansOutput.ProtoReflect.Descriptor instead.
func (*GuildBansOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{177}
}

func (x *GuildBansOutput) GetSt() []*GuildBan {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildBansOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildChannelCreateComplexInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string                  `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Data    *GuildChannelCreateData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GuildChannelCreateComplexInput) Reset() {
	*x = GuildChannelCreateComplexInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelCreateComplexInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelCreateComplexInput) ProtoMessage() {}

func (x *GuildChannelCreateComplexInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelCreateComplexInput.ProtoReflect.Descriptor instead.
func (*GuildChannelCreateComplexInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{178}
}

func (x *GuildChannelCreateComplexInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildChannelCreateComplexInput) GetData() *GuildChannelCreateData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GuildChannelCreateComplexOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Channel `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildChannelCreateComplexOutput) Reset() {
	*x = GuildChannelCreateComplexOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelCreateComplexOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelCreateComplexOutput) ProtoMessage() {}

func (x *GuildChannelCreateComplexOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelCreateComplexOutput.ProtoReflect.Descriptor instead.
func (*GuildChannelCreateComplexOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{179}
}

func (x *GuildChannelCreateComplexOutput) GetSt() *Channel {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildChannelCreateComplexOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildChannelCreateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type                 int32                  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Topic                string                 `protobuf:"bytes,3,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Bitrate              int32                  `protobuf:"varint,4,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	UserLimit            int32                  `protobuf:"varint,5,opt,name=UserLimit,proto3" json:"UserLimit,omitempty"`
	RateLimitPerUser     int32                  `protobuf:"varint,6,opt,name=RateLimitPerUser,proto3" json:"RateLimitPerUser,omitempty"`
	Position             int32                  `protobuf:"varint,7,opt,name=Position,proto3" json:"Position,omitempty"`
	PermissionOverwrites []*PermissionOverwrite `protobuf:"bytes,8,rep,name=PermissionOverwrites,proto3" json:"PermissionOverwrites,omitempty"`
	ParentID             string                 `protobuf:"bytes,9,opt,name=ParentID,proto3" json:"ParentID,omitempty"`
	NSFW                 bool                   `protobuf:"varint,10,opt,name=NSFW,proto3" json:"NSFW,omitempty"`
}

func (x *GuildChannelCreateData) Reset() {
	*x = GuildChannelCreateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelCreateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelCreateData) ProtoMessage() {}

func (x *GuildChannelCreateData) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelCreateData.ProtoReflect.Descriptor instead.
func (*GuildChannelCreateData) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{180}
}

func (x *GuildChannelCreateData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildChannelCreateData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GuildChannelCreateData) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *GuildChannelCreateData) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *GuildChannelCreateData) GetUserLimit() int32 {
	if x != nil {
		return x.UserLimit
	}
	return 0
}

func (x *GuildChannelCreateData) GetRateLimitPerUser() int32 {
	if x != nil {
		return x.RateLimitPerUser
	}
	return 0
}

func (x *GuildChannelCreateData) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *GuildChannelCreateData) GetPermissionOverwrites() []*PermissionOverwrite {
	if x != nil {
		return x.PermissionOverwrites
	}
	return nil
}

func (x *GuildChannelCreateData) GetParentID() string {
	if x != nil {
		return x.ParentID
	}
	return ""
}

func (x *GuildChannelCreateData) GetNSFW() bool {
	if x != nil {
		return x.NSFW
	}
	return false
}

type GuildChannelCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ctype   int32  `protobuf:"varint,3,opt,name=ctype,proto3" json:"ctype,omitempty"`
}

func (x *GuildChannelCreateInput) Reset() {
	*x = GuildChannelCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelCreateInput) ProtoMessage() {}

func (x *GuildChannelCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelCreateInput.ProtoReflect.Descriptor instead.
func (*GuildChannelCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{181}
}

func (x *GuildChannelCreateInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildChannelCreateInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildChannelCreateInput) GetCtype() int32 {
	if x != nil {
		return x.Ctype
	}
	return 0
}

type GuildChannelCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Channel `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildChannelCreateOutput) Reset() {
	*x = GuildChannelCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelCreateOutput) ProtoMessage() {}

func (x *GuildChannelCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelCreateOutput.ProtoReflect.Descriptor instead.
func (*GuildChannelCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{182}
}

func (x *GuildChannelCreateOutput) GetSt() *Channel {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildChannelCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildChannelsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildChannelsInput) Reset() {
	*x = GuildChannelsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelsInput) ProtoMessage() {}

func (x *GuildChannelsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelsInput.ProtoReflect.Descriptor instead.
func (*GuildChannelsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{183}
}

func (x *GuildChannelsInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildChannelsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Channel `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string    `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildChannelsOutput) Reset() {
	*x = GuildChannelsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelsOutput) ProtoMessage() {}

func (x *GuildChannelsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelsOutput.ProtoReflect.Descriptor instead.
func (*GuildChannelsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{184}
}

func (x *GuildChannelsOutput) GetSt() []*Channel {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildChannelsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildChannelsReorderInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID  string     `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Channels []*Channel `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *GuildChannelsReorderInput) Reset() {
	*x = GuildChannelsReorderInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelsReorderInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelsReorderInput) ProtoMessage() {}

func (x *GuildChannelsReorderInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelsReorderInput.ProtoReflect.Descriptor instead.
func (*GuildChannelsReorderInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{185}
}

func (x *GuildChannelsReorderInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildChannelsReorderInput) GetChannels() []*Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

type GuildChannelsReorderOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildChannelsReorderOutput) Reset() {
	*x = GuildChannelsReorderOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelsReorderOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelsReorderOutput) ProtoMessage() {}

func (x *GuildChannelsReorderOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelsReorderOutput.ProtoReflect.Descriptor instead.
func (*GuildChannelsReorderOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{186}
}

func (x *GuildChannelsReorderOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GuildCreateInput) Reset() {
	*x = GuildCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildCreateInput) ProtoMessage() {}

func (x *GuildCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildCreateInput.ProtoReflect.Descriptor instead.
func (*GuildCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{187}
}

func (x *GuildCreateInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GuildCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Guild  `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildCreateOutput) Reset() {
	*x = GuildCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildCreateOutput) ProtoMessage() {}

func (x *GuildCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildCreateOutput.ProtoReflect.Descriptor instead.
func (*GuildCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{188}
}

func (x *GuildCreateOutput) GetSt() *Guild {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildCreateWithTemplateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateCode string `protobuf:"bytes,1,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon         string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *GuildCreateWithTemplateInput) Reset() {
	*x = GuildCreateWithTemplateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildCreateWithTemplateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildCreateWithTemplateInput) ProtoMessage() {}

func (x *GuildCreateWithTemplateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildCreateWithTemplateInput.ProtoReflect.Descriptor instead.
func (*GuildCreateWithTemplateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{189}
}

func (x *GuildCreateWithTemplateInput) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *GuildCreateWithTemplateInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildCreateWithTemplateInput) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type GuildCreateWithTemplateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Guild  `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildCreateWithTemplateOutput) Reset() {
	*x = GuildCreateWithTemplateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildCreateWithTemplateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildCreateWithTemplateOutput) ProtoMessage() {}

func (x *GuildCreateWithTemplateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildCreateWithTemplateOutput.ProtoReflect.Descriptor instead.
func (*GuildCreateWithTemplateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{190}
}

func (x *GuildCreateWithTemplateOutput) GetSt() *Guild {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildCreateWithTemplateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildDeleteInput) Reset() {
	*x = GuildDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildDeleteInput) ProtoMessage() {}

func (x *GuildDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildDeleteInput.ProtoReflect.Descriptor instead.
func (*GuildDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{191}
}

func (x *GuildDeleteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Guild  `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildDeleteOutput) Reset() {
	*x = GuildDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildDeleteOutput) ProtoMessage() {}

func (x *GuildDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildDeleteOutput.ProtoReflect.Descriptor instead.
func (*GuildDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{192}
}

func (x *GuildDeleteOutput) GetSt() *Guild {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string       `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	G       *GuildParams `protobuf:"bytes,2,opt,name=g,proto3" json:"g,omitempty"`
}

func (x *GuildEditInput) Reset() {
	*x = GuildEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEditInput) ProtoMessage() {}

func (x *GuildEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEditInput.ProtoReflect.Descriptor instead.
func (*GuildEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{193}
}

func (x *GuildEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildEditInput) GetG() *GuildParams {
	if x != nil {
		return x.G
	}
	return nil
}

type GuildEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Guild  `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildEditOutput) Reset() {
	*x = GuildEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEditOutput) ProtoMessage() {}

func (x *GuildEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEditOutput.ProtoReflect.Descriptor instead.
func (*GuildEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{194}
}

func (x *GuildEditOutput) GetSt() *Guild {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildEmbed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled   bool   `protobuf:"varint,1,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	ChannelID string `protobuf:"bytes,2,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
}

func (x *GuildEmbed) Reset() {
	*x = GuildEmbed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmbed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmbed) ProtoMessage() {}

func (x *GuildEmbed) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmbed.ProtoReflect.Descriptor instead.
func (*GuildEmbed) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{195}
}

func (x *GuildEmbed) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GuildEmbed) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type GuildEmbedEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string      `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Data    *GuildEmbed `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GuildEmbedEditInput) Reset() {
	*x = GuildEmbedEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmbedEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmbedEditInput) ProtoMessage() {}

func (x *GuildEmbedEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmbedEditInput.ProtoReflect.Descriptor instead.
func (*GuildEmbedEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{196}
}

func (x *GuildEmbedEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildEmbedEditInput) GetData() *GuildEmbed {
	if x != nil {
		return x.Data
	}
	return nil
}

type GuildEmbedEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildEmbedEditOutput) Reset() {
	*x = GuildEmbedEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmbedEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmbedEditOutput) ProtoMessage() {}

func (x *GuildEmbedEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmbedEditOutput.ProtoReflect.Descriptor instead.
func (*GuildEmbedEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{197}
}

func (x *GuildEmbedEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildEmbedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildEmbedInput) Reset() {
	*x = GuildEmbedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmbedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmbedInput) ProtoMessage() {}

func (x *GuildEmbedInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmbedInput.ProtoReflect.Descriptor instead.
func (*GuildEmbedInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{198}
}

func (x *GuildEmbedInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildEmbedOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *GuildEmbed `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string     `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildEmbedOutput) Reset() {
	*x = GuildEmbedOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmbedOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmbedOutput) ProtoMessage() {}

func (x *GuildEmbedOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmbedOutput.ProtoReflect.Descriptor instead.
func (*GuildEmbedOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{199}
}

func (x *GuildEmbedOutput) GetSt() *GuildEmbed {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildEmbedOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildEmojiCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string       `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Data    *EmojiParams `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GuildEmojiCreateInput) Reset() {
	*x = GuildEmojiCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojiCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojiCreateInput) ProtoMessage() {}

func (x *GuildEmojiCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojiCreateInput.ProtoReflect.Descriptor instead.
func (*GuildEmojiCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{200}
}

func (x *GuildEmojiCreateInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildEmojiCreateInput) GetData() *EmojiParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type GuildEmojiCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emoji *Emoji  `protobuf:"bytes,1,opt,name=emoji,proto3" json:"emoji,omitempty"`
	Err   *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildEmojiCreateOutput) Reset() {
	*x = GuildEmojiCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojiCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojiCreateOutput) ProtoMessage() {}

func (x *GuildEmojiCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojiCreateOutput.ProtoReflect.Descriptor instead.
func (*GuildEmojiCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{201}
}

func (x *GuildEmojiCreateOutput) GetEmoji() *Emoji {
	if x != nil {
		return x.Emoji
	}
	return nil
}

func (x *GuildEmojiCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildEmojiDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	EmojiID string `protobuf:"bytes,2,opt,name=emojiID,proto3" json:"emojiID,omitempty"`
}

func (x *GuildEmojiDeleteInput) Reset() {
	*x = GuildEmojiDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojiDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojiDeleteInput) ProtoMessage() {}

func (x *GuildEmojiDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojiDeleteInput.ProtoReflect.Descriptor instead.
func (*GuildEmojiDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{202}
}

func (x *GuildEmojiDeleteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildEmojiDeleteInput) GetEmojiID() string {
	if x != nil {
		return x.EmojiID
	}
	return ""
}

type GuildEmojiDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildEmojiDeleteOutput) Reset() {
	*x = GuildEmojiDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojiDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojiDeleteOutput) ProtoMessage() {}

func (x *GuildEmojiDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojiDeleteOutput.ProtoReflect.Descriptor instead.
func (*GuildEmojiDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{203}
}

func (x *GuildEmojiDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildEmojiEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string       `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	EmojiID string       `protobuf:"bytes,2,opt,name=emojiID,proto3" json:"emojiID,omitempty"`
	Data    *EmojiParams `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GuildEmojiEditInput) Reset() {
	*x = GuildEmojiEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojiEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojiEditInput) ProtoMessage() {}

func (x *GuildEmojiEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojiEditInput.ProtoReflect.Descriptor instead.
func (*GuildEmojiEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{204}
}

func (x *GuildEmojiEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildEmojiEditInput) GetEmojiID() string {
	if x != nil {
		return x.EmojiID
	}
	return ""
}

func (x *GuildEmojiEditInput) GetData() *EmojiParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type GuildEmojiEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emoji *Emoji  `protobuf:"bytes,1,opt,name=emoji,proto3" json:"emoji,omitempty"`
	Err   *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildEmojiEditOutput) Reset() {
	*x = GuildEmojiEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojiEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojiEditOutput) ProtoMessage() {}

func (x *GuildEmojiEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojiEditOutput.ProtoReflect.Descriptor instead.
func (*GuildEmojiEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{205}
}

func (x *GuildEmojiEditOutput) GetEmoji() *Emoji {
	if x != nil {
		return x.Emoji
	}
	return nil
}

func (x *GuildEmojiEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildEmojiInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	EmojiID string `protobuf:"bytes,2,opt,name=emojiID,proto3" json:"emojiID,omitempty"`
}

func (x *GuildEmojiInput) Reset() {
	*x = GuildEmojiInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojiInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojiInput) ProtoMessage() {}

func (x *GuildEmojiInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojiInput.ProtoReflect.Descriptor instead.
func (*GuildEmojiInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{206}
}

func (x *GuildEmojiInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildEmojiInput) GetEmojiID() string {
	if x != nil {
		return x.EmojiID
	}
	return ""
}

type GuildEmojiOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emoji *Emoji  `protobuf:"bytes,1,opt,name=emoji,proto3" json:"emoji,omitempty"`
	Err   *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildEmojiOutput) Reset() {
	*x = GuildEmojiOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojiOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojiOutput) ProtoMessage() {}

func (x *GuildEmojiOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojiOutput.ProtoReflect.Descriptor instead.
func (*GuildEmojiOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{207}
}

func (x *GuildEmojiOutput) GetEmoji() *Emoji {
	if x != nil {
		return x.Emoji
	}
	return nil
}

func (x *GuildEmojiOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildEmojisInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildEmojisInput) Reset() {
	*x = GuildEmojisInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojisInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojisInput) ProtoMessage() {}

func (x *GuildEmojisInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojisInput.ProtoReflect.Descriptor instead.
func (*GuildEmojisInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{208}
}

func (x *GuildEmojisInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildEmojisOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emoji []*Emoji `protobuf:"bytes,1,rep,name=emoji,proto3" json:"emoji,omitempty"`
	Err   *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildEmojisOutput) Reset() {
	*x = GuildEmojisOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEmojisOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEmojisOutput) ProtoMessage() {}

func (x *GuildEmojisOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEmojisOutput.ProtoReflect.Descriptor instead.
func (*GuildEmojisOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{209}
}

func (x *GuildEmojisOutput) GetEmoji() []*Emoji {
	if x != nil {
		return x.Emoji
	}
	return nil
}

func (x *GuildEmojisOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildIconInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildIconInput) Reset() {
	*x = GuildIconInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIconInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIconInput) ProtoMessage() {}

func (x *GuildIconInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIconInput.ProtoReflect.Descriptor instead.
func (*GuildIconInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{210}
}

func (x *GuildIconInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildIconOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Img *Image  `protobuf:"bytes,1,opt,name=img,proto3" json:"img,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildIconOutput) Reset() {
	*x = GuildIconOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIconOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIconOutput) ProtoMessage() {}

func (x *GuildIconOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIconOutput.ProtoReflect.Descriptor instead.
func (*GuildIconOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{211}
}

func (x *GuildIconOutput) GetImg() *Image {
	if x != nil {
		return x.Img
	}
	return nil
}

func (x *GuildIconOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildInput) Reset() {
	*x = GuildInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildInput) ProtoMessage() {}

func (x *GuildInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildInput.ProtoReflect.Descriptor instead.
func (*GuildInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{212}
}

func (x *GuildInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildIntegrationCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID         string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	IntegrationType string `protobuf:"bytes,2,opt,name=integrationType,proto3" json:"integrationType,omitempty"`
	IntegrationID   string `protobuf:"bytes,3,opt,name=integrationID,proto3" json:"integrationID,omitempty"`
}

func (x *GuildIntegrationCreateInput) Reset() {
	*x = GuildIntegrationCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIntegrationCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIntegrationCreateInput) ProtoMessage() {}

func (x *GuildIntegrationCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIntegrationCreateInput.ProtoReflect.Descriptor instead.
func (*GuildIntegrationCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{213}
}

func (x *GuildIntegrationCreateInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildIntegrationCreateInput) GetIntegrationType() string {
	if x != nil {
		return x.IntegrationType
	}
	return ""
}

func (x *GuildIntegrationCreateInput) GetIntegrationID() string {
	if x != nil {
		return x.IntegrationID
	}
	return ""
}

type GuildIntegrationCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildIntegrationCreateOutput) Reset() {
	*x = GuildIntegrationCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIntegrationCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIntegrationCreateOutput) ProtoMessage() {}

func (x *GuildIntegrationCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIntegrationCreateOutput.ProtoReflect.Descriptor instead.
func (*GuildIntegrationCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{214}
}

func (x *GuildIntegrationCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildIntegrationDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID       string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	IntegrationID string `protobuf:"bytes,2,opt,name=integrationID,proto3" json:"integrationID,omitempty"`
}

func (x *GuildIntegrationDeleteInput) Reset() {
	*x = GuildIntegrationDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIntegrationDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIntegrationDeleteInput) ProtoMessage() {}

func (x *GuildIntegrationDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIntegrationDeleteInput.ProtoReflect.Descriptor instead.
func (*GuildIntegrationDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{215}
}

func (x *GuildIntegrationDeleteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildIntegrationDeleteInput) GetIntegrationID() string {
	if x != nil {
		return x.IntegrationID
	}
	return ""
}

type GuildIntegrationDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildIntegrationDeleteOutput) Reset() {
	*x = GuildIntegrationDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIntegrationDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIntegrationDeleteOutput) ProtoMessage() {}

func (x *GuildIntegrationDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIntegrationDeleteOutput.ProtoReflect.Descriptor instead.
func (*GuildIntegrationDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{216}
}

func (x *GuildIntegrationDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildIntegrationEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID           string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	IntegrationID     string `protobuf:"bytes,2,opt,name=integrationID,proto3" json:"integrationID,omitempty"`
	ExpireBehavior    int32  `protobuf:"varint,3,opt,name=expireBehavior,proto3" json:"expireBehavior,omitempty"`
	ExpireGracePeriod int32  `protobuf:"varint,4,opt,name=expireGracePeriod,proto3" json:"expireGracePeriod,omitempty"`
	EnableEmoticons   bool   `protobuf:"varint,5,opt,name=enableEmoticons,proto3" json:"enableEmoticons,omitempty"`
}

func (x *GuildIntegrationEditInput) Reset() {
	*x = GuildIntegrationEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIntegrationEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIntegrationEditInput) ProtoMessage() {}

func (x *GuildIntegrationEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIntegrationEditInput.ProtoReflect.Descriptor instead.
func (*GuildIntegrationEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{217}
}

func (x *GuildIntegrationEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildIntegrationEditInput) GetIntegrationID() string {
	if x != nil {
		return x.IntegrationID
	}
	return ""
}

func (x *GuildIntegrationEditInput) GetExpireBehavior() int32 {
	if x != nil {
		return x.ExpireBehavior
	}
	return 0
}

func (x *GuildIntegrationEditInput) GetExpireGracePeriod() int32 {
	if x != nil {
		return x.ExpireGracePeriod
	}
	return 0
}

func (x *GuildIntegrationEditInput) GetEnableEmoticons() bool {
	if x != nil {
		return x.EnableEmoticons
	}
	return false
}

type GuildIntegrationEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildIntegrationEditOutput) Reset() {
	*x = GuildIntegrationEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIntegrationEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIntegrationEditOutput) ProtoMessage() {}

func (x *GuildIntegrationEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIntegrationEditOutput.ProtoReflect.Descriptor instead.
func (*GuildIntegrationEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{218}
}

func (x *GuildIntegrationEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildIntegrationsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildIntegrationsInput) Reset() {
	*x = GuildIntegrationsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIntegrationsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIntegrationsInput) ProtoMessage() {}

func (x *GuildIntegrationsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIntegrationsInput.ProtoReflect.Descriptor instead.
func (*GuildIntegrationsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{219}
}

func (x *GuildIntegrationsInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildIntegrationsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Integration `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string        `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildIntegrationsOutput) Reset() {
	*x = GuildIntegrationsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildIntegrationsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildIntegrationsOutput) ProtoMessage() {}

func (x *GuildIntegrationsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildIntegrationsOutput.ProtoReflect.Descriptor instead.
func (*GuildIntegrationsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{220}
}

func (x *GuildIntegrationsOutput) GetSt() []*Integration {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildIntegrationsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildInvitesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildInvitesInput) Reset() {
	*x = GuildInvitesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildInvitesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildInvitesInput) ProtoMessage() {}

func (x *GuildInvitesInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildInvitesInput.ProtoReflect.Descriptor instead.
func (*GuildInvitesInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{221}
}

func (x *GuildInvitesInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildInvitesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Invite `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string   `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildInvitesOutput) Reset() {
	*x = GuildInvitesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildInvitesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildInvitesOutput) ProtoMessage() {}

func (x *GuildInvitesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildInvitesOutput.ProtoReflect.Descriptor instead.
func (*GuildInvitesOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{222}
}

func (x *GuildInvitesOutput) GetSt() []*Invite {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildInvitesOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildLeaveInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildLeaveInput) Reset() {
	*x = GuildLeaveInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildLeaveInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildLeaveInput) ProtoMessage() {}

func (x *GuildLeaveInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildLeaveInput.ProtoReflect.Descriptor instead.
func (*GuildLeaveInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{223}
}

func (x *GuildLeaveInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildLeaveOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildLeaveOutput) Reset() {
	*x = GuildLeaveOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildLeaveOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildLeaveOutput) ProtoMessage() {}

func (x *GuildLeaveOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildLeaveOutput.ProtoReflect.Descriptor instead.
func (*GuildLeaveOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{224}
}

func (x *GuildLeaveOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberAddInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string                `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string                `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Data    *GuildMemberAddParams `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GuildMemberAddInput) Reset() {
	*x = GuildMemberAddInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberAddInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberAddInput) ProtoMessage() {}

func (x *GuildMemberAddInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberAddInput.ProtoReflect.Descriptor instead.
func (*GuildMemberAddInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{225}
}

func (x *GuildMemberAddInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberAddInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildMemberAddInput) GetData() *GuildMemberAddParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type GuildMemberAddOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberAddOutput) Reset() {
	*x = GuildMemberAddOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberAddOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberAddOutput) ProtoMessage() {}

func (x *GuildMemberAddOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberAddOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberAddOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{226}
}

func (x *GuildMemberAddOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberAddParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string   `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	Nick        string   `protobuf:"bytes,2,opt,name=Nick,proto3" json:"Nick,omitempty"`
	Roles       []string `protobuf:"bytes,3,rep,name=Roles,proto3" json:"Roles,omitempty"`
	Mute        bool     `protobuf:"varint,4,opt,name=Mute,proto3" json:"Mute,omitempty"`
	Deaf        bool     `protobuf:"varint,5,opt,name=Deaf,proto3" json:"Deaf,omitempty"`
}

func (x *GuildMemberAddParams) Reset() {
	*x = GuildMemberAddParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberAddParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberAddParams) ProtoMessage() {}

func (x *GuildMemberAddParams) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberAddParams.ProtoReflect.Descriptor instead.
func (*GuildMemberAddParams) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{227}
}

func (x *GuildMemberAddParams) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GuildMemberAddParams) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *GuildMemberAddParams) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GuildMemberAddParams) GetMute() bool {
	if x != nil {
		return x.Mute
	}
	return false
}

func (x *GuildMemberAddParams) GetDeaf() bool {
	if x != nil {
		return x.Deaf
	}
	return false
}

type GuildMemberDeafenInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Deaf    bool   `protobuf:"varint,3,opt,name=deaf,proto3" json:"deaf,omitempty"`
}

func (x *GuildMemberDeafenInput) Reset() {
	*x = GuildMemberDeafenInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberDeafenInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberDeafenInput) ProtoMessage() {}

func (x *GuildMemberDeafenInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberDeafenInput.ProtoReflect.Descriptor instead.
func (*GuildMemberDeafenInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{228}
}

func (x *GuildMemberDeafenInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberDeafenInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildMemberDeafenInput) GetDeaf() bool {
	if x != nil {
		return x.Deaf
	}
	return false
}

type GuildMemberDeafenOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberDeafenOutput) Reset() {
	*x = GuildMemberDeafenOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberDeafenOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberDeafenOutput) ProtoMessage() {}

func (x *GuildMemberDeafenOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberDeafenOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberDeafenOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{229}
}

func (x *GuildMemberDeafenOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GuildMemberDeleteInput) Reset() {
	*x = GuildMemberDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberDeleteInput) ProtoMessage() {}

func (x *GuildMemberDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberDeleteInput.ProtoReflect.Descriptor instead.
func (*GuildMemberDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{230}
}

func (x *GuildMemberDeleteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberDeleteInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GuildMemberDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberDeleteOutput) Reset() {
	*x = GuildMemberDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberDeleteOutput) ProtoMessage() {}

func (x *GuildMemberDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberDeleteOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{231}
}

func (x *GuildMemberDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberDeleteWithReasonInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Reason  string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *GuildMemberDeleteWithReasonInput) Reset() {
	*x = GuildMemberDeleteWithReasonInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberDeleteWithReasonInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberDeleteWithReasonInput) ProtoMessage() {}

func (x *GuildMemberDeleteWithReasonInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberDeleteWithReasonInput.ProtoReflect.Descriptor instead.
func (*GuildMemberDeleteWithReasonInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{232}
}

func (x *GuildMemberDeleteWithReasonInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberDeleteWithReasonInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildMemberDeleteWithReasonInput) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type GuildMemberDeleteWithReasonOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberDeleteWithReasonOutput) Reset() {
	*x = GuildMemberDeleteWithReasonOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberDeleteWithReasonOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberDeleteWithReasonOutput) ProtoMessage() {}

func (x *GuildMemberDeleteWithReasonOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberDeleteWithReasonOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberDeleteWithReasonOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{233}
}

func (x *GuildMemberDeleteWithReasonOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberEditComplexInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string             `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string             `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Data    *GuildMemberParams `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GuildMemberEditComplexInput) Reset() {
	*x = GuildMemberEditComplexInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberEditComplexInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberEditComplexInput) ProtoMessage() {}

func (x *GuildMemberEditComplexInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberEditComplexInput.ProtoReflect.Descriptor instead.
func (*GuildMemberEditComplexInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{234}
}

func (x *GuildMemberEditComplexInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberEditComplexInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildMemberEditComplexInput) GetData() *GuildMemberParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type GuildMemberEditComplexOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Member `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberEditComplexOutput) Reset() {
	*x = GuildMemberEditComplexOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberEditComplexOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberEditComplexOutput) ProtoMessage() {}

func (x *GuildMemberEditComplexOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberEditComplexOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberEditComplexOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{235}
}

func (x *GuildMemberEditComplexOutput) GetSt() *Member {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildMemberEditComplexOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string             `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string             `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Data    *GuildMemberParams `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GuildMemberEditInput) Reset() {
	*x = GuildMemberEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberEditInput) ProtoMessage() {}

func (x *GuildMemberEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberEditInput.ProtoReflect.Descriptor instead.
func (*GuildMemberEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{236}
}

func (x *GuildMemberEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberEditInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildMemberEditInput) GetData() *GuildMemberParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type GuildMemberEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Member `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberEditOutput) Reset() {
	*x = GuildMemberEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberEditOutput) ProtoMessage() {}

func (x *GuildMemberEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberEditOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{237}
}

func (x *GuildMemberEditOutput) GetSt() *Member {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildMemberEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GuildMemberInput) Reset() {
	*x = GuildMemberInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberInput) ProtoMessage() {}

func (x *GuildMemberInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberInput.ProtoReflect.Descriptor instead.
func (*GuildMemberInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{238}
}

func (x *GuildMemberInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GuildMemberMoveInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID   string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID    string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	ChannelID string `protobuf:"bytes,3,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *GuildMemberMoveInput) Reset() {
	*x = GuildMemberMoveInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberMoveInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberMoveInput) ProtoMessage() {}

func (x *GuildMemberMoveInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberMoveInput.ProtoReflect.Descriptor instead.
func (*GuildMemberMoveInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{239}
}

func (x *GuildMemberMoveInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberMoveInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildMemberMoveInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type GuildMemberMoveOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberMoveOutput) Reset() {
	*x = GuildMemberMoveOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberMoveOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberMoveOutput) ProtoMessage() {}

func (x *GuildMemberMoveOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberMoveOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberMoveOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{240}
}

func (x *GuildMemberMoveOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberMuteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Mute    bool   `protobuf:"varint,3,opt,name=mute,proto3" json:"mute,omitempty"`
}

func (x *GuildMemberMuteInput) Reset() {
	*x = GuildMemberMuteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberMuteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberMuteInput) ProtoMessage() {}

func (x *GuildMemberMuteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberMuteInput.ProtoReflect.Descriptor instead.
func (*GuildMemberMuteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{241}
}

func (x *GuildMemberMuteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberMuteInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildMemberMuteInput) GetMute() bool {
	if x != nil {
		return x.Mute
	}
	return false
}

type GuildMemberMuteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberMuteOutput) Reset() {
	*x = GuildMemberMuteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberMuteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberMuteOutput) ProtoMessage() {}

func (x *GuildMemberMuteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberMuteOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberMuteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{242}
}

func (x *GuildMemberMuteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberNicknameInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID  string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID   string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *GuildMemberNicknameInput) Reset() {
	*x = GuildMemberNicknameInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberNicknameInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberNicknameInput) ProtoMessage() {}

func (x *GuildMemberNicknameInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberNicknameInput.ProtoReflect.Descriptor instead.
func (*GuildMemberNicknameInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{243}
}

func (x *GuildMemberNicknameInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberNicknameInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildMemberNicknameInput) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type GuildMemberNicknameOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberNicknameOutput) Reset() {
	*x = GuildMemberNicknameOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberNicknameOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberNicknameOutput) ProtoMessage() {}

func (x *GuildMemberNicknameOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberNicknameOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberNicknameOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{244}
}

func (x *GuildMemberNicknameOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Member `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberOutput) Reset() {
	*x = GuildMemberOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberOutput) ProtoMessage() {}

func (x *GuildMemberOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{245}
}

func (x *GuildMemberOutput) GetSt() *Member {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildMemberOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick                       string   `protobuf:"bytes,1,opt,name=Nick,proto3" json:"Nick,omitempty"`
	Roles                      []string `protobuf:"bytes,2,rep,name=Roles,proto3" json:"Roles,omitempty"`
	ChannelID                  string   `protobuf:"bytes,3,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	Mute                       bool     `protobuf:"varint,4,opt,name=Mute,proto3" json:"Mute,omitempty"`
	Deaf                       bool     `protobuf:"varint,5,opt,name=Deaf,proto3" json:"Deaf,omitempty"`
	CommunicationDisabledUntil *Time    `protobuf:"bytes,6,opt,name=CommunicationDisabledUntil,proto3" json:"CommunicationDisabledUntil,omitempty"`
}

func (x *GuildMemberParams) Reset() {
	*x = GuildMemberParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberParams) ProtoMessage() {}

func (x *GuildMemberParams) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberParams.ProtoReflect.Descriptor instead.
func (*GuildMemberParams) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{246}
}

func (x *GuildMemberParams) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *GuildMemberParams) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GuildMemberParams) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *GuildMemberParams) GetMute() bool {
	if x != nil {
		return x.Mute
	}
	return false
}

func (x *GuildMemberParams) GetDeaf() bool {
	if x != nil {
		return x.Deaf
	}
	return false
}

func (x *GuildMemberParams) GetCommunicationDisabledUntil() *Time {
	if x != nil {
		return x.CommunicationDisabledUntil
	}
	return nil
}

type GuildMemberRoleAddInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	RoleID  string `protobuf:"bytes,3,opt,name=roleID,proto3" json:"roleID,omitempty"`
}

func (x *GuildMemberRoleAddInput) Reset() {
	*x = GuildMemberRoleAddInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberRoleAddInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberRoleAddInput) ProtoMessage() {}

func (x *GuildMemberRoleAddInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberRoleAddInput.ProtoReflect.Descriptor instead.
func (*GuildMemberRoleAddInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{247}
}

func (x *GuildMemberRoleAddInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberRoleAddInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildMemberRoleAddInput) GetRoleID() string {
	if x != nil {
		return x.RoleID
	}
	return ""
}

type GuildMemberRoleAddOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberRoleAddOutput) Reset() {
	*x = GuildMemberRoleAddOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberRoleAddOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberRoleAddOutput) ProtoMessage() {}

func (x *GuildMemberRoleAddOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberRoleAddOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberRoleAddOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{248}
}

func (x *GuildMemberRoleAddOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberRoleRemoveInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	RoleID  string `protobuf:"bytes,3,opt,name=roleID,proto3" json:"roleID,omitempty"`
}

func (x *GuildMemberRoleRemoveInput) Reset() {
	*x = GuildMemberRoleRemoveInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberRoleRemoveInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberRoleRemoveInput) ProtoMessage() {}

func (x *GuildMemberRoleRemoveInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberRoleRemoveInput.ProtoReflect.Descriptor instead.
func (*GuildMemberRoleRemoveInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{249}
}

func (x *GuildMemberRoleRemoveInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberRoleRemoveInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildMemberRoleRemoveInput) GetRoleID() string {
	if x != nil {
		return x.RoleID
	}
	return ""
}

type GuildMemberRoleRemoveOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberRoleRemoveOutput) Reset() {
	*x = GuildMemberRoleRemoveOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberRoleRemoveOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberRoleRemoveOutput) ProtoMessage() {}

func (x *GuildMemberRoleRemoveOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberRoleRemoveOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberRoleRemoveOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{250}
}

func (x *GuildMemberRoleRemoveOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMemberTimeoutInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserID  string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Until   *Time  `protobuf:"bytes,3,opt,name=until,proto3" json:"until,omitempty"`
}

func (x *GuildMemberTimeoutInput) Reset() {
	*x = GuildMemberTimeoutInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberTimeoutInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberTimeoutInput) ProtoMessage() {}

func (x *GuildMemberTimeoutInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberTimeoutInput.ProtoReflect.Descriptor instead.
func (*GuildMemberTimeoutInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{251}
}

func (x *GuildMemberTimeoutInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMemberTimeoutInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GuildMemberTimeoutInput) GetUntil() *Time {
	if x != nil {
		return x.Until
	}
	return nil
}

type GuildMemberTimeoutOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMemberTimeoutOutput) Reset() {
	*x = GuildMemberTimeoutOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberTimeoutOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberTimeoutOutput) ProtoMessage() {}

func (x *GuildMemberTimeoutOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberTimeoutOutput.ProtoReflect.Descriptor instead.
func (*GuildMemberTimeoutOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{252}
}

func (x *GuildMemberTimeoutOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMembersInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	After   string `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	Limit   int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GuildMembersInput) Reset() {
	*x = GuildMembersInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMembersInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMembersInput) ProtoMessage() {}

func (x *GuildMembersInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMembersInput.ProtoReflect.Descriptor instead.
func (*GuildMembersInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{253}
}

func (x *GuildMembersInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMembersInput) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *GuildMembersInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GuildMembersOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Member `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string   `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMembersOutput) Reset() {
	*x = GuildMembersOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMembersOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMembersOutput) ProtoMessage() {}

func (x *GuildMembersOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMembersOutput.ProtoReflect.Descriptor instead.
func (*GuildMembersOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{254}
}

func (x *GuildMembersOutput) GetSt() []*Member {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildMembersOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildMembersSearchInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Query   string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit   int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GuildMembersSearchInput) Reset() {
	*x = GuildMembersSearchInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMembersSearchInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMembersSearchInput) ProtoMessage() {}

func (x *GuildMembersSearchInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMembersSearchInput.ProtoReflect.Descriptor instead.
func (*GuildMembersSearchInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{255}
}

func (x *GuildMembersSearchInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildMembersSearchInput) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GuildMembersSearchInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GuildMembersSearchOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Member `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string   `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildMembersSearchOutput) Reset() {
	*x = GuildMembersSearchOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMembersSearchOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMembersSearchOutput) ProtoMessage() {}

func (x *GuildMembersSearchOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMembersSearchOutput.ProtoReflect.Descriptor instead.
func (*GuildMembersSearchOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{256}
}

func (x *GuildMembersSearchOutput) GetSt() []*Member {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildMembersSearchOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Guild  `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildOutput) Reset() {
	*x = GuildOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildOutput) ProtoMessage() {}

func (x *GuildOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildOutput.ProtoReflect.Descriptor instead.
func (*GuildOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{257}
}

func (x *GuildOutput) GetSt() *Guild {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                        string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Region                      string   `protobuf:"bytes,2,opt,name=Region,proto3" json:"Region,omitempty"`
	VerificationLevel           int32    `protobuf:"varint,3,opt,name=VerificationLevel,proto3" json:"VerificationLevel,omitempty"`
	DefaultMessageNotifications int32    `protobuf:"varint,4,opt,name=DefaultMessageNotifications,proto3" json:"DefaultMessageNotifications,omitempty"`
	ExplicitContentFilter       int32    `protobuf:"varint,5,opt,name=ExplicitContentFilter,proto3" json:"ExplicitContentFilter,omitempty"`
	AfkChannelID                string   `protobuf:"bytes,6,opt,name=AfkChannelID,proto3" json:"AfkChannelID,omitempty"`
	AfkTimeout                  int32    `protobuf:"varint,7,opt,name=AfkTimeout,proto3" json:"AfkTimeout,omitempty"`
	Icon                        string   `protobuf:"bytes,8,opt,name=Icon,proto3" json:"Icon,omitempty"`
	OwnerID                     string   `protobuf:"bytes,9,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	Splash                      string   `protobuf:"bytes,10,opt,name=Splash,proto3" json:"Splash,omitempty"`
	DiscoverySplash             string   `protobuf:"bytes,11,opt,name=DiscoverySplash,proto3" json:"DiscoverySplash,omitempty"`
	Banner                      string   `protobuf:"bytes,12,opt,name=Banner,proto3" json:"Banner,omitempty"`
	SystemChannelID             string   `protobuf:"bytes,13,opt,name=SystemChannelID,proto3" json:"SystemChannelID,omitempty"`
	SystemChannelFlags          int32    `protobuf:"varint,14,opt,name=SystemChannelFlags,proto3" json:"SystemChannelFlags,omitempty"`
	RulesChannelID              string   `protobuf:"bytes,15,opt,name=RulesChannelID,proto3" json:"RulesChannelID,omitempty"`
	PublicUpdatesChannelID      string   `protobuf:"bytes,16,opt,name=PublicUpdatesChannelID,proto3" json:"PublicUpdatesChannelID,omitempty"`
	PreferredLocale             string   `protobuf:"bytes,17,opt,name=PreferredLocale,proto3" json:"PreferredLocale,omitempty"`
	Features                    []string `protobuf:"bytes,18,rep,name=Features,proto3" json:"Features,omitempty"`
	Description                 string   `protobuf:"bytes,19,opt,name=Description,proto3" json:"Description,omitempty"`
	PremiumProgressBarEnabled   bool     `protobuf:"varint,20,opt,name=PremiumProgressBarEnabled,proto3" json:"PremiumProgressBarEnabled,omitempty"`
}

func (x *GuildParams) Reset() {
	*x = GuildParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildParams) ProtoMessage() {}

func (x *GuildParams) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildParams.ProtoReflect.Descriptor instead.
func (*GuildParams) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{258}
}

func (x *GuildParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildParams) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GuildParams) GetVerificationLevel() int32 {
	if x != nil {
		return x.VerificationLevel
	}
	return 0
}

func (x *GuildParams) GetDefaultMessageNotifications() int32 {
	if x != nil {
		return x.DefaultMessageNotifications
	}
	return 0
}

func (x *GuildParams) GetExplicitContentFilter() int32 {
	if x != nil {
		return x.ExplicitContentFilter
	}
	return 0
}

func (x *GuildParams) GetAfkChannelID() string {
	if x != nil {
		return x.AfkChannelID
	}
	return ""
}

func (x *GuildParams) GetAfkTimeout() int32 {
	if x != nil {
		return x.AfkTimeout
	}
	return 0
}

func (x *GuildParams) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GuildParams) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *GuildParams) GetSplash() string {
	if x != nil {
		return x.Splash
	}
	return ""
}

func (x *GuildParams) GetDiscoverySplash() string {
	if x != nil {
		return x.DiscoverySplash
	}
	return ""
}

func (x *GuildParams) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *GuildParams) GetSystemChannelID() string {
	if x != nil {
		return x.SystemChannelID
	}
	return ""
}

func (x *GuildParams) GetSystemChannelFlags() int32 {
	if x != nil {
		return x.SystemChannelFlags
	}
	return 0
}

func (x *GuildParams) GetRulesChannelID() string {
	if x != nil {
		return x.RulesChannelID
	}
	return ""
}

func (x *GuildParams) GetPublicUpdatesChannelID() string {
	if x != nil {
		return x.PublicUpdatesChannelID
	}
	return ""
}

func (x *GuildParams) GetPreferredLocale() string {
	if x != nil {
		return x.PreferredLocale
	}
	return ""
}

func (x *GuildParams) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *GuildParams) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GuildParams) GetPremiumProgressBarEnabled() bool {
	if x != nil {
		return x.PremiumProgressBarEnabled
	}
	return false
}

type GuildPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                       string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                     string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Icon                     string   `protobuf:"bytes,3,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Splash                   string   `protobuf:"bytes,4,opt,name=Splash,proto3" json:"Splash,omitempty"`
	DiscoverySplash          string   `protobuf:"bytes,5,opt,name=DiscoverySplash,proto3" json:"DiscoverySplash,omitempty"`
	Emojis                   []*Emoji `protobuf:"bytes,6,rep,name=Emojis,proto3" json:"Emojis,omitempty"`
	Features                 []string `protobuf:"bytes,7,rep,name=Features,proto3" json:"Features,omitempty"`
	ApproximateMemberCount   int32    `protobuf:"varint,8,opt,name=ApproximateMemberCount,proto3" json:"ApproximateMemberCount,omitempty"`
	ApproximatePresenceCount int32    `protobuf:"varint,9,opt,name=ApproximatePresenceCount,proto3" json:"ApproximatePresenceCount,omitempty"`
	Description              string   `protobuf:"bytes,10,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *GuildPreview) Reset() {
	*x = GuildPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildPreview) ProtoMessage() {}

func (x *GuildPreview) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildPreview.ProtoReflect.Descriptor instead.
func (*GuildPreview) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{259}
}

func (x *GuildPreview) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GuildPreview) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildPreview) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GuildPreview) GetSplash() string {
	if x != nil {
		return x.Splash
	}
	return ""
}

func (x *GuildPreview) GetDiscoverySplash() string {
	if x != nil {
		return x.DiscoverySplash
	}
	return ""
}

func (x *GuildPreview) GetEmojis() []*Emoji {
	if x != nil {
		return x.Emojis
	}
	return nil
}

func (x *GuildPreview) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *GuildPreview) GetApproximateMemberCount() int32 {
	if x != nil {
		return x.ApproximateMemberCount
	}
	return 0
}

func (x *GuildPreview) GetApproximatePresenceCount() int32 {
	if x != nil {
		return x.ApproximatePresenceCount
	}
	return 0
}

func (x *GuildPreview) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GuildPreviewInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildPreviewInput) Reset() {
	*x = GuildPreviewInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildPreviewInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildPreviewInput) ProtoMessage() {}

func (x *GuildPreviewInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildPreviewInput.ProtoReflect.Descriptor instead.
func (*GuildPreviewInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{260}
}

func (x *GuildPreviewInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildPreviewOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *GuildPreview `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string       `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildPreviewOutput) Reset() {
	*x = GuildPreviewOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildPreviewOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildPreviewOutput) ProtoMessage() {}

func (x *GuildPreviewOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildPreviewOutput.ProtoReflect.Descriptor instead.
func (*GuildPreviewOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{261}
}

func (x *GuildPreviewOutput) GetSt() *GuildPreview {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildPreviewOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildPruneCountInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Days    uint32 `protobuf:"varint,2,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *GuildPruneCountInput) Reset() {
	*x = GuildPruneCountInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildPruneCountInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildPruneCountInput) ProtoMessage() {}

func (x *GuildPruneCountInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildPruneCountInput.ProtoReflect.Descriptor instead.
func (*GuildPruneCountInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{262}
}

func (x *GuildPruneCountInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildPruneCountInput) GetDays() uint32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GuildPruneCountOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint32  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Err   *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildPruneCountOutput) Reset() {
	*x = GuildPruneCountOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildPruneCountOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildPruneCountOutput) ProtoMessage() {}

func (x *GuildPruneCountOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildPruneCountOutput.ProtoReflect.Descriptor instead.
func (*GuildPruneCountOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{263}
}

func (x *GuildPruneCountOutput) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GuildPruneCountOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildPruneInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Days    uint32 `protobuf:"varint,2,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *GuildPruneInput) Reset() {
	*x = GuildPruneInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildPruneInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildPruneInput) ProtoMessage() {}

func (x *GuildPruneInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildPruneInput.ProtoReflect.Descriptor instead.
func (*GuildPruneInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{264}
}

func (x *GuildPruneInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildPruneInput) GetDays() uint32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GuildPruneOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint32  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Err   *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildPruneOutput) Reset() {
	*x = GuildPruneOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildPruneOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildPruneOutput) ProtoMessage() {}

func (x *GuildPruneOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildPruneOutput.ProtoReflect.Descriptor instead.
func (*GuildPruneOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{265}
}

func (x *GuildPruneOutput) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GuildPruneOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildRoleCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string      `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Data    *RoleParams `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GuildRoleCreateInput) Reset() {
	*x = GuildRoleCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRoleCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRoleCreateInput) ProtoMessage() {}

func (x *GuildRoleCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRoleCreateInput.ProtoReflect.Descriptor instead.
func (*GuildRoleCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{266}
}

func (x *GuildRoleCreateInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildRoleCreateInput) GetData() *RoleParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type GuildRoleCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Role   `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildRoleCreateOutput) Reset() {
	*x = GuildRoleCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRoleCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRoleCreateOutput) ProtoMessage() {}

func (x *GuildRoleCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRoleCreateOutput.ProtoReflect.Descriptor instead.
func (*GuildRoleCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{267}
}

func (x *GuildRoleCreateOutput) GetSt() *Role {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildRoleCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildRoleDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	RoleID  string `protobuf:"bytes,2,opt,name=roleID,proto3" json:"roleID,omitempty"`
}

func (x *GuildRoleDeleteInput) Reset() {
	*x = GuildRoleDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRoleDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRoleDeleteInput) ProtoMessage() {}

func (x *GuildRoleDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRoleDeleteInput.ProtoReflect.Descriptor instead.
func (*GuildRoleDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{268}
}

func (x *GuildRoleDeleteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildRoleDeleteInput) GetRoleID() string {
	if x != nil {
		return x.RoleID
	}
	return ""
}

type GuildRoleDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildRoleDeleteOutput) Reset() {
	*x = GuildRoleDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRoleDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRoleDeleteOutput) ProtoMessage() {}

func (x *GuildRoleDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRoleDeleteOutput.ProtoReflect.Descriptor instead.
func (*GuildRoleDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{269}
}

func (x *GuildRoleDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildRoleEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string      `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	RoleID  string      `protobuf:"bytes,2,opt,name=roleID,proto3" json:"roleID,omitempty"`
	Data    *RoleParams `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GuildRoleEditInput) Reset() {
	*x = GuildRoleEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRoleEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRoleEditInput) ProtoMessage() {}

func (x *GuildRoleEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRoleEditInput.ProtoReflect.Descriptor instead.
func (*GuildRoleEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{270}
}

func (x *GuildRoleEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildRoleEditInput) GetRoleID() string {
	if x != nil {
		return x.RoleID
	}
	return ""
}

func (x *GuildRoleEditInput) GetData() *RoleParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type GuildRoleEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Role   `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildRoleEditOutput) Reset() {
	*x = GuildRoleEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRoleEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRoleEditOutput) ProtoMessage() {}

func (x *GuildRoleEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRoleEditOutput.ProtoReflect.Descriptor instead.
func (*GuildRoleEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{271}
}

func (x *GuildRoleEditOutput) GetSt() *Role {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildRoleEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildRoleReorderInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string  `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Roles   []*Role `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GuildRoleReorderInput) Reset() {
	*x = GuildRoleReorderInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRoleReorderInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRoleReorderInput) ProtoMessage() {}

func (x *GuildRoleReorderInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRoleReorderInput.ProtoReflect.Descriptor instead.
func (*GuildRoleReorderInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{272}
}

func (x *GuildRoleReorderInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildRoleReorderInput) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GuildRoleReorderOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Role `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildRoleReorderOutput) Reset() {
	*x = GuildRoleReorderOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRoleReorderOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRoleReorderOutput) ProtoMessage() {}

func (x *GuildRoleReorderOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRoleReorderOutput.ProtoReflect.Descriptor instead.
func (*GuildRoleReorderOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{273}
}

func (x *GuildRoleReorderOutput) GetSt() []*Role {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildRoleReorderOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildRolesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildRolesInput) Reset() {
	*x = GuildRolesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRolesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRolesInput) ProtoMessage() {}

func (x *GuildRolesInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRolesInput.ProtoReflect.Descriptor instead.
func (*GuildRolesInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{274}
}

func (x *GuildRolesInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildRolesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Role `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildRolesOutput) Reset() {
	*x = GuildRolesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRolesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRolesOutput) ProtoMessage() {}

func (x *GuildRolesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRolesOutput.ProtoReflect.Descriptor instead.
func (*GuildRolesOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{275}
}

func (x *GuildRolesOutput) GetSt() []*Role {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildRolesOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildScheduledEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 string                             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	GuildID            string                             `protobuf:"bytes,2,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	ChannelID          string                             `protobuf:"bytes,3,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	CreatorID          string                             `protobuf:"bytes,4,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	Name               string                             `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	Description        string                             `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	ScheduledStartTime *Time                              `protobuf:"bytes,7,opt,name=ScheduledStartTime,proto3" json:"ScheduledStartTime,omitempty"`
	ScheduledEndTime   *Time                              `protobuf:"bytes,8,opt,name=ScheduledEndTime,proto3" json:"ScheduledEndTime,omitempty"`
	PrivacyLevel       int32                              `protobuf:"varint,9,opt,name=PrivacyLevel,proto3" json:"PrivacyLevel,omitempty"`
	Status             int32                              `protobuf:"varint,10,opt,name=Status,proto3" json:"Status,omitempty"`
	EntityType         int32                              `protobuf:"varint,11,opt,name=EntityType,proto3" json:"EntityType,omitempty"`
	EntityID           string                             `protobuf:"bytes,12,opt,name=EntityID,proto3" json:"EntityID,omitempty"`
	EntityMetadata     *GuildScheduledEventEntityMetadata `protobuf:"bytes,13,opt,name=EntityMetadata,proto3" json:"EntityMetadata,omitempty"`
	Creator            *User                              `protobuf:"bytes,14,opt,name=Creator,proto3" json:"Creator,omitempty"`
	UserCount          int32                              `protobuf:"varint,15,opt,name=UserCount,proto3" json:"UserCount,omitempty"`
	Image              string                             `protobuf:"bytes,16,opt,name=Image,proto3" json:"Image,omitempty"`
}

func (x *GuildScheduledEvent) Reset() {
	*x = GuildScheduledEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEvent) ProtoMessage() {}

func (x *GuildScheduledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEvent.ProtoReflect.Descriptor instead.
func (*GuildScheduledEvent) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{276}
}

func (x *GuildScheduledEvent) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GuildScheduledEvent) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildScheduledEvent) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *GuildScheduledEvent) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *GuildScheduledEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildScheduledEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GuildScheduledEvent) GetScheduledStartTime() *Time {
	if x != nil {
		return x.ScheduledStartTime
	}
	return nil
}

func (x *GuildScheduledEvent) GetScheduledEndTime() *Time {
	if x != nil {
		return x.ScheduledEndTime
	}
	return nil
}

func (x *GuildScheduledEvent) GetPrivacyLevel() int32 {
	if x != nil {
		return x.PrivacyLevel
	}
	return 0
}

func (x *GuildScheduledEvent) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GuildScheduledEvent) GetEntityType() int32 {
	if x != nil {
		return x.EntityType
	}
	return 0
}

func (x *GuildScheduledEvent) GetEntityID() string {
	if x != nil {
		return x.EntityID
	}
	return ""
}

func (x *GuildScheduledEvent) GetEntityMetadata() *GuildScheduledEventEntityMetadata {
	if x != nil {
		return x.EntityMetadata
	}
	return nil
}

func (x *GuildScheduledEvent) GetCreator() *User {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *GuildScheduledEvent) GetUserCount() int32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *GuildScheduledEvent) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type GuildScheduledEventCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string                     `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Event   *GuildScheduledEventParams `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *GuildScheduledEventCreateInput) Reset() {
	*x = GuildScheduledEventCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventCreateInput) ProtoMessage() {}

func (x *GuildScheduledEventCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventCreateInput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{277}
}

func (x *GuildScheduledEventCreateInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildScheduledEventCreateInput) GetEvent() *GuildScheduledEventParams {
	if x != nil {
		return x.Event
	}
	return nil
}

type GuildScheduledEventCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *GuildScheduledEvent `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string              `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildScheduledEventCreateOutput) Reset() {
	*x = GuildScheduledEventCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventCreateOutput) ProtoMessage() {}

func (x *GuildScheduledEventCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventCreateOutput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{278}
}

func (x *GuildScheduledEventCreateOutput) GetSt() *GuildScheduledEvent {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildScheduledEventCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildScheduledEventDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	EventID string `protobuf:"bytes,2,opt,name=eventID,proto3" json:"eventID,omitempty"`
}

func (x *GuildScheduledEventDeleteInput) Reset() {
	*x = GuildScheduledEventDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventDeleteInput) ProtoMessage() {}

func (x *GuildScheduledEventDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventDeleteInput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{279}
}

func (x *GuildScheduledEventDeleteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildScheduledEventDeleteInput) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

type GuildScheduledEventDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildScheduledEventDeleteOutput) Reset() {
	*x = GuildScheduledEventDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventDeleteOutput) ProtoMessage() {}

func (x *GuildScheduledEventDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventDeleteOutput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{280}
}

func (x *GuildScheduledEventDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildScheduledEventEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string                     `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	EventID string                     `protobuf:"bytes,2,opt,name=eventID,proto3" json:"eventID,omitempty"`
	Event   *GuildScheduledEventParams `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *GuildScheduledEventEditInput) Reset() {
	*x = GuildScheduledEventEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventEditInput) ProtoMessage() {}

func (x *GuildScheduledEventEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventEditInput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{281}
}

func (x *GuildScheduledEventEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildScheduledEventEditInput) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *GuildScheduledEventEditInput) GetEvent() *GuildScheduledEventParams {
	if x != nil {
		return x.Event
	}
	return nil
}

type GuildScheduledEventEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *GuildScheduledEvent `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string              `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildScheduledEventEditOutput) Reset() {
	*x = GuildScheduledEventEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventEditOutput) ProtoMessage() {}

func (x *GuildScheduledEventEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventEditOutput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{282}
}

func (x *GuildScheduledEventEditOutput) GetSt() *GuildScheduledEvent {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildScheduledEventEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildScheduledEventEntityMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=Location,proto3" json:"Location,omitempty"`
}

func (x *GuildScheduledEventEntityMetadata) Reset() {
	*x = GuildScheduledEventEntityMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventEntityMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventEntityMetadata) ProtoMessage() {}

func (x *GuildScheduledEventEntityMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventEntityMetadata.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventEntityMetadata) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{283}
}

func (x *GuildScheduledEventEntityMetadata) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GuildScheduledEventInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID   string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	EventID   string `protobuf:"bytes,2,opt,name=eventID,proto3" json:"eventID,omitempty"`
	UserCount bool   `protobuf:"varint,3,opt,name=userCount,proto3" json:"userCount,omitempty"`
}

func (x *GuildScheduledEventInput) Reset() {
	*x = GuildScheduledEventInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventInput) ProtoMessage() {}

func (x *GuildScheduledEventInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventInput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{284}
}

func (x *GuildScheduledEventInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildScheduledEventInput) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *GuildScheduledEventInput) GetUserCount() bool {
	if x != nil {
		return x.UserCount
	}
	return false
}

type GuildScheduledEventOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *GuildScheduledEvent `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string              `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildScheduledEventOutput) Reset() {
	*x = GuildScheduledEventOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventOutput) ProtoMessage() {}

func (x *GuildScheduledEventOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventOutput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{285}
}

func (x *GuildScheduledEventOutput) GetSt() *GuildScheduledEvent {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildScheduledEventOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildScheduledEventParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID          string                             `protobuf:"bytes,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	Name               string                             `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description        string                             `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	ScheduledStartTime *Time                              `protobuf:"bytes,4,opt,name=ScheduledStartTime,proto3" json:"ScheduledStartTime,omitempty"`
	ScheduledEndTime   *Time                              `protobuf:"bytes,5,opt,name=ScheduledEndTime,proto3" json:"ScheduledEndTime,omitempty"`
	PrivacyLevel       int32                              `protobuf:"varint,6,opt,name=PrivacyLevel,proto3" json:"PrivacyLevel,omitempty"`
	Status             int32                              `protobuf:"varint,7,opt,name=Status,proto3" json:"Status,omitempty"`
	EntityType         int32                              `protobuf:"varint,8,opt,name=EntityType,proto3" json:"EntityType,omitempty"`
	EntityMetadata     *GuildScheduledEventEntityMetadata `protobuf:"bytes,9,opt,name=EntityMetadata,proto3" json:"EntityMetadata,omitempty"`
	Image              string                             `protobuf:"bytes,10,opt,name=Image,proto3" json:"Image,omitempty"`
}

func (x *GuildScheduledEventParams) Reset() {
	*x = GuildScheduledEventParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventParams) ProtoMessage() {}

func (x *GuildScheduledEventParams) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventParams.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventParams) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{286}
}

func (x *GuildScheduledEventParams) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *GuildScheduledEventParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildScheduledEventParams) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GuildScheduledEventParams) GetScheduledStartTime() *Time {
	if x != nil {
		return x.ScheduledStartTime
	}
	return nil
}

func (x *GuildScheduledEventParams) GetScheduledEndTime() *Time {
	if x != nil {
		return x.ScheduledEndTime
	}
	return nil
}

func (x *GuildScheduledEventParams) GetPrivacyLevel() int32 {
	if x != nil {
		return x.PrivacyLevel
	}
	return 0
}

func (x *GuildScheduledEventParams) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GuildScheduledEventParams) GetEntityType() int32 {
	if x != nil {
		return x.EntityType
	}
	return 0
}

func (x *GuildScheduledEventParams) GetEntityMetadata() *GuildScheduledEventEntityMetadata {
	if x != nil {
		return x.EntityMetadata
	}
	return nil
}

func (x *GuildScheduledEventParams) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type GuildScheduledEventUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildScheduledEventID string  `protobuf:"bytes,1,opt,name=GuildScheduledEventID,proto3" json:"GuildScheduledEventID,omitempty"`
	User                  *User   `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	Member                *Member `protobuf:"bytes,3,opt,name=Member,proto3" json:"Member,omitempty"`
}

func (x *GuildScheduledEventUser) Reset() {
	*x = GuildScheduledEventUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventUser) ProtoMessage() {}

func (x *GuildScheduledEventUser) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventUser.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventUser) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{287}
}

func (x *GuildScheduledEventUser) GetGuildScheduledEventID() string {
	if x != nil {
		return x.GuildScheduledEventID
	}
	return ""
}

func (x *GuildScheduledEventUser) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GuildScheduledEventUser) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type GuildScheduledEventUsersInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID    string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	EventID    string `protobuf:"bytes,2,opt,name=eventID,proto3" json:"eventID,omitempty"`
	Limit      int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	WithMember bool   `protobuf:"varint,4,opt,name=withMember,proto3" json:"withMember,omitempty"`
	BeforeID   string `protobuf:"bytes,5,opt,name=beforeID,proto3" json:"beforeID,omitempty"`
	AfterID    string `protobuf:"bytes,6,opt,name=afterID,proto3" json:"afterID,omitempty"`
}

func (x *GuildScheduledEventUsersInput) Reset() {
	*x = GuildScheduledEventUsersInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventUsersInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventUsersInput) ProtoMessage() {}

func (x *GuildScheduledEventUsersInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventUsersInput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventUsersInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{288}
}

func (x *GuildScheduledEventUsersInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildScheduledEventUsersInput) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *GuildScheduledEventUsersInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GuildScheduledEventUsersInput) GetWithMember() bool {
	if x != nil {
		return x.WithMember
	}
	return false
}

func (x *GuildScheduledEventUsersInput) GetBeforeID() string {
	if x != nil {
		return x.BeforeID
	}
	return ""
}

func (x *GuildScheduledEventUsersInput) GetAfterID() string {
	if x != nil {
		return x.AfterID
	}
	return ""
}

type GuildScheduledEventUsersOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*GuildScheduledEventUser `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string                    `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildScheduledEventUsersOutput) Reset() {
	*x = GuildScheduledEventUsersOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventUsersOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventUsersOutput) ProtoMessage() {}

func (x *GuildScheduledEventUsersOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventUsersOutput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventUsersOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{289}
}

func (x *GuildScheduledEventUsersOutput) GetSt() []*GuildScheduledEventUser {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildScheduledEventUsersOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildScheduledEventsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID   string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserCount bool   `protobuf:"varint,2,opt,name=userCount,proto3" json:"userCount,omitempty"`
}

func (x *GuildScheduledEventsInput) Reset() {
	*x = GuildScheduledEventsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventsInput) ProtoMessage() {}

func (x *GuildScheduledEventsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventsInput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{290}
}

func (x *GuildScheduledEventsInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildScheduledEventsInput) GetUserCount() bool {
	if x != nil {
		return x.UserCount
	}
	return false
}

type GuildScheduledEventsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*GuildScheduledEvent `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string                `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildScheduledEventsOutput) Reset() {
	*x = GuildScheduledEventsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildScheduledEventsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildScheduledEventsOutput) ProtoMessage() {}

func (x *GuildScheduledEventsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildScheduledEventsOutput.ProtoReflect.Descriptor instead.
func (*GuildScheduledEventsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{291}
}

func (x *GuildScheduledEventsOutput) GetSt() []*GuildScheduledEvent {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildScheduledEventsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildSplashInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildSplashInput) Reset() {
	*x = GuildSplashInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildSplashInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildSplashInput) ProtoMessage() {}

func (x *GuildSplashInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildSplashInput.ProtoReflect.Descriptor instead.
func (*GuildSplashInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{292}
}

func (x *GuildSplashInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildSplashOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Img *Image  `protobuf:"bytes,1,opt,name=img,proto3" json:"img,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildSplashOutput) Reset() {
	*x = GuildSplashOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[293]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildSplashOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildSplashOutput) ProtoMessage() {}

func (x *GuildSplashOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[293]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildSplashOutput.ProtoReflect.Descriptor instead.
func (*GuildSplashOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{293}
}

func (x *GuildSplashOutput) GetImg() *Image {
	if x != nil {
		return x.Img
	}
	return nil
}

func (x *GuildSplashOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                  string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Name                  string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description           string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	UsageCount            int32  `protobuf:"varint,4,opt,name=UsageCount,proto3" json:"UsageCount,omitempty"`
	CreatorID             string `protobuf:"bytes,5,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	Creator               *User  `protobuf:"bytes,6,opt,name=Creator,proto3" json:"Creator,omitempty"`
	CreatedAt             *Time  `protobuf:"bytes,7,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt             *Time  `protobuf:"bytes,8,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	SourceGuildID         string `protobuf:"bytes,9,opt,name=SourceGuildID,proto3" json:"SourceGuildID,omitempty"`
	SerializedSourceGuild *Guild `protobuf:"bytes,10,opt,name=SerializedSourceGuild,proto3" json:"SerializedSourceGuild,omitempty"`
	IsDirty               bool   `protobuf:"varint,11,opt,name=IsDirty,proto3" json:"IsDirty,omitempty"`
}

func (x *GuildTemplate) Reset() {
	*x = GuildTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[294]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplate) ProtoMessage() {}

func (x *GuildTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[294]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplate.ProtoReflect.Descriptor instead.
func (*GuildTemplate) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{294}
}

func (x *GuildTemplate) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GuildTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GuildTemplate) GetUsageCount() int32 {
	if x != nil {
		return x.UsageCount
	}
	return 0
}

func (x *GuildTemplate) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *GuildTemplate) GetCreator() *User {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *GuildTemplate) GetCreatedAt() *Time {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GuildTemplate) GetUpdatedAt() *Time {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GuildTemplate) GetSourceGuildID() string {
	if x != nil {
		return x.SourceGuildID
	}
	return ""
}

func (x *GuildTemplate) GetSerializedSourceGuild() *Guild {
	if x != nil {
		return x.SerializedSourceGuild
	}
	return nil
}

func (x *GuildTemplate) GetIsDirty() bool {
	if x != nil {
		return x.IsDirty
	}
	return false
}

type GuildTemplateCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string               `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Data    *GuildTemplateParams `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GuildTemplateCreateInput) Reset() {
	*x = GuildTemplateCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[295]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplateCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplateCreateInput) ProtoMessage() {}

func (x *GuildTemplateCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[295]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplateCreateInput.ProtoReflect.Descriptor instead.
func (*GuildTemplateCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{295}
}

func (x *GuildTemplateCreateInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildTemplateCreateInput) GetData() *GuildTemplateParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type GuildTemplateCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St *GuildTemplate `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
}

func (x *GuildTemplateCreateOutput) Reset() {
	*x = GuildTemplateCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[296]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplateCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplateCreateOutput) ProtoMessage() {}

func (x *GuildTemplateCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[296]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplateCreateOutput.ProtoReflect.Descriptor instead.
func (*GuildTemplateCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{296}
}

func (x *GuildTemplateCreateOutput) GetSt() *GuildTemplate {
	if x != nil {
		return x.St
	}
	return nil
}

type GuildTemplateDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID      string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	TemplateCode string `protobuf:"bytes,2,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
}

func (x *GuildTemplateDeleteInput) Reset() {
	*x = GuildTemplateDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[297]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplateDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplateDeleteInput) ProtoMessage() {}

func (x *GuildTemplateDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[297]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplateDeleteInput.ProtoReflect.Descriptor instead.
func (*GuildTemplateDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{297}
}

func (x *GuildTemplateDeleteInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildTemplateDeleteInput) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

type GuildTemplateDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildTemplateDeleteOutput) Reset() {
	*x = GuildTemplateDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[298]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplateDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplateDeleteOutput) ProtoMessage() {}

func (x *GuildTemplateDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[298]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplateDeleteOutput.ProtoReflect.Descriptor instead.
func (*GuildTemplateDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{298}
}

func (x *GuildTemplateDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildTemplateEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID      string               `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	TemplateCode string               `protobuf:"bytes,2,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
	Data         *GuildTemplateParams `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GuildTemplateEditInput) Reset() {
	*x = GuildTemplateEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[299]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplateEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplateEditInput) ProtoMessage() {}

func (x *GuildTemplateEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[299]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplateEditInput.ProtoReflect.Descriptor instead.
func (*GuildTemplateEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{299}
}

func (x *GuildTemplateEditInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildTemplateEditInput) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *GuildTemplateEditInput) GetData() *GuildTemplateParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type GuildTemplateEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *GuildTemplate `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string        `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildTemplateEditOutput) Reset() {
	*x = GuildTemplateEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[300]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplateEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplateEditOutput) ProtoMessage() {}

func (x *GuildTemplateEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[300]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplateEditOutput.ProtoReflect.Descriptor instead.
func (*GuildTemplateEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{300}
}

func (x *GuildTemplateEditOutput) GetSt() *GuildTemplate {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildTemplateEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildTemplateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateCode string `protobuf:"bytes,1,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
}

func (x *GuildTemplateInput) Reset() {
	*x = GuildTemplateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[301]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplateInput) ProtoMessage() {}

func (x *GuildTemplateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[301]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplateInput.ProtoReflect.Descriptor instead.
func (*GuildTemplateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{301}
}

func (x *GuildTemplateInput) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

type GuildTemplateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *GuildTemplate `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string        `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildTemplateOutput) Reset() {
	*x = GuildTemplateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[302]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplateOutput) ProtoMessage() {}

func (x *GuildTemplateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[302]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplateOutput.ProtoReflect.Descriptor instead.
func (*GuildTemplateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{302}
}

func (x *GuildTemplateOutput) GetSt() *GuildTemplate {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildTemplateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildTemplateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *GuildTemplateParams) Reset() {
	*x = GuildTemplateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[303]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplateParams) ProtoMessage() {}

func (x *GuildTemplateParams) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[303]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplateParams.ProtoReflect.Descriptor instead.
func (*GuildTemplateParams) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{303}
}

func (x *GuildTemplateParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildTemplateParams) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GuildTemplateSyncInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID      string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	TemplateCode string `protobuf:"bytes,2,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
}

func (x *GuildTemplateSyncInput) Reset() {
	*x = GuildTemplateSyncInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[304]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplateSyncInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplateSyncInput) ProtoMessage() {}

func (x *GuildTemplateSyncInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[304]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplateSyncInput.ProtoReflect.Descriptor instead.
func (*GuildTemplateSyncInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{304}
}

func (x *GuildTemplateSyncInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *GuildTemplateSyncInput) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

type GuildTemplateSyncOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildTemplateSyncOutput) Reset() {
	*x = GuildTemplateSyncOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[305]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplateSyncOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplateSyncOutput) ProtoMessage() {}

func (x *GuildTemplateSyncOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[305]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplateSyncOutput.ProtoReflect.Descriptor instead.
func (*GuildTemplateSyncOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{305}
}

func (x *GuildTemplateSyncOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildTemplatesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildTemplatesInput) Reset() {
	*x = GuildTemplatesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[306]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplatesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplatesInput) ProtoMessage() {}

func (x *GuildTemplatesInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[306]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplatesInput.ProtoReflect.Descriptor instead.
func (*GuildTemplatesInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{306}
}

func (x *GuildTemplatesInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildTemplatesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*GuildTemplate `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string          `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildTemplatesOutput) Reset() {
	*x = GuildTemplatesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[307]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTemplatesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTemplatesOutput) ProtoMessage() {}

func (x *GuildTemplatesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[307]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTemplatesOutput.ProtoReflect.Descriptor instead.
func (*GuildTemplatesOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{307}
}

func (x *GuildTemplatesOutput) GetSt() []*GuildTemplate {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildTemplatesOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildThreadsActiveInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildThreadsActiveInput) Reset() {
	*x = GuildThreadsActiveInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[308]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildThreadsActiveInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildThreadsActiveInput) ProtoMessage() {}

func (x *GuildThreadsActiveInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[308]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildThreadsActiveInput.ProtoReflect.Descriptor instead.
func (*GuildThreadsActiveInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{308}
}

func (x *GuildThreadsActiveInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildThreadsActiveOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threads *ThreadsList `protobuf:"bytes,1,opt,name=threads,proto3" json:"threads,omitempty"`
	Err     *string      `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildThreadsActiveOutput) Reset() {
	*x = GuildThreadsActiveOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[309]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildThreadsActiveOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildThreadsActiveOutput) ProtoMessage() {}

func (x *GuildThreadsActiveOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[309]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildThreadsActiveOutput.ProtoReflect.Descriptor instead.
func (*GuildThreadsActiveOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{309}
}

func (x *GuildThreadsActiveOutput) GetThreads() *ThreadsList {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *GuildThreadsActiveOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildWebhooksInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildWebhooksInput) Reset() {
	*x = GuildWebhooksInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[310]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildWebhooksInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildWebhooksInput) ProtoMessage() {}

func (x *GuildWebhooksInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[310]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildWebhooksInput.ProtoReflect.Descriptor instead.
func (*GuildWebhooksInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{310}
}

func (x *GuildWebhooksInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildWebhooksOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*Webhook `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string    `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildWebhooksOutput) Reset() {
	*x = GuildWebhooksOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[311]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildWebhooksOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildWebhooksOutput) ProtoMessage() {}

func (x *GuildWebhooksOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[311]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildWebhooksOutput.ProtoReflect.Descriptor instead.
func (*GuildWebhooksOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{311}
}

func (x *GuildWebhooksOutput) GetSt() []*Webhook {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildWebhooksOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type GuildWithCountsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *GuildWithCountsInput) Reset() {
	*x = GuildWithCountsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[312]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildWithCountsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildWithCountsInput) ProtoMessage() {}

func (x *GuildWithCountsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[312]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildWithCountsInput.ProtoReflect.Descriptor instead.
func (*GuildWithCountsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{312}
}

func (x *GuildWithCountsInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type GuildWithCountsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Guild  `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GuildWithCountsOutput) Reset() {
	*x = GuildWithCountsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[313]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildWithCountsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildWithCountsOutput) ProtoMessage() {}

func (x *GuildWithCountsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[313]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildWithCountsOutput.ProtoReflect.Descriptor instead.
func (*GuildWithCountsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{313}
}

func (x *GuildWithCountsOutput) GetSt() *Guild {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *GuildWithCountsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type HeartbeatLatencyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatLatencyInput) Reset() {
	*x = HeartbeatLatencyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[314]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatLatencyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatLatencyInput) ProtoMessage() {}

func (x *HeartbeatLatencyInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[314]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatLatencyInput.ProtoReflect.Descriptor instead.
func (*HeartbeatLatencyInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{314}
}

type HeartbeatLatencyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 int64 `protobuf:"varint,1,opt,name=field1,proto3" json:"field1,omitempty"`
}

func (x *HeartbeatLatencyOutput) Reset() {
	*x = HeartbeatLatencyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[315]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatLatencyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatLatencyOutput) ProtoMessage() {}

func (x *HeartbeatLatencyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[315]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatLatencyOutput.ProtoReflect.Descriptor instead.
func (*HeartbeatLatencyOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{315}
}

func (x *HeartbeatLatencyOutput) GetField1() int64 {
	if x != nil {
		return x.Field1
	}
	return 0
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[316]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[316]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{316}
}

type Integration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string              `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name              string              `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Type              string              `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Enabled           bool                `protobuf:"varint,4,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	Syncing           bool                `protobuf:"varint,5,opt,name=Syncing,proto3" json:"Syncing,omitempty"`
	RoleID            string              `protobuf:"bytes,6,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	EnableEmoticons   bool                `protobuf:"varint,7,opt,name=EnableEmoticons,proto3" json:"EnableEmoticons,omitempty"`
	ExpireBehavior    int32               `protobuf:"varint,8,opt,name=ExpireBehavior,proto3" json:"ExpireBehavior,omitempty"`
	ExpireGracePeriod int32               `protobuf:"varint,9,opt,name=ExpireGracePeriod,proto3" json:"ExpireGracePeriod,omitempty"`
	User              *User               `protobuf:"bytes,10,opt,name=User,proto3" json:"User,omitempty"`
	Account           *IntegrationAccount `protobuf:"bytes,11,opt,name=Account,proto3" json:"Account,omitempty"`
	SyncedAt          *Time               `protobuf:"bytes,12,opt,name=SyncedAt,proto3" json:"SyncedAt,omitempty"`
}

func (x *Integration) Reset() {
	*x = Integration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[317]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integration) ProtoMessage() {}

func (x *Integration) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[317]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integration.ProtoReflect.Descriptor instead.
func (*Integration) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{317}
}

func (x *Integration) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Integration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Integration) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Integration) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Integration) GetSyncing() bool {
	if x != nil {
		return x.Syncing
	}
	return false
}

func (x *Integration) GetRoleID() string {
	if x != nil {
		return x.RoleID
	}
	return ""
}

func (x *Integration) GetEnableEmoticons() bool {
	if x != nil {
		return x.EnableEmoticons
	}
	return false
}

func (x *Integration) GetExpireBehavior() int32 {
	if x != nil {
		return x.ExpireBehavior
	}
	return 0
}

func (x *Integration) GetExpireGracePeriod() int32 {
	if x != nil {
		return x.ExpireGracePeriod
	}
	return 0
}

func (x *Integration) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Integration) GetAccount() *IntegrationAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *Integration) GetSyncedAt() *Time {
	if x != nil {
		return x.SyncedAt
	}
	return nil
}

type IntegrationAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *IntegrationAccount) Reset() {
	*x = IntegrationAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[318]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationAccount) ProtoMessage() {}

func (x *IntegrationAccount) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[318]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationAccount.ProtoReflect.Descriptor instead.
func (*IntegrationAccount) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{318}
}

func (x *IntegrationAccount) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *IntegrationAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Interaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             string           `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID          string           `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Type           uint32           `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Data           *InteractionData `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	GuildID        string           `protobuf:"bytes,5,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	ChannelID      string           `protobuf:"bytes,6,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	Message        *Message         `protobuf:"bytes,7,opt,name=Message,proto3" json:"Message,omitempty"`
	AppPermissions int64            `protobuf:"varint,8,opt,name=AppPermissions,proto3" json:"AppPermissions,omitempty"`
	Member         *Member          `protobuf:"bytes,9,opt,name=Member,proto3" json:"Member,omitempty"`
	User           *User            `protobuf:"bytes,10,opt,name=User,proto3" json:"User,omitempty"`
	Locale         string           `protobuf:"bytes,11,opt,name=Locale,proto3" json:"Locale,omitempty"`
	GuildLocale    string           `protobuf:"bytes,12,opt,name=GuildLocale,proto3" json:"GuildLocale,omitempty"`
	Token          string           `protobuf:"bytes,13,opt,name=Token,proto3" json:"Token,omitempty"`
	Version        int32            `protobuf:"varint,14,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *Interaction) Reset() {
	*x = Interaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[319]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interaction) ProtoMessage() {}

func (x *Interaction) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[319]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interaction.ProtoReflect.Descriptor instead.
func (*Interaction) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{319}
}

func (x *Interaction) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Interaction) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Interaction) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Interaction) GetData() *InteractionData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Interaction) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *Interaction) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *Interaction) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Interaction) GetAppPermissions() int64 {
	if x != nil {
		return x.AppPermissions
	}
	return 0
}

func (x *Interaction) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Interaction) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Interaction) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *Interaction) GetGuildLocale() string {
	if x != nil {
		return x.GuildLocale
	}
	return ""
}

func (x *Interaction) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Interaction) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type InteractionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InteractionData) Reset() {
	*x = InteractionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[320]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionData) ProtoMessage() {}

func (x *InteractionData) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[320]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionData.ProtoReflect.Descriptor instead.
func (*InteractionData) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{320}
}

type InteractionRespondInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interaction *Interaction         `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
	Resp        *InteractionResponse `protobuf:"bytes,2,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *InteractionRespondInput) Reset() {
	*x = InteractionRespondInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[321]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionRespondInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionRespondInput) ProtoMessage() {}

func (x *InteractionRespondInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[321]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionRespondInput.ProtoReflect.Descriptor instead.
func (*InteractionRespondInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{321}
}

func (x *InteractionRespondInput) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *InteractionRespondInput) GetResp() *InteractionResponse {
	if x != nil {
		return x.Resp
	}
	return nil
}

type InteractionRespondOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *InteractionRespondOutput) Reset() {
	*x = InteractionRespondOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[322]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionRespondOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionRespondOutput) ProtoMessage() {}

func (x *InteractionRespondOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[322]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionRespondOutput.ProtoReflect.Descriptor instead.
func (*InteractionRespondOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{322}
}

func (x *InteractionRespondOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type InteractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32                   `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Data *InteractionResponseData `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *InteractionResponse) Reset() {
	*x = InteractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[323]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponse) ProtoMessage() {}

func (x *InteractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[323]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponse.ProtoReflect.Descriptor instead.
func (*InteractionResponse) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{323}
}

func (x *InteractionResponse) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *InteractionResponse) GetData() *InteractionResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type InteractionResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TTS             bool                              `protobuf:"varint,1,opt,name=TTS,proto3" json:"TTS,omitempty"`
	Content         string                            `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	Components      []*MessageComponent               `protobuf:"bytes,3,rep,name=Components,proto3" json:"Components,omitempty"`
	Embeds          []*MessageEmbed                   `protobuf:"bytes,4,rep,name=Embeds,proto3" json:"Embeds,omitempty"`
	AllowedMentions *MessageAllowedMentions           `protobuf:"bytes,5,opt,name=AllowedMentions,proto3" json:"AllowedMentions,omitempty"`
	Files           []*File                           `protobuf:"bytes,6,rep,name=Files,proto3" json:"Files,omitempty"`
	Flags           int32                             `protobuf:"varint,7,opt,name=Flags,proto3" json:"Flags,omitempty"`
	Choices         []*ApplicationCommandOptionChoice `protobuf:"bytes,8,rep,name=Choices,proto3" json:"Choices,omitempty"`
	CustomID        string                            `protobuf:"bytes,9,opt,name=CustomID,proto3" json:"CustomID,omitempty"`
	Title           string                            `protobuf:"bytes,10,opt,name=Title,proto3" json:"Title,omitempty"`
}

func (x *InteractionResponseData) Reset() {
	*x = InteractionResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[324]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponseData) ProtoMessage() {}

func (x *InteractionResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[324]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponseData.ProtoReflect.Descriptor instead.
func (*InteractionResponseData) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{324}
}

func (x *InteractionResponseData) GetTTS() bool {
	if x != nil {
		return x.TTS
	}
	return false
}

func (x *InteractionResponseData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *InteractionResponseData) GetComponents() []*MessageComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *InteractionResponseData) GetEmbeds() []*MessageEmbed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

func (x *InteractionResponseData) GetAllowedMentions() *MessageAllowedMentions {
	if x != nil {
		return x.AllowedMentions
	}
	return nil
}

func (x *InteractionResponseData) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *InteractionResponseData) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *InteractionResponseData) GetChoices() []*ApplicationCommandOptionChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *InteractionResponseData) GetCustomID() string {
	if x != nil {
		return x.CustomID
	}
	return ""
}

func (x *InteractionResponseData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type InteractionResponseDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interaction *Interaction `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
}

func (x *InteractionResponseDeleteInput) Reset() {
	*x = InteractionResponseDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[325]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionResponseDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponseDeleteInput) ProtoMessage() {}

func (x *InteractionResponseDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[325]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponseDeleteInput.ProtoReflect.Descriptor instead.
func (*InteractionResponseDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{325}
}

func (x *InteractionResponseDeleteInput) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

type InteractionResponseDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *InteractionResponseDeleteOutput) Reset() {
	*x = InteractionResponseDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[326]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionResponseDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponseDeleteOutput) ProtoMessage() {}

func (x *InteractionResponseDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[326]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponseDeleteOutput.ProtoReflect.Descriptor instead.
func (*InteractionResponseDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{326}
}

func (x *InteractionResponseDeleteOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type InteractionResponseEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interaction *Interaction `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
	Newresp     *WebhookEdit `protobuf:"bytes,2,opt,name=newresp,proto3" json:"newresp,omitempty"`
}

func (x *InteractionResponseEditInput) Reset() {
	*x = InteractionResponseEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[327]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionResponseEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponseEditInput) ProtoMessage() {}

func (x *InteractionResponseEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[327]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponseEditInput.ProtoReflect.Descriptor instead.
func (*InteractionResponseEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{327}
}

func (x *InteractionResponseEditInput) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *InteractionResponseEditInput) GetNewresp() *WebhookEdit {
	if x != nil {
		return x.Newresp
	}
	return nil
}

type InteractionResponseEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *InteractionResponseEditOutput) Reset() {
	*x = InteractionResponseEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[328]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionResponseEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponseEditOutput) ProtoMessage() {}

func (x *InteractionResponseEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[328]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponseEditOutput.ProtoReflect.Descriptor instead.
func (*InteractionResponseEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{328}
}

func (x *InteractionResponseEditOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *InteractionResponseEditOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type InteractionResponseInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interaction *Interaction `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
}

func (x *InteractionResponseInput) Reset() {
	*x = InteractionResponseInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[329]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionResponseInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponseInput) ProtoMessage() {}

func (x *InteractionResponseInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[329]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponseInput.ProtoReflect.Descriptor instead.
func (*InteractionResponseInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{329}
}

func (x *InteractionResponseInput) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

type InteractionResponseOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *Message `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 *string  `protobuf:"bytes,2,opt,name=field2,proto3,oneof" json:"field2,omitempty"`
}

func (x *InteractionResponseOutput) Reset() {
	*x = InteractionResponseOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[330]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionResponseOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponseOutput) ProtoMessage() {}

func (x *InteractionResponseOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[330]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponseOutput.ProtoReflect.Descriptor instead.
func (*InteractionResponseOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{330}
}

func (x *InteractionResponseOutput) GetField1() *Message {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *InteractionResponseOutput) GetField2() string {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return ""
}

type Invite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guild                    *Guild       `protobuf:"bytes,1,opt,name=Guild,proto3" json:"Guild,omitempty"`
	Channel                  *Channel     `protobuf:"bytes,2,opt,name=Channel,proto3" json:"Channel,omitempty"`
	Inviter                  *User        `protobuf:"bytes,3,opt,name=Inviter,proto3" json:"Inviter,omitempty"`
	Code                     string       `protobuf:"bytes,4,opt,name=Code,proto3" json:"Code,omitempty"`
	CreatedAt                *Time        `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	MaxAge                   int32        `protobuf:"varint,6,opt,name=MaxAge,proto3" json:"MaxAge,omitempty"`
	Uses                     int32        `protobuf:"varint,7,opt,name=Uses,proto3" json:"Uses,omitempty"`
	MaxUses                  int32        `protobuf:"varint,8,opt,name=MaxUses,proto3" json:"MaxUses,omitempty"`
	Revoked                  bool         `protobuf:"varint,9,opt,name=Revoked,proto3" json:"Revoked,omitempty"`
	Temporary                bool         `protobuf:"varint,10,opt,name=Temporary,proto3" json:"Temporary,omitempty"`
	Unique                   bool         `protobuf:"varint,11,opt,name=Unique,proto3" json:"Unique,omitempty"`
	TargetUser               *User        `protobuf:"bytes,12,opt,name=TargetUser,proto3" json:"TargetUser,omitempty"`
	TargetType               uint32       `protobuf:"varint,13,opt,name=TargetType,proto3" json:"TargetType,omitempty"`
	TargetApplication        *Application `protobuf:"bytes,14,opt,name=TargetApplication,proto3" json:"TargetApplication,omitempty"`
	ApproximatePresenceCount int32        `protobuf:"varint,15,opt,name=ApproximatePresenceCount,proto3" json:"ApproximatePresenceCount,omitempty"`
	ApproximateMemberCount   int32        `protobuf:"varint,16,opt,name=ApproximateMemberCount,proto3" json:"ApproximateMemberCount,omitempty"`
	ExpiresAt                *Time        `protobuf:"bytes,17,opt,name=ExpiresAt,proto3" json:"ExpiresAt,omitempty"`
}

func (x *Invite) Reset() {
	*x = Invite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[331]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invite) ProtoMessage() {}

func (x *Invite) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[331]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invite.ProtoReflect.Descriptor instead.
func (*Invite) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{331}
}

func (x *Invite) GetGuild() *Guild {
	if x != nil {
		return x.Guild
	}
	return nil
}

func (x *Invite) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *Invite) GetInviter() *User {
	if x != nil {
		return x.Inviter
	}
	return nil
}

func (x *Invite) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Invite) GetCreatedAt() *Time {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Invite) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *Invite) GetUses() int32 {
	if x != nil {
		return x.Uses
	}
	return 0
}

func (x *Invite) GetMaxUses() int32 {
	if x != nil {
		return x.MaxUses
	}
	return 0
}

func (x *Invite) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

func (x *Invite) GetTemporary() bool {
	if x != nil {
		return x.Temporary
	}
	return false
}

func (x *Invite) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *Invite) GetTargetUser() *User {
	if x != nil {
		return x.TargetUser
	}
	return nil
}

func (x *Invite) GetTargetType() uint32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *Invite) GetTargetApplication() *Application {
	if x != nil {
		return x.TargetApplication
	}
	return nil
}

func (x *Invite) GetApproximatePresenceCount() int32 {
	if x != nil {
		return x.ApproximatePresenceCount
	}
	return 0
}

func (x *Invite) GetApproximateMemberCount() int32 {
	if x != nil {
		return x.ApproximateMemberCount
	}
	return 0
}

func (x *Invite) GetExpiresAt() *Time {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type InviteAcceptInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteID string `protobuf:"bytes,1,opt,name=inviteID,proto3" json:"inviteID,omitempty"`
}

func (x *InviteAcceptInput) Reset() {
	*x = InviteAcceptInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[332]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteAcceptInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteAcceptInput) ProtoMessage() {}

func (x *InviteAcceptInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[332]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteAcceptInput.ProtoReflect.Descriptor instead.
func (*InviteAcceptInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{332}
}

func (x *InviteAcceptInput) GetInviteID() string {
	if x != nil {
		return x.InviteID
	}
	return ""
}

type InviteAcceptOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Invite `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *InviteAcceptOutput) Reset() {
	*x = InviteAcceptOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[333]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteAcceptOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteAcceptOutput) ProtoMessage() {}

func (x *InviteAcceptOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[333]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteAcceptOutput.ProtoReflect.Descriptor instead.
func (*InviteAcceptOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{333}
}

func (x *InviteAcceptOutput) GetSt() *Invite {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *InviteAcceptOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type InviteComplexInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteID              string `protobuf:"bytes,1,opt,name=inviteID,proto3" json:"inviteID,omitempty"`
	GuildScheduledEventID string `protobuf:"bytes,2,opt,name=guildScheduledEventID,proto3" json:"guildScheduledEventID,omitempty"`
	WithCounts            bool   `protobuf:"varint,3,opt,name=withCounts,proto3" json:"withCounts,omitempty"`
	WithExpiration        bool   `protobuf:"varint,4,opt,name=withExpiration,proto3" json:"withExpiration,omitempty"`
}

func (x *InviteComplexInput) Reset() {
	*x = InviteComplexInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[334]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteComplexInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteComplexInput) ProtoMessage() {}

func (x *InviteComplexInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[334]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteComplexInput.ProtoReflect.Descriptor instead.
func (*InviteComplexInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{334}
}

func (x *InviteComplexInput) GetInviteID() string {
	if x != nil {
		return x.InviteID
	}
	return ""
}

func (x *InviteComplexInput) GetGuildScheduledEventID() string {
	if x != nil {
		return x.GuildScheduledEventID
	}
	return ""
}

func (x *InviteComplexInput) GetWithCounts() bool {
	if x != nil {
		return x.WithCounts
	}
	return false
}

func (x *InviteComplexInput) GetWithExpiration() bool {
	if x != nil {
		return x.WithExpiration
	}
	return false
}

type InviteComplexOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Invite `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *InviteComplexOutput) Reset() {
	*x = InviteComplexOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[335]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteComplexOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteComplexOutput) ProtoMessage() {}

func (x *InviteComplexOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[335]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteComplexOutput.ProtoReflect.Descriptor instead.
func (*InviteComplexOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{335}
}

func (x *InviteComplexOutput) GetSt() *Invite {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *InviteComplexOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type InviteDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteID string `protobuf:"bytes,1,opt,name=inviteID,proto3" json:"inviteID,omitempty"`
}

func (x *InviteDeleteInput) Reset() {
	*x = InviteDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[336]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteDeleteInput) ProtoMessage() {}

func (x *InviteDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[336]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteDeleteInput.ProtoReflect.Descriptor instead.
func (*InviteDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{336}
}

func (x *InviteDeleteInput) GetInviteID() string {
	if x != nil {
		return x.InviteID
	}
	return ""
}

type InviteDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Invite `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *InviteDeleteOutput) Reset() {
	*x = InviteDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[337]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteDeleteOutput) ProtoMessage() {}

func (x *InviteDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[337]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteDeleteOutput.ProtoReflect.Descriptor instead.
func (*InviteDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{337}
}

func (x *InviteDeleteOutput) GetSt() *Invite {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *InviteDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type InviteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteID string `protobuf:"bytes,1,opt,name=inviteID,proto3" json:"inviteID,omitempty"`
}

func (x *InviteInput) Reset() {
	*x = InviteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[338]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteInput) ProtoMessage() {}

func (x *InviteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[338]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteInput.ProtoReflect.Descriptor instead.
func (*InviteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{338}
}

func (x *InviteInput) GetInviteID() string {
	if x != nil {
		return x.InviteID
	}
	return ""
}

type InviteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Invite `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *InviteOutput) Reset() {
	*x = InviteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[339]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteOutput) ProtoMessage() {}

func (x *InviteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[339]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteOutput.ProtoReflect.Descriptor instead.
func (*InviteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{339}
}

func (x *InviteOutput) GetSt() *Invite {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *InviteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type InviteWithCountsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteID string `protobuf:"bytes,1,opt,name=inviteID,proto3" json:"inviteID,omitempty"`
}

func (x *InviteWithCountsInput) Reset() {
	*x = InviteWithCountsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[340]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteWithCountsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteWithCountsInput) ProtoMessage() {}

func (x *InviteWithCountsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[340]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteWithCountsInput.ProtoReflect.Descriptor instead.
func (*InviteWithCountsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{340}
}

func (x *InviteWithCountsInput) GetInviteID() string {
	if x != nil {
		return x.InviteID
	}
	return ""
}

type InviteWithCountsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Invite `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *InviteWithCountsOutput) Reset() {
	*x = InviteWithCountsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[341]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteWithCountsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteWithCountsOutput) ProtoMessage() {}

func (x *InviteWithCountsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[341]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteWithCountsOutput.ProtoReflect.Descriptor instead.
func (*InviteWithCountsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{341}
}

func (x *InviteWithCountsOutput) GetSt() *Invite {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *InviteWithCountsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID                    string   `protobuf:"bytes,1,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	JoinedAt                   *Time    `protobuf:"bytes,2,opt,name=JoinedAt,proto3" json:"JoinedAt,omitempty"`
	Nick                       string   `protobuf:"bytes,3,opt,name=Nick,proto3" json:"Nick,omitempty"`
	Deaf                       bool     `protobuf:"varint,4,opt,name=Deaf,proto3" json:"Deaf,omitempty"`
	Mute                       bool     `protobuf:"varint,5,opt,name=Mute,proto3" json:"Mute,omitempty"`
	Avatar                     string   `protobuf:"bytes,6,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	User                       *User    `protobuf:"bytes,7,opt,name=User,proto3" json:"User,omitempty"`
	Roles                      []string `protobuf:"bytes,8,rep,name=Roles,proto3" json:"Roles,omitempty"`
	PremiumSince               *Time    `protobuf:"bytes,9,opt,name=PremiumSince,proto3" json:"PremiumSince,omitempty"`
	Pending                    bool     `protobuf:"varint,10,opt,name=Pending,proto3" json:"Pending,omitempty"`
	Permissions                int64    `protobuf:"varint,11,opt,name=Permissions,proto3" json:"Permissions,omitempty"`
	CommunicationDisabledUntil *Time    `protobuf:"bytes,12,opt,name=CommunicationDisabledUntil,proto3" json:"CommunicationDisabledUntil,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[342]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[342]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{342}
}

func (x *Member) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *Member) GetJoinedAt() *Time {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *Member) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *Member) GetDeaf() bool {
	if x != nil {
		return x.Deaf
	}
	return false
}

func (x *Member) GetMute() bool {
	if x != nil {
		return x.Mute
	}
	return false
}

func (x *Member) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Member) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Member) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Member) GetPremiumSince() *Time {
	if x != nil {
		return x.PremiumSince
	}
	return nil
}

func (x *Member) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

func (x *Member) GetPermissions() int64 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

func (x *Member) GetCommunicationDisabledUntil() *Time {
	if x != nil {
		return x.CommunicationDisabledUntil
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ChannelID         string               `protobuf:"bytes,2,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	GuildID           string               `protobuf:"bytes,3,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	Content           string               `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	Timestamp         *Time                `protobuf:"bytes,5,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	EditedTimestamp   *Time                `protobuf:"bytes,6,opt,name=EditedTimestamp,proto3" json:"EditedTimestamp,omitempty"`
	MentionRoles      []string             `protobuf:"bytes,7,rep,name=MentionRoles,proto3" json:"MentionRoles,omitempty"`
	TTS               bool                 `protobuf:"varint,8,opt,name=TTS,proto3" json:"TTS,omitempty"`
	MentionEveryone   bool                 `protobuf:"varint,9,opt,name=MentionEveryone,proto3" json:"MentionEveryone,omitempty"`
	Author            *User                `protobuf:"bytes,10,opt,name=Author,proto3" json:"Author,omitempty"`
	Attachments       []*MessageAttachment `protobuf:"bytes,11,rep,name=Attachments,proto3" json:"Attachments,omitempty"`
	Components        []*MessageComponent  `protobuf:"bytes,12,rep,name=Components,proto3" json:"Components,omitempty"`
	Embeds            []*MessageEmbed      `protobuf:"bytes,13,rep,name=Embeds,proto3" json:"Embeds,omitempty"`
	Mentions          []*User              `protobuf:"bytes,14,rep,name=Mentions,proto3" json:"Mentions,omitempty"`
	Reactions         []*MessageReactions  `protobuf:"bytes,15,rep,name=Reactions,proto3" json:"Reactions,omitempty"`
	Pinned            bool                 `protobuf:"varint,16,opt,name=Pinned,proto3" json:"Pinned,omitempty"`
	Type              int32                `protobuf:"varint,17,opt,name=Type,proto3" json:"Type,omitempty"`
	WebhookID         string               `protobuf:"bytes,18,opt,name=WebhookID,proto3" json:"WebhookID,omitempty"`
	Member            *Member              `protobuf:"bytes,19,opt,name=Member,proto3" json:"Member,omitempty"`
	MentionChannels   []*Channel           `protobuf:"bytes,20,rep,name=MentionChannels,proto3" json:"MentionChannels,omitempty"`
	Activity          *MessageActivity     `protobuf:"bytes,21,opt,name=Activity,proto3" json:"Activity,omitempty"`
	Application       *MessageApplication  `protobuf:"bytes,22,opt,name=Application,proto3" json:"Application,omitempty"`
	MessageReference  *MessageReference    `protobuf:"bytes,23,opt,name=MessageReference,proto3" json:"MessageReference,omitempty"`
	ReferencedMessage *Message             `protobuf:"bytes,24,opt,name=ReferencedMessage,proto3" json:"ReferencedMessage,omitempty"`
	Interaction       *MessageInteraction  `protobuf:"bytes,25,opt,name=Interaction,proto3" json:"Interaction,omitempty"`
	Flags             int32                `protobuf:"varint,26,opt,name=Flags,proto3" json:"Flags,omitempty"`
	Thread            *Channel             `protobuf:"bytes,27,opt,name=Thread,proto3" json:"Thread,omitempty"`
	StickerItems      []*Sticker           `protobuf:"bytes,28,rep,name=StickerItems,proto3" json:"StickerItems,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[343]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[343]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{343}
}

func (x *Message) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Message) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *Message) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetTimestamp() *Time {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Message) GetEditedTimestamp() *Time {
	if x != nil {
		return x.EditedTimestamp
	}
	return nil
}

func (x *Message) GetMentionRoles() []string {
	if x != nil {
		return x.MentionRoles
	}
	return nil
}

func (x *Message) GetTTS() bool {
	if x != nil {
		return x.TTS
	}
	return false
}

func (x *Message) GetMentionEveryone() bool {
	if x != nil {
		return x.MentionEveryone
	}
	return false
}

func (x *Message) GetAuthor() *User {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Message) GetAttachments() []*MessageAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Message) GetComponents() []*MessageComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *Message) GetEmbeds() []*MessageEmbed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

func (x *Message) GetMentions() []*User {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (x *Message) GetReactions() []*MessageReactions {
	if x != nil {
		return x.Reactions
	}
	return nil
}

func (x *Message) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

func (x *Message) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Message) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

func (x *Message) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Message) GetMentionChannels() []*Channel {
	if x != nil {
		return x.MentionChannels
	}
	return nil
}

func (x *Message) GetActivity() *MessageActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *Message) GetApplication() *MessageApplication {
	if x != nil {
		return x.Application
	}
	return nil
}

func (x *Message) GetMessageReference() *MessageReference {
	if x != nil {
		return x.MessageReference
	}
	return nil
}

func (x *Message) GetReferencedMessage() *Message {
	if x != nil {
		return x.ReferencedMessage
	}
	return nil
}

func (x *Message) GetInteraction() *MessageInteraction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *Message) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Message) GetThread() *Channel {
	if x != nil {
		return x.Thread
	}
	return nil
}

func (x *Message) GetStickerItems() []*Sticker {
	if x != nil {
		return x.StickerItems
	}
	return nil
}

type MessageActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32  `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	PartyID string `protobuf:"bytes,2,opt,name=PartyID,proto3" json:"PartyID,omitempty"`
}

func (x *MessageActivity) Reset() {
	*x = MessageActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[344]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageActivity) ProtoMessage() {}

func (x *MessageActivity) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[344]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageActivity.ProtoReflect.Descriptor instead.
func (*MessageActivity) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{344}
}

func (x *MessageActivity) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageActivity) GetPartyID() string {
	if x != nil {
		return x.PartyID
	}
	return ""
}

type MessageAllowedMentions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parse       []string `protobuf:"bytes,1,rep,name=Parse,proto3" json:"Parse,omitempty"`
	Roles       []string `protobuf:"bytes,2,rep,name=Roles,proto3" json:"Roles,omitempty"`
	Users       []string `protobuf:"bytes,3,rep,name=Users,proto3" json:"Users,omitempty"`
	RepliedUser bool     `protobuf:"varint,4,opt,name=RepliedUser,proto3" json:"RepliedUser,omitempty"`
}

func (x *MessageAllowedMentions) Reset() {
	*x = MessageAllowedMentions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[345]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAllowedMentions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAllowedMentions) ProtoMessage() {}

func (x *MessageAllowedMentions) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[345]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAllowedMentions.ProtoReflect.Descriptor instead.
func (*MessageAllowedMentions) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{345}
}

func (x *MessageAllowedMentions) GetParse() []string {
	if x != nil {
		return x.Parse
	}
	return nil
}

func (x *MessageAllowedMentions) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *MessageAllowedMentions) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *MessageAllowedMentions) GetRepliedUser() bool {
	if x != nil {
		return x.RepliedUser
	}
	return false
}

type MessageApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CoverImage  string `protobuf:"bytes,2,opt,name=CoverImage,proto3" json:"CoverImage,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Icon        string `protobuf:"bytes,4,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *MessageApplication) Reset() {
	*x = MessageApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[346]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageApplication) ProtoMessage() {}

func (x *MessageApplication) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[346]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageApplication.ProtoReflect.Descriptor instead.
func (*MessageApplication) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{346}
}

func (x *MessageApplication) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *MessageApplication) GetCoverImage() string {
	if x != nil {
		return x.CoverImage
	}
	return ""
}

func (x *MessageApplication) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MessageApplication) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MessageApplication) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MessageAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	URL         string `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	ProxyURL    string `protobuf:"bytes,3,opt,name=ProxyURL,proto3" json:"ProxyURL,omitempty"`
	Filename    string `protobuf:"bytes,4,opt,name=Filename,proto3" json:"Filename,omitempty"`
	ContentType string `protobuf:"bytes,5,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Width       int32  `protobuf:"varint,6,opt,name=Width,proto3" json:"Width,omitempty"`
	Height      int32  `protobuf:"varint,7,opt,name=Height,proto3" json:"Height,omitempty"`
	Size        int32  `protobuf:"varint,8,opt,name=Size,proto3" json:"Size,omitempty"`
	Ephemeral   bool   `protobuf:"varint,9,opt,name=Ephemeral,proto3" json:"Ephemeral,omitempty"`
}

func (x *MessageAttachment) Reset() {
	*x = MessageAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[347]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAttachment) ProtoMessage() {}

func (x *MessageAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[347]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAttachment.ProtoReflect.Descriptor instead.
func (*MessageAttachment) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{347}
}

func (x *MessageAttachment) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *MessageAttachment) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *MessageAttachment) GetProxyURL() string {
	if x != nil {
		return x.ProxyURL
	}
	return ""
}

func (x *MessageAttachment) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MessageAttachment) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *MessageAttachment) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MessageAttachment) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MessageAttachment) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MessageAttachment) GetEphemeral() bool {
	if x != nil {
		return x.Ephemeral
	}
	return false
}

type MessageComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageComponent) Reset() {
	*x = MessageComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[348]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageComponent) ProtoMessage() {}

func (x *MessageComponent) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[348]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageComponent.ProtoReflect.Descriptor instead.
func (*MessageComponent) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{348}
}

type MessageEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content         string                  `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	Components      []*MessageComponent     `protobuf:"bytes,2,rep,name=Components,proto3" json:"Components,omitempty"`
	Embeds          []*MessageEmbed         `protobuf:"bytes,3,rep,name=Embeds,proto3" json:"Embeds,omitempty"`
	AllowedMentions *MessageAllowedMentions `protobuf:"bytes,4,opt,name=AllowedMentions,proto3" json:"AllowedMentions,omitempty"`
	Flags           int32                   `protobuf:"varint,5,opt,name=Flags,proto3" json:"Flags,omitempty"`
	Files           []*File                 `protobuf:"bytes,6,rep,name=Files,proto3" json:"Files,omitempty"`
	Attachments     []*MessageAttachment    `protobuf:"bytes,7,rep,name=Attachments,proto3" json:"Attachments,omitempty"`
	ID              string                  `protobuf:"bytes,8,opt,name=ID,proto3" json:"ID,omitempty"`
	Channel         string                  `protobuf:"bytes,9,opt,name=Channel,proto3" json:"Channel,omitempty"`
	Embed           *MessageEmbed           `protobuf:"bytes,10,opt,name=Embed,proto3" json:"Embed,omitempty"`
}

func (x *MessageEdit) Reset() {
	*x = MessageEdit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[349]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEdit) ProtoMessage() {}

func (x *MessageEdit) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[349]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEdit.ProtoReflect.Descriptor instead.
func (*MessageEdit) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{349}
}

func (x *MessageEdit) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MessageEdit) GetComponents() []*MessageComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *MessageEdit) GetEmbeds() []*MessageEmbed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

func (x *MessageEdit) GetAllowedMentions() *MessageAllowedMentions {
	if x != nil {
		return x.AllowedMentions
	}
	return nil
}

func (x *MessageEdit) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *MessageEdit) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *MessageEdit) GetAttachments() []*MessageAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *MessageEdit) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *MessageEdit) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *MessageEdit) GetEmbed() *MessageEmbed {
	if x != nil {
		return x.Embed
	}
	return nil
}

type MessageEmbed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL         string                 `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Type        string                 `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Title       string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Timestamp   string                 `protobuf:"bytes,5,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Color       int32                  `protobuf:"varint,6,opt,name=Color,proto3" json:"Color,omitempty"`
	Footer      *MessageEmbedFooter    `protobuf:"bytes,7,opt,name=Footer,proto3" json:"Footer,omitempty"`
	Image       *MessageEmbedImage     `protobuf:"bytes,8,opt,name=Image,proto3" json:"Image,omitempty"`
	Thumbnail   *MessageEmbedThumbnail `protobuf:"bytes,9,opt,name=Thumbnail,proto3" json:"Thumbnail,omitempty"`
	Video       *MessageEmbedVideo     `protobuf:"bytes,10,opt,name=Video,proto3" json:"Video,omitempty"`
	Provider    *MessageEmbedProvider  `protobuf:"bytes,11,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Author      *MessageEmbedAuthor    `protobuf:"bytes,12,opt,name=Author,proto3" json:"Author,omitempty"`
	Fields      []*MessageEmbedField   `protobuf:"bytes,13,rep,name=Fields,proto3" json:"Fields,omitempty"`
}

func (x *MessageEmbed) Reset() {
	*x = MessageEmbed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[350]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbed) ProtoMessage() {}

func (x *MessageEmbed) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[350]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbed.ProtoReflect.Descriptor instead.
func (*MessageEmbed) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{350}
}

func (x *MessageEmbed) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *MessageEmbed) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MessageEmbed) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MessageEmbed) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MessageEmbed) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *MessageEmbed) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *MessageEmbed) GetFooter() *MessageEmbedFooter {
	if x != nil {
		return x.Footer
	}
	return nil
}

func (x *MessageEmbed) GetImage() *MessageEmbedImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *MessageEmbed) GetThumbnail() *MessageEmbedThumbnail {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *MessageEmbed) GetVideo() *MessageEmbedVideo {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *MessageEmbed) GetProvider() *MessageEmbedProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *MessageEmbed) GetAuthor() *MessageEmbedAuthor {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *MessageEmbed) GetFields() []*MessageEmbedField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type MessageEmbedAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL          string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	IconURL      string `protobuf:"bytes,3,opt,name=IconURL,proto3" json:"IconURL,omitempty"`
	ProxyIconURL string `protobuf:"bytes,4,opt,name=ProxyIconURL,proto3" json:"ProxyIconURL,omitempty"`
}

func (x *MessageEmbedAuthor) Reset() {
	*x = MessageEmbedAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[351]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedAuthor) ProtoMessage() {}

func (x *MessageEmbedAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[351]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedAuthor.ProtoReflect.Descriptor instead.
func (*MessageEmbedAuthor) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{351}
}

func (x *MessageEmbedAuthor) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *MessageEmbedAuthor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageEmbedAuthor) GetIconURL() string {
	if x != nil {
		return x.IconURL
	}
	return ""
}

func (x *MessageEmbedAuthor) GetProxyIconURL() string {
	if x != nil {
		return x.ProxyIconURL
	}
	return ""
}

type MessageEmbedField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Value  string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Inline bool   `protobuf:"varint,3,opt,name=Inline,proto3" json:"Inline,omitempty"`
}

func (x *MessageEmbedField) Reset() {
	*x = MessageEmbedField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[352]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedField) ProtoMessage() {}

func (x *MessageEmbedField) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[352]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedField.ProtoReflect.Descriptor instead.
func (*MessageEmbedField) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{352}
}

func (x *MessageEmbedField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageEmbedField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MessageEmbedField) GetInline() bool {
	if x != nil {
		return x.Inline
	}
	return false
}

type MessageEmbedFooter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text         string `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
	IconURL      string `protobuf:"bytes,2,opt,name=IconURL,proto3" json:"IconURL,omitempty"`
	ProxyIconURL string `protobuf:"bytes,3,opt,name=ProxyIconURL,proto3" json:"ProxyIconURL,omitempty"`
}

func (x *MessageEmbedFooter) Reset() {
	*x = MessageEmbedFooter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[353]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedFooter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedFooter) ProtoMessage() {}

func (x *MessageEmbedFooter) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[353]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedFooter.ProtoReflect.Descriptor instead.
func (*MessageEmbedFooter) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{353}
}

func (x *MessageEmbedFooter) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MessageEmbedFooter) GetIconURL() string {
	if x != nil {
		return x.IconURL
	}
	return ""
}

func (x *MessageEmbedFooter) GetProxyIconURL() string {
	if x != nil {
		return x.ProxyIconURL
	}
	return ""
}

type MessageEmbedImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL      string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	ProxyURL string `protobuf:"bytes,2,opt,name=ProxyURL,proto3" json:"ProxyURL,omitempty"`
	Width    int32  `protobuf:"varint,3,opt,name=Width,proto3" json:"Width,omitempty"`
	Height   int32  `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *MessageEmbedImage) Reset() {
	*x = MessageEmbedImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[354]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedImage) ProtoMessage() {}

func (x *MessageEmbedImage) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[354]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedImage.ProtoReflect.Descriptor instead.
func (*MessageEmbedImage) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{354}
}

func (x *MessageEmbedImage) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *MessageEmbedImage) GetProxyURL() string {
	if x != nil {
		return x.ProxyURL
	}
	return ""
}

func (x *MessageEmbedImage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MessageEmbedImage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MessageEmbedProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL  string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *MessageEmbedProvider) Reset() {
	*x = MessageEmbedProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[355]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedProvider) ProtoMessage() {}

func (x *MessageEmbedProvider) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[355]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedProvider.ProtoReflect.Descriptor instead.
func (*MessageEmbedProvider) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{355}
}

func (x *MessageEmbedProvider) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *MessageEmbedProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MessageEmbedThumbnail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL      string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	ProxyURL string `protobuf:"bytes,2,opt,name=ProxyURL,proto3" json:"ProxyURL,omitempty"`
	Width    int32  `protobuf:"varint,3,opt,name=Width,proto3" json:"Width,omitempty"`
	Height   int32  `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *MessageEmbedThumbnail) Reset() {
	*x = MessageEmbedThumbnail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[356]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedThumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedThumbnail) ProtoMessage() {}

func (x *MessageEmbedThumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[356]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedThumbnail.ProtoReflect.Descriptor instead.
func (*MessageEmbedThumbnail) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{356}
}

func (x *MessageEmbedThumbnail) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *MessageEmbedThumbnail) GetProxyURL() string {
	if x != nil {
		return x.ProxyURL
	}
	return ""
}

func (x *MessageEmbedThumbnail) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MessageEmbedThumbnail) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MessageEmbedVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL    string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Width  int32  `protobuf:"varint,2,opt,name=Width,proto3" json:"Width,omitempty"`
	Height int32  `protobuf:"varint,3,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *MessageEmbedVideo) Reset() {
	*x = MessageEmbedVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[357]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedVideo) ProtoMessage() {}

func (x *MessageEmbedVideo) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[357]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedVideo.ProtoReflect.Descriptor instead.
func (*MessageEmbedVideo) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{357}
}

func (x *MessageEmbedVideo) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *MessageEmbedVideo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MessageEmbedVideo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MessageInteraction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type   uint32  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Name   string  `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	User   *User   `protobuf:"bytes,4,opt,name=User,proto3" json:"User,omitempty"`
	Member *Member `protobuf:"bytes,5,opt,name=Member,proto3" json:"Member,omitempty"`
}

func (x *MessageInteraction) Reset() {
	*x = MessageInteraction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[358]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInteraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInteraction) ProtoMessage() {}

func (x *MessageInteraction) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[358]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInteraction.ProtoReflect.Descriptor instead.
func (*MessageInteraction) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{358}
}

func (x *MessageInteraction) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *MessageInteraction) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageInteraction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageInteraction) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *MessageInteraction) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type MessageReactionAddInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	EmojiID   string `protobuf:"bytes,3,opt,name=emojiID,proto3" json:"emojiID,omitempty"`
}

func (x *MessageReactionAddInput) Reset() {
	*x = MessageReactionAddInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[359]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionAddInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionAddInput) ProtoMessage() {}

func (x *MessageReactionAddInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[359]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionAddInput.ProtoReflect.Descriptor instead.
func (*MessageReactionAddInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{359}
}

func (x *MessageReactionAddInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *MessageReactionAddInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *MessageReactionAddInput) GetEmojiID() string {
	if x != nil {
		return x.EmojiID
	}
	return ""
}

type MessageReactionAddOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *MessageReactionAddOutput) Reset() {
	*x = MessageReactionAddOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[360]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionAddOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionAddOutput) ProtoMessage() {}

func (x *MessageReactionAddOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[360]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionAddOutput.ProtoReflect.Descriptor instead.
func (*MessageReactionAddOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{360}
}

func (x *MessageReactionAddOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type MessageReactionRemoveInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	EmojiID   string `protobuf:"bytes,3,opt,name=emojiID,proto3" json:"emojiID,omitempty"`
	UserID    string `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *MessageReactionRemoveInput) Reset() {
	*x = MessageReactionRemoveInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[361]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionRemoveInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionRemoveInput) ProtoMessage() {}

func (x *MessageReactionRemoveInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[361]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionRemoveInput.ProtoReflect.Descriptor instead.
func (*MessageReactionRemoveInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{361}
}

func (x *MessageReactionRemoveInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *MessageReactionRemoveInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *MessageReactionRemoveInput) GetEmojiID() string {
	if x != nil {
		return x.EmojiID
	}
	return ""
}

func (x *MessageReactionRemoveInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type MessageReactionRemoveOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *MessageReactionRemoveOutput) Reset() {
	*x = MessageReactionRemoveOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[362]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionRemoveOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionRemoveOutput) ProtoMessage() {}

func (x *MessageReactionRemoveOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[362]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionRemoveOutput.ProtoReflect.Descriptor instead.
func (*MessageReactionRemoveOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{362}
}

func (x *MessageReactionRemoveOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type MessageReactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32  `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	Me    bool   `protobuf:"varint,2,opt,name=Me,proto3" json:"Me,omitempty"`
	Emoji *Emoji `protobuf:"bytes,3,opt,name=Emoji,proto3" json:"Emoji,omitempty"`
}

func (x *MessageReactions) Reset() {
	*x = MessageReactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[363]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactions) ProtoMessage() {}

func (x *MessageReactions) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[363]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactions.ProtoReflect.Descriptor instead.
func (*MessageReactions) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{363}
}

func (x *MessageReactions) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MessageReactions) GetMe() bool {
	if x != nil {
		return x.Me
	}
	return false
}

func (x *MessageReactions) GetEmoji() *Emoji {
	if x != nil {
		return x.Emoji
	}
	return nil
}

type MessageReactionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	EmojiID   string `protobuf:"bytes,3,opt,name=emojiID,proto3" json:"emojiID,omitempty"`
	Limit     int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	BeforeID  string `protobuf:"bytes,5,opt,name=beforeID,proto3" json:"beforeID,omitempty"`
	AfterID   string `protobuf:"bytes,6,opt,name=afterID,proto3" json:"afterID,omitempty"`
}

func (x *MessageReactionsInput) Reset() {
	*x = MessageReactionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[364]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionsInput) ProtoMessage() {}

func (x *MessageReactionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[364]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionsInput.ProtoReflect.Descriptor instead.
func (*MessageReactionsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{364}
}

func (x *MessageReactionsInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *MessageReactionsInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *MessageReactionsInput) GetEmojiID() string {
	if x != nil {
		return x.EmojiID
	}
	return ""
}

func (x *MessageReactionsInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MessageReactionsInput) GetBeforeID() string {
	if x != nil {
		return x.BeforeID
	}
	return ""
}

func (x *MessageReactionsInput) GetAfterID() string {
	if x != nil {
		return x.AfterID
	}
	return ""
}

type MessageReactionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*User `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *MessageReactionsOutput) Reset() {
	*x = MessageReactionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[365]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionsOutput) ProtoMessage() {}

func (x *MessageReactionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[365]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionsOutput.ProtoReflect.Descriptor instead.
func (*MessageReactionsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{365}
}

func (x *MessageReactionsOutput) GetSt() []*User {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *MessageReactionsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type MessageReactionsRemoveAllInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *MessageReactionsRemoveAllInput) Reset() {
	*x = MessageReactionsRemoveAllInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[366]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionsRemoveAllInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionsRemoveAllInput) ProtoMessage() {}

func (x *MessageReactionsRemoveAllInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[366]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionsRemoveAllInput.ProtoReflect.Descriptor instead.
func (*MessageReactionsRemoveAllInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{366}
}

func (x *MessageReactionsRemoveAllInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *MessageReactionsRemoveAllInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type MessageReactionsRemoveAllOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *MessageReactionsRemoveAllOutput) Reset() {
	*x = MessageReactionsRemoveAllOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[367]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionsRemoveAllOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionsRemoveAllOutput) ProtoMessage() {}

func (x *MessageReactionsRemoveAllOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[367]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionsRemoveAllOutput.ProtoReflect.Descriptor instead.
func (*MessageReactionsRemoveAllOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{367}
}

func (x *MessageReactionsRemoveAllOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type MessageReactionsRemoveEmojiInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	EmojiID   string `protobuf:"bytes,3,opt,name=emojiID,proto3" json:"emojiID,omitempty"`
}

func (x *MessageReactionsRemoveEmojiInput) Reset() {
	*x = MessageReactionsRemoveEmojiInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[368]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionsRemoveEmojiInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionsRemoveEmojiInput) ProtoMessage() {}

func (x *MessageReactionsRemoveEmojiInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[368]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionsRemoveEmojiInput.ProtoReflect.Descriptor instead.
func (*MessageReactionsRemoveEmojiInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{368}
}

func (x *MessageReactionsRemoveEmojiInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *MessageReactionsRemoveEmojiInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *MessageReactionsRemoveEmojiInput) GetEmojiID() string {
	if x != nil {
		return x.EmojiID
	}
	return ""
}

type MessageReactionsRemoveEmojiOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *MessageReactionsRemoveEmojiOutput) Reset() {
	*x = MessageReactionsRemoveEmojiOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[369]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactionsRemoveEmojiOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionsRemoveEmojiOutput) ProtoMessage() {}

func (x *MessageReactionsRemoveEmojiOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[369]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionsRemoveEmojiOutput.ProtoReflect.Descriptor instead.
func (*MessageReactionsRemoveEmojiOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{369}
}

func (x *MessageReactionsRemoveEmojiOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type MessageReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID string `protobuf:"bytes,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	ChannelID string `protobuf:"bytes,2,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	GuildID   string `protobuf:"bytes,3,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
}

func (x *MessageReference) Reset() {
	*x = MessageReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[370]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReference) ProtoMessage() {}

func (x *MessageReference) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[370]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReference.ProtoReflect.Descriptor instead.
func (*MessageReference) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{370}
}

func (x *MessageReference) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *MessageReference) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *MessageReference) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type MessageSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content         string                  `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	Embeds          []*MessageEmbed         `protobuf:"bytes,2,rep,name=Embeds,proto3" json:"Embeds,omitempty"`
	TTS             bool                    `protobuf:"varint,3,opt,name=TTS,proto3" json:"TTS,omitempty"`
	Components      []*MessageComponent     `protobuf:"bytes,4,rep,name=Components,proto3" json:"Components,omitempty"`
	Files           []*File                 `protobuf:"bytes,5,rep,name=Files,proto3" json:"Files,omitempty"`
	AllowedMentions *MessageAllowedMentions `protobuf:"bytes,6,opt,name=AllowedMentions,proto3" json:"AllowedMentions,omitempty"`
	Reference       *MessageReference       `protobuf:"bytes,7,opt,name=Reference,proto3" json:"Reference,omitempty"`
	File            *File                   `protobuf:"bytes,8,opt,name=File,proto3" json:"File,omitempty"`
	Embed           *MessageEmbed           `protobuf:"bytes,9,opt,name=Embed,proto3" json:"Embed,omitempty"`
}

func (x *MessageSend) Reset() {
	*x = MessageSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[371]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSend) ProtoMessage() {}

func (x *MessageSend) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[371]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSend.ProtoReflect.Descriptor instead.
func (*MessageSend) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{371}
}

func (x *MessageSend) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MessageSend) GetEmbeds() []*MessageEmbed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

func (x *MessageSend) GetTTS() bool {
	if x != nil {
		return x.TTS
	}
	return false
}

func (x *MessageSend) GetComponents() []*MessageComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *MessageSend) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *MessageSend) GetAllowedMentions() *MessageAllowedMentions {
	if x != nil {
		return x.AllowedMentions
	}
	return nil
}

func (x *MessageSend) GetReference() *MessageReference {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *MessageSend) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *MessageSend) GetEmbed() *MessageEmbed {
	if x != nil {
		return x.Embed
	}
	return nil
}

type MessageThreadStartComplexInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string       `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID string       `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Data      *ThreadStart `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MessageThreadStartComplexInput) Reset() {
	*x = MessageThreadStartComplexInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[372]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageThreadStartComplexInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageThreadStartComplexInput) ProtoMessage() {}

func (x *MessageThreadStartComplexInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[372]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageThreadStartComplexInput.ProtoReflect.Descriptor instead.
func (*MessageThreadStartComplexInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{372}
}

func (x *MessageThreadStartComplexInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *MessageThreadStartComplexInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *MessageThreadStartComplexInput) GetData() *ThreadStart {
	if x != nil {
		return x.Data
	}
	return nil
}

type MessageThreadStartComplexOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ch  *Channel `protobuf:"bytes,1,opt,name=ch,proto3" json:"ch,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *MessageThreadStartComplexOutput) Reset() {
	*x = MessageThreadStartComplexOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[373]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageThreadStartComplexOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageThreadStartComplexOutput) ProtoMessage() {}

func (x *MessageThreadStartComplexOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[373]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageThreadStartComplexOutput.ProtoReflect.Descriptor instead.
func (*MessageThreadStartComplexOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{373}
}

func (x *MessageThreadStartComplexOutput) GetCh() *Channel {
	if x != nil {
		return x.Ch
	}
	return nil
}

func (x *MessageThreadStartComplexOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type MessageThreadStartInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID       string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	MessageID       string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Name            string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ArchiveDuration int32  `protobuf:"varint,4,opt,name=archiveDuration,proto3" json:"archiveDuration,omitempty"`
}

func (x *MessageThreadStartInput) Reset() {
	*x = MessageThreadStartInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[374]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageThreadStartInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageThreadStartInput) ProtoMessage() {}

func (x *MessageThreadStartInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[374]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageThreadStartInput.ProtoReflect.Descriptor instead.
func (*MessageThreadStartInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{374}
}

func (x *MessageThreadStartInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *MessageThreadStartInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *MessageThreadStartInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageThreadStartInput) GetArchiveDuration() int32 {
	if x != nil {
		return x.ArchiveDuration
	}
	return 0
}

type MessageThreadStartOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ch  *Channel `protobuf:"bytes,1,opt,name=ch,proto3" json:"ch,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *MessageThreadStartOutput) Reset() {
	*x = MessageThreadStartOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[375]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageThreadStartOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageThreadStartOutput) ProtoMessage() {}

func (x *MessageThreadStartOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[375]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageThreadStartOutput.ProtoReflect.Descriptor instead.
func (*MessageThreadStartOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{375}
}

func (x *MessageThreadStartOutput) GetCh() *Channel {
	if x != nil {
		return x.Ch
	}
	return nil
}

func (x *MessageThreadStartOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type Party struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Size []int32 `protobuf:"varint,2,rep,packed,name=Size,proto3" json:"Size,omitempty"`
}

func (x *Party) Reset() {
	*x = Party{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[376]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Party) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Party) ProtoMessage() {}

func (x *Party) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[376]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Party.ProtoReflect.Descriptor instead.
func (*Party) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{376}
}

func (x *Party) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Party) GetSize() []int32 {
	if x != nil {
		return x.Size
	}
	return nil
}

type PermissionOverwrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type  int32  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Deny  int64  `protobuf:"varint,3,opt,name=Deny,proto3" json:"Deny,omitempty"`
	Allow int64  `protobuf:"varint,4,opt,name=Allow,proto3" json:"Allow,omitempty"`
}

func (x *PermissionOverwrite) Reset() {
	*x = PermissionOverwrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[377]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionOverwrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionOverwrite) ProtoMessage() {}

func (x *PermissionOverwrite) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[377]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionOverwrite.ProtoReflect.Descriptor instead.
func (*PermissionOverwrite) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{377}
}

func (x *PermissionOverwrite) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *PermissionOverwrite) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PermissionOverwrite) GetDeny() int64 {
	if x != nil {
		return x.Deny
	}
	return 0
}

func (x *PermissionOverwrite) GetAllow() int64 {
	if x != nil {
		return x.Allow
	}
	return 0
}

type Presence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User         *User         `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Status       string        `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Activities   []*Activity   `protobuf:"bytes,3,rep,name=Activities,proto3" json:"Activities,omitempty"`
	Since        int32         `protobuf:"varint,4,opt,name=Since,proto3" json:"Since,omitempty"`
	ClientStatus *ClientStatus `protobuf:"bytes,5,opt,name=ClientStatus,proto3" json:"ClientStatus,omitempty"`
}

func (x *Presence) Reset() {
	*x = Presence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[378]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Presence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Presence) ProtoMessage() {}

func (x *Presence) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[378]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Presence.ProtoReflect.Descriptor instead.
func (*Presence) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{378}
}

func (x *Presence) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Presence) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Presence) GetActivities() []*Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

func (x *Presence) GetSince() int32 {
	if x != nil {
		return x.Since
	}
	return 0
}

func (x *Presence) GetClientStatus() *ClientStatus {
	if x != nil {
		return x.ClientStatus
	}
	return nil
}

type Reader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Reader) Reset() {
	*x = Reader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[379]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reader) ProtoMessage() {}

func (x *Reader) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[379]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reader.ProtoReflect.Descriptor instead.
func (*Reader) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{379}
}

type RequestGuildMembersBatchInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildIDs  []string `protobuf:"bytes,1,rep,name=guildIDs,proto3" json:"guildIDs,omitempty"`
	Query     string   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit     int32    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Nonce     string   `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Presences bool     `protobuf:"varint,5,opt,name=presences,proto3" json:"presences,omitempty"`
}

func (x *RequestGuildMembersBatchInput) Reset() {
	*x = RequestGuildMembersBatchInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[380]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGuildMembersBatchInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGuildMembersBatchInput) ProtoMessage() {}

func (x *RequestGuildMembersBatchInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[380]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGuildMembersBatchInput.ProtoReflect.Descriptor instead.
func (*RequestGuildMembersBatchInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{380}
}

func (x *RequestGuildMembersBatchInput) GetGuildIDs() []string {
	if x != nil {
		return x.GuildIDs
	}
	return nil
}

func (x *RequestGuildMembersBatchInput) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *RequestGuildMembersBatchInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RequestGuildMembersBatchInput) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *RequestGuildMembersBatchInput) GetPresences() bool {
	if x != nil {
		return x.Presences
	}
	return false
}

type RequestGuildMembersBatchListInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildIDs  []string `protobuf:"bytes,1,rep,name=guildIDs,proto3" json:"guildIDs,omitempty"`
	UserIDs   []string `protobuf:"bytes,2,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	Limit     int32    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Nonce     string   `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Presences bool     `protobuf:"varint,5,opt,name=presences,proto3" json:"presences,omitempty"`
}

func (x *RequestGuildMembersBatchListInput) Reset() {
	*x = RequestGuildMembersBatchListInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[381]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGuildMembersBatchListInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGuildMembersBatchListInput) ProtoMessage() {}

func (x *RequestGuildMembersBatchListInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[381]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGuildMembersBatchListInput.ProtoReflect.Descriptor instead.
func (*RequestGuildMembersBatchListInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{381}
}

func (x *RequestGuildMembersBatchListInput) GetGuildIDs() []string {
	if x != nil {
		return x.GuildIDs
	}
	return nil
}

func (x *RequestGuildMembersBatchListInput) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *RequestGuildMembersBatchListInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RequestGuildMembersBatchListInput) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *RequestGuildMembersBatchListInput) GetPresences() bool {
	if x != nil {
		return x.Presences
	}
	return false
}

type RequestGuildMembersBatchListOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *RequestGuildMembersBatchListOutput) Reset() {
	*x = RequestGuildMembersBatchListOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[382]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGuildMembersBatchListOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGuildMembersBatchListOutput) ProtoMessage() {}

func (x *RequestGuildMembersBatchListOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[382]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGuildMembersBatchListOutput.ProtoReflect.Descriptor instead.
func (*RequestGuildMembersBatchListOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{382}
}

func (x *RequestGuildMembersBatchListOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type RequestGuildMembersBatchOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *RequestGuildMembersBatchOutput) Reset() {
	*x = RequestGuildMembersBatchOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[383]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGuildMembersBatchOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGuildMembersBatchOutput) ProtoMessage() {}

func (x *RequestGuildMembersBatchOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[383]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGuildMembersBatchOutput.ProtoReflect.Descriptor instead.
func (*RequestGuildMembersBatchOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{383}
}

func (x *RequestGuildMembersBatchOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type RequestGuildMembersInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID   string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Query     string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Nonce     string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Presences bool   `protobuf:"varint,5,opt,name=presences,proto3" json:"presences,omitempty"`
}

func (x *RequestGuildMembersInput) Reset() {
	*x = RequestGuildMembersInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[384]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGuildMembersInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGuildMembersInput) ProtoMessage() {}

func (x *RequestGuildMembersInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[384]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGuildMembersInput.ProtoReflect.Descriptor instead.
func (*RequestGuildMembersInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{384}
}

func (x *RequestGuildMembersInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *RequestGuildMembersInput) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *RequestGuildMembersInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RequestGuildMembersInput) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *RequestGuildMembersInput) GetPresences() bool {
	if x != nil {
		return x.Presences
	}
	return false
}

type RequestGuildMembersListInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID   string   `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	UserIDs   []string `protobuf:"bytes,2,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	Limit     int32    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Nonce     string   `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Presences bool     `protobuf:"varint,5,opt,name=presences,proto3" json:"presences,omitempty"`
}

func (x *RequestGuildMembersListInput) Reset() {
	*x = RequestGuildMembersListInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[385]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGuildMembersListInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGuildMembersListInput) ProtoMessage() {}

func (x *RequestGuildMembersListInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[385]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGuildMembersListInput.ProtoReflect.Descriptor instead.
func (*RequestGuildMembersListInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{385}
}

func (x *RequestGuildMembersListInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *RequestGuildMembersListInput) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *RequestGuildMembersListInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RequestGuildMembersListInput) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *RequestGuildMembersListInput) GetPresences() bool {
	if x != nil {
		return x.Presences
	}
	return false
}

type RequestGuildMembersListOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *RequestGuildMembersListOutput) Reset() {
	*x = RequestGuildMembersListOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[386]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGuildMembersListOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGuildMembersListOutput) ProtoMessage() {}

func (x *RequestGuildMembersListOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[386]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGuildMembersListOutput.ProtoReflect.Descriptor instead.
func (*RequestGuildMembersListOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{386}
}

func (x *RequestGuildMembersListOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type RequestGuildMembersOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *RequestGuildMembersOutput) Reset() {
	*x = RequestGuildMembersOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[387]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGuildMembersOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGuildMembersOutput) ProtoMessage() {}

func (x *RequestGuildMembersOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[387]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGuildMembersOutput.ProtoReflect.Descriptor instead.
func (*RequestGuildMembersOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{387}
}

func (x *RequestGuildMembersOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type RequestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method string     `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	UrlStr string     `protobuf:"bytes,2,opt,name=urlStr,proto3" json:"urlStr,omitempty"`
	Data   *anypb.Any `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RequestInput) Reset() {
	*x = RequestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[388]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInput) ProtoMessage() {}

func (x *RequestInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[388]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInput.ProtoReflect.Descriptor instead.
func (*RequestInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{388}
}

func (x *RequestInput) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RequestInput) GetUrlStr() string {
	if x != nil {
		return x.UrlStr
	}
	return ""
}

func (x *RequestInput) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type RequestOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []uint32 `protobuf:"varint,1,rep,packed,name=response,proto3" json:"response,omitempty"`
	Err      *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *RequestOutput) Reset() {
	*x = RequestOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[389]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestOutput) ProtoMessage() {}

func (x *RequestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[389]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestOutput.ProtoReflect.Descriptor instead.
func (*RequestOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{389}
}

func (x *RequestOutput) GetResponse() []uint32 {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *RequestOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type RequestWithBucketIDInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method   string     `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	UrlStr   string     `protobuf:"bytes,2,opt,name=urlStr,proto3" json:"urlStr,omitempty"`
	Data     *anypb.Any `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	BucketID string     `protobuf:"bytes,4,opt,name=bucketID,proto3" json:"bucketID,omitempty"`
}

func (x *RequestWithBucketIDInput) Reset() {
	*x = RequestWithBucketIDInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[390]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestWithBucketIDInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestWithBucketIDInput) ProtoMessage() {}

func (x *RequestWithBucketIDInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[390]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestWithBucketIDInput.ProtoReflect.Descriptor instead.
func (*RequestWithBucketIDInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{390}
}

func (x *RequestWithBucketIDInput) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RequestWithBucketIDInput) GetUrlStr() string {
	if x != nil {
		return x.UrlStr
	}
	return ""
}

func (x *RequestWithBucketIDInput) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RequestWithBucketIDInput) GetBucketID() string {
	if x != nil {
		return x.BucketID
	}
	return ""
}

type RequestWithBucketIDOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []uint32 `protobuf:"varint,1,rep,packed,name=response,proto3" json:"response,omitempty"`
	Err      *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *RequestWithBucketIDOutput) Reset() {
	*x = RequestWithBucketIDOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[391]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestWithBucketIDOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestWithBucketIDOutput) ProtoMessage() {}

func (x *RequestWithBucketIDOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[391]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestWithBucketIDOutput.ProtoReflect.Descriptor instead.
func (*RequestWithBucketIDOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{391}
}

func (x *RequestWithBucketIDOutput) GetResponse() []uint32 {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *RequestWithBucketIDOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Managed     bool   `protobuf:"varint,3,opt,name=Managed,proto3" json:"Managed,omitempty"`
	Mentionable bool   `protobuf:"varint,4,opt,name=Mentionable,proto3" json:"Mentionable,omitempty"`
	Hoist       bool   `protobuf:"varint,5,opt,name=Hoist,proto3" json:"Hoist,omitempty"`
	Color       int32  `protobuf:"varint,6,opt,name=Color,proto3" json:"Color,omitempty"`
	Position    int32  `protobuf:"varint,7,opt,name=Position,proto3" json:"Position,omitempty"`
	Permissions int64  `protobuf:"varint,8,opt,name=Permissions,proto3" json:"Permissions,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[392]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[392]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{392}
}

func (x *Role) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetManaged() bool {
	if x != nil {
		return x.Managed
	}
	return false
}

func (x *Role) GetMentionable() bool {
	if x != nil {
		return x.Mentionable
	}
	return false
}

func (x *Role) GetHoist() bool {
	if x != nil {
		return x.Hoist
	}
	return false
}

func (x *Role) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *Role) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Role) GetPermissions() int64 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

type RoleParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Color       int32  `protobuf:"varint,2,opt,name=Color,proto3" json:"Color,omitempty"`
	Hoist       bool   `protobuf:"varint,3,opt,name=Hoist,proto3" json:"Hoist,omitempty"`
	Permissions int64  `protobuf:"varint,4,opt,name=Permissions,proto3" json:"Permissions,omitempty"`
	Mentionable bool   `protobuf:"varint,5,opt,name=Mentionable,proto3" json:"Mentionable,omitempty"`
}

func (x *RoleParams) Reset() {
	*x = RoleParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[393]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleParams) ProtoMessage() {}

func (x *RoleParams) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[393]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleParams.ProtoReflect.Descriptor instead.
func (*RoleParams) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{393}
}

func (x *RoleParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleParams) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *RoleParams) GetHoist() bool {
	if x != nil {
		return x.Hoist
	}
	return false
}

func (x *RoleParams) GetPermissions() int64 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

func (x *RoleParams) GetMentionable() bool {
	if x != nil {
		return x.Mentionable
	}
	return false
}

type Secrets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Join     string `protobuf:"bytes,1,opt,name=Join,proto3" json:"Join,omitempty"`
	Spectate string `protobuf:"bytes,2,opt,name=Spectate,proto3" json:"Spectate,omitempty"`
	Match    string `protobuf:"bytes,3,opt,name=Match,proto3" json:"Match,omitempty"`
}

func (x *Secrets) Reset() {
	*x = Secrets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[394]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secrets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secrets) ProtoMessage() {}

func (x *Secrets) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[394]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secrets.ProtoReflect.Descriptor instead.
func (*Secrets) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{394}
}

func (x *Secrets) GetJoin() string {
	if x != nil {
		return x.Join
	}
	return ""
}

func (x *Secrets) GetSpectate() string {
	if x != nil {
		return x.Spectate
	}
	return ""
}

func (x *Secrets) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

type SessionInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total          int32 `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Remaining      int32 `protobuf:"varint,2,opt,name=Remaining,proto3" json:"Remaining,omitempty"`
	ResetAfter     int32 `protobuf:"varint,3,opt,name=ResetAfter,proto3" json:"ResetAfter,omitempty"`
	MaxConcurrency int32 `protobuf:"varint,4,opt,name=MaxConcurrency,proto3" json:"MaxConcurrency,omitempty"`
}

func (x *SessionInformation) Reset() {
	*x = SessionInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[395]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInformation) ProtoMessage() {}

func (x *SessionInformation) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[395]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInformation.ProtoReflect.Descriptor instead.
func (*SessionInformation) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{395}
}

func (x *SessionInformation) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SessionInformation) GetRemaining() int32 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *SessionInformation) GetResetAfter() int32 {
	if x != nil {
		return x.ResetAfter
	}
	return 0
}

func (x *SessionInformation) GetMaxConcurrency() int32 {
	if x != nil {
		return x.MaxConcurrency
	}
	return 0
}

type StageInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                    string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	GuildID               string `protobuf:"bytes,2,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	ChannelID             string `protobuf:"bytes,3,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	Topic                 string `protobuf:"bytes,4,opt,name=Topic,proto3" json:"Topic,omitempty"`
	PrivacyLevel          int32  `protobuf:"varint,5,opt,name=PrivacyLevel,proto3" json:"PrivacyLevel,omitempty"`
	DiscoverableDisabled  bool   `protobuf:"varint,6,opt,name=DiscoverableDisabled,proto3" json:"DiscoverableDisabled,omitempty"`
	GuildScheduledEventID string `protobuf:"bytes,7,opt,name=GuildScheduledEventID,proto3" json:"GuildScheduledEventID,omitempty"`
}

func (x *StageInstance) Reset() {
	*x = StageInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[396]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInstance) ProtoMessage() {}

func (x *StageInstance) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[396]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInstance.ProtoReflect.Descriptor instead.
func (*StageInstance) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{396}
}

func (x *StageInstance) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *StageInstance) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *StageInstance) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *StageInstance) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *StageInstance) GetPrivacyLevel() int32 {
	if x != nil {
		return x.PrivacyLevel
	}
	return 0
}

func (x *StageInstance) GetDiscoverableDisabled() bool {
	if x != nil {
		return x.DiscoverableDisabled
	}
	return false
}

func (x *StageInstance) GetGuildScheduledEventID() string {
	if x != nil {
		return x.GuildScheduledEventID
	}
	return ""
}

type StageInstanceCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *StageInstanceParams `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StageInstanceCreateInput) Reset() {
	*x = StageInstanceCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[397]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInstanceCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInstanceCreateInput) ProtoMessage() {}

func (x *StageInstanceCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[397]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInstanceCreateInput.ProtoReflect.Descriptor instead.
func (*StageInstanceCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{397}
}

func (x *StageInstanceCreateInput) GetData() *StageInstanceParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type StageInstanceCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Si  *StageInstance `protobuf:"bytes,1,opt,name=si,proto3" json:"si,omitempty"`
	Err *string        `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *StageInstanceCreateOutput) Reset() {
	*x = StageInstanceCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[398]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInstanceCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInstanceCreateOutput) ProtoMessage() {}

func (x *StageInstanceCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[398]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInstanceCreateOutput.ProtoReflect.Descriptor instead.
func (*StageInstanceCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{398}
}

func (x *StageInstanceCreateOutput) GetSi() *StageInstance {
	if x != nil {
		return x.Si
	}
	return nil
}

func (x *StageInstanceCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type StageInstanceDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *StageInstanceDeleteInput) Reset() {
	*x = StageInstanceDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[399]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInstanceDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInstanceDeleteInput) ProtoMessage() {}

func (x *StageInstanceDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[399]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInstanceDeleteInput.ProtoReflect.Descriptor instead.
func (*StageInstanceDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{399}
}

func (x *StageInstanceDeleteInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type StageInstanceDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *StageInstanceDeleteOutput) Reset() {
	*x = StageInstanceDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[400]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInstanceDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInstanceDeleteOutput) ProtoMessage() {}

func (x *StageInstanceDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[400]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInstanceDeleteOutput.ProtoReflect.Descriptor instead.
func (*StageInstanceDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{400}
}

func (x *StageInstanceDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type StageInstanceEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string               `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Data      *StageInstanceParams `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StageInstanceEditInput) Reset() {
	*x = StageInstanceEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[401]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInstanceEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInstanceEditInput) ProtoMessage() {}

func (x *StageInstanceEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[401]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInstanceEditInput.ProtoReflect.Descriptor instead.
func (*StageInstanceEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{401}
}

func (x *StageInstanceEditInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *StageInstanceEditInput) GetData() *StageInstanceParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type StageInstanceEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Si  *StageInstance `protobuf:"bytes,1,opt,name=si,proto3" json:"si,omitempty"`
	Err *string        `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *StageInstanceEditOutput) Reset() {
	*x = StageInstanceEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[402]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInstanceEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInstanceEditOutput) ProtoMessage() {}

func (x *StageInstanceEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[402]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInstanceEditOutput.ProtoReflect.Descriptor instead.
func (*StageInstanceEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{402}
}

func (x *StageInstanceEditOutput) GetSi() *StageInstance {
	if x != nil {
		return x.Si
	}
	return nil
}

func (x *StageInstanceEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type StageInstanceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *StageInstanceInput) Reset() {
	*x = StageInstanceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[403]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInstanceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInstanceInput) ProtoMessage() {}

func (x *StageInstanceInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[403]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInstanceInput.ProtoReflect.Descriptor instead.
func (*StageInstanceInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{403}
}

func (x *StageInstanceInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type StageInstanceOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Si  *StageInstance `protobuf:"bytes,1,opt,name=si,proto3" json:"si,omitempty"`
	Err *string        `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *StageInstanceOutput) Reset() {
	*x = StageInstanceOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[404]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInstanceOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInstanceOutput) ProtoMessage() {}

func (x *StageInstanceOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[404]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInstanceOutput.ProtoReflect.Descriptor instead.
func (*StageInstanceOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{404}
}

func (x *StageInstanceOutput) GetSi() *StageInstance {
	if x != nil {
		return x.Si
	}
	return nil
}

func (x *StageInstanceOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type StageInstanceParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID             string `protobuf:"bytes,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	Topic                 string `protobuf:"bytes,2,opt,name=Topic,proto3" json:"Topic,omitempty"`
	PrivacyLevel          int32  `protobuf:"varint,3,opt,name=PrivacyLevel,proto3" json:"PrivacyLevel,omitempty"`
	SendStartNotification bool   `protobuf:"varint,4,opt,name=SendStartNotification,proto3" json:"SendStartNotification,omitempty"`
}

func (x *StageInstanceParams) Reset() {
	*x = StageInstanceParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[405]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInstanceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInstanceParams) ProtoMessage() {}

func (x *StageInstanceParams) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[405]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInstanceParams.ProtoReflect.Descriptor instead.
func (*StageInstanceParams) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{405}
}

func (x *StageInstanceParams) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *StageInstanceParams) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *StageInstanceParams) GetPrivacyLevel() int32 {
	if x != nil {
		return x.PrivacyLevel
	}
	return 0
}

func (x *StageInstanceParams) GetSendStartNotification() bool {
	if x != nil {
		return x.SendStartNotification
	}
	return false
}

type Sticker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PackID      string `protobuf:"bytes,2,opt,name=PackID,proto3" json:"PackID,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Tags        string `protobuf:"bytes,5,opt,name=Tags,proto3" json:"Tags,omitempty"`
	Type        int32  `protobuf:"varint,6,opt,name=Type,proto3" json:"Type,omitempty"`
	FormatType  int32  `protobuf:"varint,7,opt,name=FormatType,proto3" json:"FormatType,omitempty"`
	Available   bool   `protobuf:"varint,8,opt,name=Available,proto3" json:"Available,omitempty"`
	GuildID     string `protobuf:"bytes,9,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	User        *User  `protobuf:"bytes,10,opt,name=User,proto3" json:"User,omitempty"`
	SortValue   int32  `protobuf:"varint,11,opt,name=SortValue,proto3" json:"SortValue,omitempty"`
}

func (x *Sticker) Reset() {
	*x = Sticker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[406]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sticker) ProtoMessage() {}

func (x *Sticker) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[406]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sticker.ProtoReflect.Descriptor instead.
func (*Sticker) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{406}
}

func (x *Sticker) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Sticker) GetPackID() string {
	if x != nil {
		return x.PackID
	}
	return ""
}

func (x *Sticker) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sticker) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Sticker) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *Sticker) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Sticker) GetFormatType() int32 {
	if x != nil {
		return x.FormatType
	}
	return 0
}

func (x *Sticker) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *Sticker) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *Sticker) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Sticker) GetSortValue() int32 {
	if x != nil {
		return x.SortValue
	}
	return 0
}

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string        `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string        `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string        `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Icon        string        `protobuf:"bytes,4,opt,name=Icon,proto3" json:"Icon,omitempty"`
	OwnerID     string        `protobuf:"bytes,5,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	Members     []*TeamMember `protobuf:"bytes,6,rep,name=Members,proto3" json:"Members,omitempty"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[407]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[407]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{407}
}

func (x *Team) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Team) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Team) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Team) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Team) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *Team) GetMembers() []*TeamMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type TeamMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User            *User    `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	TeamID          string   `protobuf:"bytes,2,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	MembershipState int32    `protobuf:"varint,3,opt,name=MembershipState,proto3" json:"MembershipState,omitempty"`
	Permissions     []string `protobuf:"bytes,4,rep,name=Permissions,proto3" json:"Permissions,omitempty"`
}

func (x *TeamMember) Reset() {
	*x = TeamMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[408]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMember) ProtoMessage() {}

func (x *TeamMember) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[408]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamMember.ProtoReflect.Descriptor instead.
func (*TeamMember) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{408}
}

func (x *TeamMember) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *TeamMember) GetTeamID() string {
	if x != nil {
		return x.TeamID
	}
	return ""
}

func (x *TeamMember) GetMembershipState() int32 {
	if x != nil {
		return x.MembershipState
	}
	return 0
}

func (x *TeamMember) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type ThreadJoinInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ThreadJoinInput) Reset() {
	*x = ThreadJoinInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[409]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadJoinInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadJoinInput) ProtoMessage() {}

func (x *ThreadJoinInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[409]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadJoinInput.ProtoReflect.Descriptor instead.
func (*ThreadJoinInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{409}
}

func (x *ThreadJoinInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ThreadJoinOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *ThreadJoinOutput) Reset() {
	*x = ThreadJoinOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[410]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadJoinOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadJoinOutput) ProtoMessage() {}

func (x *ThreadJoinOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[410]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadJoinOutput.ProtoReflect.Descriptor instead.
func (*ThreadJoinOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{410}
}

func (x *ThreadJoinOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type ThreadLeaveInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ThreadLeaveInput) Reset() {
	*x = ThreadLeaveInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[411]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadLeaveInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadLeaveInput) ProtoMessage() {}

func (x *ThreadLeaveInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[411]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadLeaveInput.ProtoReflect.Descriptor instead.
func (*ThreadLeaveInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{411}
}

func (x *ThreadLeaveInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ThreadLeaveOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *ThreadLeaveOutput) Reset() {
	*x = ThreadLeaveOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[412]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadLeaveOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadLeaveOutput) ProtoMessage() {}

func (x *ThreadLeaveOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[412]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadLeaveOutput.ProtoReflect.Descriptor instead.
func (*ThreadLeaveOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{412}
}

func (x *ThreadLeaveOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type ThreadMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID        string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	JoinTimestamp *Time  `protobuf:"bytes,3,opt,name=JoinTimestamp,proto3" json:"JoinTimestamp,omitempty"`
	Flags         int32  `protobuf:"varint,4,opt,name=Flags,proto3" json:"Flags,omitempty"`
}

func (x *ThreadMember) Reset() {
	*x = ThreadMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[413]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMember) ProtoMessage() {}

func (x *ThreadMember) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[413]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMember.ProtoReflect.Descriptor instead.
func (*ThreadMember) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{413}
}

func (x *ThreadMember) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ThreadMember) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ThreadMember) GetJoinTimestamp() *Time {
	if x != nil {
		return x.JoinTimestamp
	}
	return nil
}

func (x *ThreadMember) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ThreadMemberAddInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadID string `protobuf:"bytes,1,opt,name=threadID,proto3" json:"threadID,omitempty"`
	MemberID string `protobuf:"bytes,2,opt,name=memberID,proto3" json:"memberID,omitempty"`
}

func (x *ThreadMemberAddInput) Reset() {
	*x = ThreadMemberAddInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[414]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadMemberAddInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMemberAddInput) ProtoMessage() {}

func (x *ThreadMemberAddInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[414]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMemberAddInput.ProtoReflect.Descriptor instead.
func (*ThreadMemberAddInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{414}
}

func (x *ThreadMemberAddInput) GetThreadID() string {
	if x != nil {
		return x.ThreadID
	}
	return ""
}

func (x *ThreadMemberAddInput) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

type ThreadMemberAddOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *ThreadMemberAddOutput) Reset() {
	*x = ThreadMemberAddOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[415]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadMemberAddOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMemberAddOutput) ProtoMessage() {}

func (x *ThreadMemberAddOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[415]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMemberAddOutput.ProtoReflect.Descriptor instead.
func (*ThreadMemberAddOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{415}
}

func (x *ThreadMemberAddOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type ThreadMemberInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadID string `protobuf:"bytes,1,opt,name=threadID,proto3" json:"threadID,omitempty"`
	MemberID string `protobuf:"bytes,2,opt,name=memberID,proto3" json:"memberID,omitempty"`
}

func (x *ThreadMemberInput) Reset() {
	*x = ThreadMemberInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[416]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadMemberInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMemberInput) ProtoMessage() {}

func (x *ThreadMemberInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[416]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMemberInput.ProtoReflect.Descriptor instead.
func (*ThreadMemberInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{416}
}

func (x *ThreadMemberInput) GetThreadID() string {
	if x != nil {
		return x.ThreadID
	}
	return ""
}

func (x *ThreadMemberInput) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

type ThreadMemberOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *ThreadMember `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	Err    *string       `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ThreadMemberOutput) Reset() {
	*x = ThreadMemberOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[417]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadMemberOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMemberOutput) ProtoMessage() {}

func (x *ThreadMemberOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[417]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMemberOutput.ProtoReflect.Descriptor instead.
func (*ThreadMemberOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{417}
}

func (x *ThreadMemberOutput) GetMember() *ThreadMember {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *ThreadMemberOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ThreadMemberRemoveInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadID string `protobuf:"bytes,1,opt,name=threadID,proto3" json:"threadID,omitempty"`
	MemberID string `protobuf:"bytes,2,opt,name=memberID,proto3" json:"memberID,omitempty"`
}

func (x *ThreadMemberRemoveInput) Reset() {
	*x = ThreadMemberRemoveInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[418]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadMemberRemoveInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMemberRemoveInput) ProtoMessage() {}

func (x *ThreadMemberRemoveInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[418]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMemberRemoveInput.ProtoReflect.Descriptor instead.
func (*ThreadMemberRemoveInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{418}
}

func (x *ThreadMemberRemoveInput) GetThreadID() string {
	if x != nil {
		return x.ThreadID
	}
	return ""
}

func (x *ThreadMemberRemoveInput) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

type ThreadMemberRemoveOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 *string `protobuf:"bytes,1,opt,name=field1,proto3,oneof" json:"field1,omitempty"`
}

func (x *ThreadMemberRemoveOutput) Reset() {
	*x = ThreadMemberRemoveOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[419]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadMemberRemoveOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMemberRemoveOutput) ProtoMessage() {}

func (x *ThreadMemberRemoveOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[419]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMemberRemoveOutput.ProtoReflect.Descriptor instead.
func (*ThreadMemberRemoveOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{419}
}

func (x *ThreadMemberRemoveOutput) GetField1() string {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return ""
}

type ThreadMembersInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadID string `protobuf:"bytes,1,opt,name=threadID,proto3" json:"threadID,omitempty"`
}

func (x *ThreadMembersInput) Reset() {
	*x = ThreadMembersInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[420]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadMembersInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMembersInput) ProtoMessage() {}

func (x *ThreadMembersInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[420]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMembersInput.ProtoReflect.Descriptor instead.
func (*ThreadMembersInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{420}
}

func (x *ThreadMembersInput) GetThreadID() string {
	if x != nil {
		return x.ThreadID
	}
	return ""
}

type ThreadMembersOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*ThreadMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	Err     *string         `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ThreadMembersOutput) Reset() {
	*x = ThreadMembersOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[421]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadMembersOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMembersOutput) ProtoMessage() {}

func (x *ThreadMembersOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[421]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMembersOutput.ProtoReflect.Descriptor instead.
func (*ThreadMembersOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{421}
}

func (x *ThreadMembersOutput) GetMembers() []*ThreadMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ThreadMembersOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ThreadMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Archived            bool  `protobuf:"varint,1,opt,name=Archived,proto3" json:"Archived,omitempty"`
	AutoArchiveDuration int32 `protobuf:"varint,2,opt,name=AutoArchiveDuration,proto3" json:"AutoArchiveDuration,omitempty"`
	ArchiveTimestamp    *Time `protobuf:"bytes,3,opt,name=ArchiveTimestamp,proto3" json:"ArchiveTimestamp,omitempty"`
	Locked              bool  `protobuf:"varint,4,opt,name=Locked,proto3" json:"Locked,omitempty"`
	Invitable           bool  `protobuf:"varint,5,opt,name=Invitable,proto3" json:"Invitable,omitempty"`
}

func (x *ThreadMetadata) Reset() {
	*x = ThreadMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[422]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMetadata) ProtoMessage() {}

func (x *ThreadMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[422]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMetadata.ProtoReflect.Descriptor instead.
func (*ThreadMetadata) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{422}
}

func (x *ThreadMetadata) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *ThreadMetadata) GetAutoArchiveDuration() int32 {
	if x != nil {
		return x.AutoArchiveDuration
	}
	return 0
}

func (x *ThreadMetadata) GetArchiveTimestamp() *Time {
	if x != nil {
		return x.ArchiveTimestamp
	}
	return nil
}

func (x *ThreadMetadata) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *ThreadMetadata) GetInvitable() bool {
	if x != nil {
		return x.Invitable
	}
	return false
}

type ThreadStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	AutoArchiveDuration int32    `protobuf:"varint,2,opt,name=AutoArchiveDuration,proto3" json:"AutoArchiveDuration,omitempty"`
	Type                int32    `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Invitable           bool     `protobuf:"varint,4,opt,name=Invitable,proto3" json:"Invitable,omitempty"`
	RateLimitPerUser    int32    `protobuf:"varint,5,opt,name=RateLimitPerUser,proto3" json:"RateLimitPerUser,omitempty"`
	AppliedTags         []string `protobuf:"bytes,6,rep,name=AppliedTags,proto3" json:"AppliedTags,omitempty"`
}

func (x *ThreadStart) Reset() {
	*x = ThreadStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[423]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadStart) ProtoMessage() {}

func (x *ThreadStart) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[423]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadStart.ProtoReflect.Descriptor instead.
func (*ThreadStart) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{423}
}

func (x *ThreadStart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ThreadStart) GetAutoArchiveDuration() int32 {
	if x != nil {
		return x.AutoArchiveDuration
	}
	return 0
}

func (x *ThreadStart) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ThreadStart) GetInvitable() bool {
	if x != nil {
		return x.Invitable
	}
	return false
}

func (x *ThreadStart) GetRateLimitPerUser() int32 {
	if x != nil {
		return x.RateLimitPerUser
	}
	return 0
}

func (x *ThreadStart) GetAppliedTags() []string {
	if x != nil {
		return x.AppliedTags
	}
	return nil
}

type ThreadStartComplexInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string       `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Data      *ThreadStart `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ThreadStartComplexInput) Reset() {
	*x = ThreadStartComplexInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[424]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadStartComplexInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadStartComplexInput) ProtoMessage() {}

func (x *ThreadStartComplexInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[424]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadStartComplexInput.ProtoReflect.Descriptor instead.
func (*ThreadStartComplexInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{424}
}

func (x *ThreadStartComplexInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ThreadStartComplexInput) GetData() *ThreadStart {
	if x != nil {
		return x.Data
	}
	return nil
}

type ThreadStartComplexOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ch  *Channel `protobuf:"bytes,1,opt,name=ch,proto3" json:"ch,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ThreadStartComplexOutput) Reset() {
	*x = ThreadStartComplexOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[425]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadStartComplexOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadStartComplexOutput) ProtoMessage() {}

func (x *ThreadStartComplexOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[425]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadStartComplexOutput.ProtoReflect.Descriptor instead.
func (*ThreadStartComplexOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{425}
}

func (x *ThreadStartComplexOutput) GetCh() *Channel {
	if x != nil {
		return x.Ch
	}
	return nil
}

func (x *ThreadStartComplexOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ThreadStartInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID       string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Typ             int32  `protobuf:"varint,3,opt,name=typ,proto3" json:"typ,omitempty"`
	ArchiveDuration int32  `protobuf:"varint,4,opt,name=archiveDuration,proto3" json:"archiveDuration,omitempty"`
}

func (x *ThreadStartInput) Reset() {
	*x = ThreadStartInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[426]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadStartInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadStartInput) ProtoMessage() {}

func (x *ThreadStartInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[426]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadStartInput.ProtoReflect.Descriptor instead.
func (*ThreadStartInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{426}
}

func (x *ThreadStartInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ThreadStartInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ThreadStartInput) GetTyp() int32 {
	if x != nil {
		return x.Typ
	}
	return 0
}

func (x *ThreadStartInput) GetArchiveDuration() int32 {
	if x != nil {
		return x.ArchiveDuration
	}
	return 0
}

type ThreadStartOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ch  *Channel `protobuf:"bytes,1,opt,name=ch,proto3" json:"ch,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ThreadStartOutput) Reset() {
	*x = ThreadStartOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[427]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadStartOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadStartOutput) ProtoMessage() {}

func (x *ThreadStartOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[427]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadStartOutput.ProtoReflect.Descriptor instead.
func (*ThreadStartOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{427}
}

func (x *ThreadStartOutput) GetCh() *Channel {
	if x != nil {
		return x.Ch
	}
	return nil
}

func (x *ThreadStartOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ThreadsActiveInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *ThreadsActiveInput) Reset() {
	*x = ThreadsActiveInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[428]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsActiveInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsActiveInput) ProtoMessage() {}

func (x *ThreadsActiveInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[428]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsActiveInput.ProtoReflect.Descriptor instead.
func (*ThreadsActiveInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{428}
}

func (x *ThreadsActiveInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type ThreadsActiveOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threads *ThreadsList `protobuf:"bytes,1,opt,name=threads,proto3" json:"threads,omitempty"`
	Err     *string      `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ThreadsActiveOutput) Reset() {
	*x = ThreadsActiveOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[429]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsActiveOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsActiveOutput) ProtoMessage() {}

func (x *ThreadsActiveOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[429]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsActiveOutput.ProtoReflect.Descriptor instead.
func (*ThreadsActiveOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{429}
}

func (x *ThreadsActiveOutput) GetThreads() *ThreadsList {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *ThreadsActiveOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ThreadsArchivedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Before    *Time  `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ThreadsArchivedInput) Reset() {
	*x = ThreadsArchivedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[430]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsArchivedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsArchivedInput) ProtoMessage() {}

func (x *ThreadsArchivedInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[430]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsArchivedInput.ProtoReflect.Descriptor instead.
func (*ThreadsArchivedInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{430}
}

func (x *ThreadsArchivedInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ThreadsArchivedInput) GetBefore() *Time {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ThreadsArchivedInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ThreadsArchivedOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threads *ThreadsList `protobuf:"bytes,1,opt,name=threads,proto3" json:"threads,omitempty"`
	Err     *string      `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ThreadsArchivedOutput) Reset() {
	*x = ThreadsArchivedOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[431]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsArchivedOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsArchivedOutput) ProtoMessage() {}

func (x *ThreadsArchivedOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[431]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsArchivedOutput.ProtoReflect.Descriptor instead.
func (*ThreadsArchivedOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{431}
}

func (x *ThreadsArchivedOutput) GetThreads() *ThreadsList {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *ThreadsArchivedOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ThreadsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threads []*Channel      `protobuf:"bytes,1,rep,name=Threads,proto3" json:"Threads,omitempty"`
	Members []*ThreadMember `protobuf:"bytes,2,rep,name=Members,proto3" json:"Members,omitempty"`
	HasMore bool            `protobuf:"varint,3,opt,name=HasMore,proto3" json:"HasMore,omitempty"`
}

func (x *ThreadsList) Reset() {
	*x = ThreadsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[432]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsList) ProtoMessage() {}

func (x *ThreadsList) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[432]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsList.ProtoReflect.Descriptor instead.
func (*ThreadsList) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{432}
}

func (x *ThreadsList) GetThreads() []*Channel {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *ThreadsList) GetMembers() []*ThreadMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ThreadsList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type ThreadsPrivateArchivedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Before    *Time  `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ThreadsPrivateArchivedInput) Reset() {
	*x = ThreadsPrivateArchivedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[433]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsPrivateArchivedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsPrivateArchivedInput) ProtoMessage() {}

func (x *ThreadsPrivateArchivedInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[433]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsPrivateArchivedInput.ProtoReflect.Descriptor instead.
func (*ThreadsPrivateArchivedInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{433}
}

func (x *ThreadsPrivateArchivedInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ThreadsPrivateArchivedInput) GetBefore() *Time {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ThreadsPrivateArchivedInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ThreadsPrivateArchivedOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threads *ThreadsList `protobuf:"bytes,1,opt,name=threads,proto3" json:"threads,omitempty"`
	Err     *string      `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ThreadsPrivateArchivedOutput) Reset() {
	*x = ThreadsPrivateArchivedOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[434]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsPrivateArchivedOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsPrivateArchivedOutput) ProtoMessage() {}

func (x *ThreadsPrivateArchivedOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[434]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsPrivateArchivedOutput.ProtoReflect.Descriptor instead.
func (*ThreadsPrivateArchivedOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{434}
}

func (x *ThreadsPrivateArchivedOutput) GetThreads() *ThreadsList {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *ThreadsPrivateArchivedOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type ThreadsPrivateJoinedArchivedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Before    *Time  `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ThreadsPrivateJoinedArchivedInput) Reset() {
	*x = ThreadsPrivateJoinedArchivedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[435]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsPrivateJoinedArchivedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsPrivateJoinedArchivedInput) ProtoMessage() {}

func (x *ThreadsPrivateJoinedArchivedInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[435]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsPrivateJoinedArchivedInput.ProtoReflect.Descriptor instead.
func (*ThreadsPrivateJoinedArchivedInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{435}
}

func (x *ThreadsPrivateJoinedArchivedInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *ThreadsPrivateJoinedArchivedInput) GetBefore() *Time {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ThreadsPrivateJoinedArchivedInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ThreadsPrivateJoinedArchivedOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threads *ThreadsList `protobuf:"bytes,1,opt,name=threads,proto3" json:"threads,omitempty"`
	Err     *string      `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *ThreadsPrivateJoinedArchivedOutput) Reset() {
	*x = ThreadsPrivateJoinedArchivedOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[436]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadsPrivateJoinedArchivedOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsPrivateJoinedArchivedOutput) ProtoMessage() {}

func (x *ThreadsPrivateJoinedArchivedOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[436]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsPrivateJoinedArchivedOutput.ProtoReflect.Descriptor instead.
func (*ThreadsPrivateJoinedArchivedOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{436}
}

func (x *ThreadsPrivateJoinedArchivedOutput) GetThreads() *ThreadsList {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *ThreadsPrivateJoinedArchivedOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type Time struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Time) Reset() {
	*x = Time{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[437]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[437]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{437}
}

type TimeStamps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndTimestamp   int64 `protobuf:"varint,1,opt,name=EndTimestamp,proto3" json:"EndTimestamp,omitempty"`
	StartTimestamp int64 `protobuf:"varint,2,opt,name=StartTimestamp,proto3" json:"StartTimestamp,omitempty"`
}

func (x *TimeStamps) Reset() {
	*x = TimeStamps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[438]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeStamps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeStamps) ProtoMessage() {}

func (x *TimeStamps) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[438]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeStamps.ProtoReflect.Descriptor instead.
func (*TimeStamps) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{438}
}

func (x *TimeStamps) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

func (x *TimeStamps) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

type UpdateGameStatusInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idle int32  `protobuf:"varint,1,opt,name=idle,proto3" json:"idle,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateGameStatusInput) Reset() {
	*x = UpdateGameStatusInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[439]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameStatusInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameStatusInput) ProtoMessage() {}

func (x *UpdateGameStatusInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[439]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameStatusInput.ProtoReflect.Descriptor instead.
func (*UpdateGameStatusInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{439}
}

func (x *UpdateGameStatusInput) GetIdle() int32 {
	if x != nil {
		return x.Idle
	}
	return 0
}

func (x *UpdateGameStatusInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateGameStatusOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UpdateGameStatusOutput) Reset() {
	*x = UpdateGameStatusOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[440]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameStatusOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameStatusOutput) ProtoMessage() {}

func (x *UpdateGameStatusOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[440]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameStatusOutput.ProtoReflect.Descriptor instead.
func (*UpdateGameStatusOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{440}
}

func (x *UpdateGameStatusOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UpdateListeningStatusInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateListeningStatusInput) Reset() {
	*x = UpdateListeningStatusInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[441]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListeningStatusInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListeningStatusInput) ProtoMessage() {}

func (x *UpdateListeningStatusInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[441]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListeningStatusInput.ProtoReflect.Descriptor instead.
func (*UpdateListeningStatusInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{441}
}

func (x *UpdateListeningStatusInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateListeningStatusOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UpdateListeningStatusOutput) Reset() {
	*x = UpdateListeningStatusOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[442]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListeningStatusOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListeningStatusOutput) ProtoMessage() {}

func (x *UpdateListeningStatusOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[442]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListeningStatusOutput.ProtoReflect.Descriptor instead.
func (*UpdateListeningStatusOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{442}
}

func (x *UpdateListeningStatusOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UpdateStatusComplexInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usd *UpdateStatusData `protobuf:"bytes,1,opt,name=usd,proto3" json:"usd,omitempty"`
}

func (x *UpdateStatusComplexInput) Reset() {
	*x = UpdateStatusComplexInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[443]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusComplexInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusComplexInput) ProtoMessage() {}

func (x *UpdateStatusComplexInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[443]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusComplexInput.ProtoReflect.Descriptor instead.
func (*UpdateStatusComplexInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{443}
}

func (x *UpdateStatusComplexInput) GetUsd() *UpdateStatusData {
	if x != nil {
		return x.Usd
	}
	return nil
}

type UpdateStatusComplexOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UpdateStatusComplexOutput) Reset() {
	*x = UpdateStatusComplexOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[444]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusComplexOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusComplexOutput) ProtoMessage() {}

func (x *UpdateStatusComplexOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[444]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusComplexOutput.ProtoReflect.Descriptor instead.
func (*UpdateStatusComplexOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{444}
}

func (x *UpdateStatusComplexOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UpdateStatusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdleSince  int32       `protobuf:"varint,1,opt,name=IdleSince,proto3" json:"IdleSince,omitempty"`
	Activities []*Activity `protobuf:"bytes,2,rep,name=Activities,proto3" json:"Activities,omitempty"`
	AFK        bool        `protobuf:"varint,3,opt,name=AFK,proto3" json:"AFK,omitempty"`
	Status     string      `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *UpdateStatusData) Reset() {
	*x = UpdateStatusData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[445]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusData) ProtoMessage() {}

func (x *UpdateStatusData) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[445]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusData.ProtoReflect.Descriptor instead.
func (*UpdateStatusData) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{445}
}

func (x *UpdateStatusData) GetIdleSince() int32 {
	if x != nil {
		return x.IdleSince
	}
	return 0
}

func (x *UpdateStatusData) GetActivities() []*Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

func (x *UpdateStatusData) GetAFK() bool {
	if x != nil {
		return x.AFK
	}
	return false
}

func (x *UpdateStatusData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateStreamingStatusInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idle int32  `protobuf:"varint,1,opt,name=idle,proto3" json:"idle,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UpdateStreamingStatusInput) Reset() {
	*x = UpdateStreamingStatusInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[446]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStreamingStatusInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStreamingStatusInput) ProtoMessage() {}

func (x *UpdateStreamingStatusInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[446]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStreamingStatusInput.ProtoReflect.Descriptor instead.
func (*UpdateStreamingStatusInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{446}
}

func (x *UpdateStreamingStatusInput) GetIdle() int32 {
	if x != nil {
		return x.Idle
	}
	return 0
}

func (x *UpdateStreamingStatusInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateStreamingStatusInput) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type UpdateStreamingStatusOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UpdateStreamingStatusOutput) Reset() {
	*x = UpdateStreamingStatusOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[447]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStreamingStatusOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStreamingStatusOutput) ProtoMessage() {}

func (x *UpdateStreamingStatusOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[447]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStreamingStatusOutput.ProtoReflect.Descriptor instead.
func (*UpdateStreamingStatusOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{447}
}

func (x *UpdateStreamingStatusOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UpdateWatchStatusInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idle int32  `protobuf:"varint,1,opt,name=idle,proto3" json:"idle,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateWatchStatusInput) Reset() {
	*x = UpdateWatchStatusInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[448]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWatchStatusInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWatchStatusInput) ProtoMessage() {}

func (x *UpdateWatchStatusInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[448]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWatchStatusInput.ProtoReflect.Descriptor instead.
func (*UpdateWatchStatusInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{448}
}

func (x *UpdateWatchStatusInput) GetIdle() int32 {
	if x != nil {
		return x.Idle
	}
	return 0
}

func (x *UpdateWatchStatusInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateWatchStatusOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UpdateWatchStatusOutput) Reset() {
	*x = UpdateWatchStatusOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[449]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWatchStatusOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWatchStatusOutput) ProtoMessage() {}

func (x *UpdateWatchStatusOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[449]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWatchStatusOutput.ProtoReflect.Descriptor instead.
func (*UpdateWatchStatusOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{449}
}

func (x *UpdateWatchStatusOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Email         string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Username      string `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	Avatar        string `protobuf:"bytes,4,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Locale        string `protobuf:"bytes,5,opt,name=Locale,proto3" json:"Locale,omitempty"`
	Discriminator string `protobuf:"bytes,6,opt,name=Discriminator,proto3" json:"Discriminator,omitempty"`
	Token         string `protobuf:"bytes,7,opt,name=Token,proto3" json:"Token,omitempty"`
	Verified      bool   `protobuf:"varint,8,opt,name=Verified,proto3" json:"Verified,omitempty"`
	MFAEnabled    bool   `protobuf:"varint,9,opt,name=MFAEnabled,proto3" json:"MFAEnabled,omitempty"`
	Banner        string `protobuf:"bytes,10,opt,name=Banner,proto3" json:"Banner,omitempty"`
	AccentColor   int32  `protobuf:"varint,11,opt,name=AccentColor,proto3" json:"AccentColor,omitempty"`
	Bot           bool   `protobuf:"varint,12,opt,name=Bot,proto3" json:"Bot,omitempty"`
	PublicFlags   int32  `protobuf:"varint,13,opt,name=PublicFlags,proto3" json:"PublicFlags,omitempty"`
	PremiumType   int32  `protobuf:"varint,14,opt,name=PremiumType,proto3" json:"PremiumType,omitempty"`
	System        bool   `protobuf:"varint,15,opt,name=System,proto3" json:"System,omitempty"`
	Flags         int32  `protobuf:"varint,16,opt,name=Flags,proto3" json:"Flags,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[450]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[450]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{450}
}

func (x *User) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *User) GetDiscriminator() string {
	if x != nil {
		return x.Discriminator
	}
	return ""
}

func (x *User) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *User) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *User) GetMFAEnabled() bool {
	if x != nil {
		return x.MFAEnabled
	}
	return false
}

func (x *User) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *User) GetAccentColor() int32 {
	if x != nil {
		return x.AccentColor
	}
	return 0
}

func (x *User) GetBot() bool {
	if x != nil {
		return x.Bot
	}
	return false
}

func (x *User) GetPublicFlags() int32 {
	if x != nil {
		return x.PublicFlags
	}
	return 0
}

func (x *User) GetPremiumType() int32 {
	if x != nil {
		return x.PremiumType
	}
	return 0
}

func (x *User) GetSystem() bool {
	if x != nil {
		return x.System
	}
	return false
}

func (x *User) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type UserApplicationRoleConnectionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
}

func (x *UserApplicationRoleConnectionInput) Reset() {
	*x = UserApplicationRoleConnectionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[451]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserApplicationRoleConnectionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserApplicationRoleConnectionInput) ProtoMessage() {}

func (x *UserApplicationRoleConnectionInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[451]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserApplicationRoleConnectionInput.ProtoReflect.Descriptor instead.
func (*UserApplicationRoleConnectionInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{451}
}

func (x *UserApplicationRoleConnectionInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type UserApplicationRoleConnectionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *ApplicationRoleConnection `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string                    `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UserApplicationRoleConnectionOutput) Reset() {
	*x = UserApplicationRoleConnectionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[452]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserApplicationRoleConnectionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserApplicationRoleConnectionOutput) ProtoMessage() {}

func (x *UserApplicationRoleConnectionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[452]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserApplicationRoleConnectionOutput.ProtoReflect.Descriptor instead.
func (*UserApplicationRoleConnectionOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{452}
}

func (x *UserApplicationRoleConnectionOutput) GetSt() *ApplicationRoleConnection {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *UserApplicationRoleConnectionOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UserApplicationRoleConnectionUpdateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string                     `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	Rconn *ApplicationRoleConnection `protobuf:"bytes,2,opt,name=rconn,proto3" json:"rconn,omitempty"`
}

func (x *UserApplicationRoleConnectionUpdateInput) Reset() {
	*x = UserApplicationRoleConnectionUpdateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[453]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserApplicationRoleConnectionUpdateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserApplicationRoleConnectionUpdateInput) ProtoMessage() {}

func (x *UserApplicationRoleConnectionUpdateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[453]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserApplicationRoleConnectionUpdateInput.ProtoReflect.Descriptor instead.
func (*UserApplicationRoleConnectionUpdateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{453}
}

func (x *UserApplicationRoleConnectionUpdateInput) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UserApplicationRoleConnectionUpdateInput) GetRconn() *ApplicationRoleConnection {
	if x != nil {
		return x.Rconn
	}
	return nil
}

type UserApplicationRoleConnectionUpdateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *ApplicationRoleConnection `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string                    `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UserApplicationRoleConnectionUpdateOutput) Reset() {
	*x = UserApplicationRoleConnectionUpdateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[454]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserApplicationRoleConnectionUpdateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserApplicationRoleConnectionUpdateOutput) ProtoMessage() {}

func (x *UserApplicationRoleConnectionUpdateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[454]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserApplicationRoleConnectionUpdateOutput.ProtoReflect.Descriptor instead.
func (*UserApplicationRoleConnectionUpdateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{454}
}

func (x *UserApplicationRoleConnectionUpdateOutput) GetSt() *ApplicationRoleConnection {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *UserApplicationRoleConnectionUpdateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UserAvatarDecodeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	U *User `protobuf:"bytes,1,opt,name=u,proto3" json:"u,omitempty"`
}

func (x *UserAvatarDecodeInput) Reset() {
	*x = UserAvatarDecodeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[455]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAvatarDecodeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAvatarDecodeInput) ProtoMessage() {}

func (x *UserAvatarDecodeInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[455]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAvatarDecodeInput.ProtoReflect.Descriptor instead.
func (*UserAvatarDecodeInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{455}
}

func (x *UserAvatarDecodeInput) GetU() *User {
	if x != nil {
		return x.U
	}
	return nil
}

type UserAvatarDecodeOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Img *Image  `protobuf:"bytes,1,opt,name=img,proto3" json:"img,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UserAvatarDecodeOutput) Reset() {
	*x = UserAvatarDecodeOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[456]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAvatarDecodeOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAvatarDecodeOutput) ProtoMessage() {}

func (x *UserAvatarDecodeOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[456]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAvatarDecodeOutput.ProtoReflect.Descriptor instead.
func (*UserAvatarDecodeOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{456}
}

func (x *UserAvatarDecodeOutput) GetImg() *Image {
	if x != nil {
		return x.Img
	}
	return nil
}

func (x *UserAvatarDecodeOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UserAvatarInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserAvatarInput) Reset() {
	*x = UserAvatarInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[457]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAvatarInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAvatarInput) ProtoMessage() {}

func (x *UserAvatarInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[457]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAvatarInput.ProtoReflect.Descriptor instead.
func (*UserAvatarInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{457}
}

func (x *UserAvatarInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserAvatarOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Img *Image  `protobuf:"bytes,1,opt,name=img,proto3" json:"img,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UserAvatarOutput) Reset() {
	*x = UserAvatarOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[458]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAvatarOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAvatarOutput) ProtoMessage() {}

func (x *UserAvatarOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[458]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAvatarOutput.ProtoReflect.Descriptor instead.
func (*UserAvatarOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{458}
}

func (x *UserAvatarOutput) GetImg() *Image {
	if x != nil {
		return x.Img
	}
	return nil
}

func (x *UserAvatarOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UserChannelCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientID string `protobuf:"bytes,1,opt,name=recipientID,proto3" json:"recipientID,omitempty"`
}

func (x *UserChannelCreateInput) Reset() {
	*x = UserChannelCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[459]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChannelCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelCreateInput) ProtoMessage() {}

func (x *UserChannelCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[459]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelCreateInput.ProtoReflect.Descriptor instead.
func (*UserChannelCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{459}
}

func (x *UserChannelCreateInput) GetRecipientID() string {
	if x != nil {
		return x.RecipientID
	}
	return ""
}

type UserChannelCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Channel `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UserChannelCreateOutput) Reset() {
	*x = UserChannelCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[460]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChannelCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelCreateOutput) ProtoMessage() {}

func (x *UserChannelCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[460]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelCreateOutput.ProtoReflect.Descriptor instead.
func (*UserChannelCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{460}
}

func (x *UserChannelCreateOutput) GetSt() *Channel {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *UserChannelCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UserChannelPermissionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ChannelID string `protobuf:"bytes,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *UserChannelPermissionsInput) Reset() {
	*x = UserChannelPermissionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[461]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChannelPermissionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelPermissionsInput) ProtoMessage() {}

func (x *UserChannelPermissionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[461]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelPermissionsInput.ProtoReflect.Descriptor instead.
func (*UserChannelPermissionsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{461}
}

func (x *UserChannelPermissionsInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserChannelPermissionsInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type UserChannelPermissionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apermissions int64   `protobuf:"varint,1,opt,name=apermissions,proto3" json:"apermissions,omitempty"`
	Err          *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UserChannelPermissionsOutput) Reset() {
	*x = UserChannelPermissionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[462]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChannelPermissionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelPermissionsOutput) ProtoMessage() {}

func (x *UserChannelPermissionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[462]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelPermissionsOutput.ProtoReflect.Descriptor instead.
func (*UserChannelPermissionsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{462}
}

func (x *UserChannelPermissionsOutput) GetApermissions() int64 {
	if x != nil {
		return x.Apermissions
	}
	return 0
}

func (x *UserChannelPermissionsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UserConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string         `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name         string         `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Type         string         `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Revoked      bool           `protobuf:"varint,4,opt,name=Revoked,proto3" json:"Revoked,omitempty"`
	Integrations []*Integration `protobuf:"bytes,5,rep,name=Integrations,proto3" json:"Integrations,omitempty"`
}

func (x *UserConnection) Reset() {
	*x = UserConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[463]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConnection) ProtoMessage() {}

func (x *UserConnection) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[463]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConnection.ProtoReflect.Descriptor instead.
func (*UserConnection) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{463}
}

func (x *UserConnection) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UserConnection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserConnection) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserConnection) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

func (x *UserConnection) GetIntegrations() []*Integration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

type UserConnectionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserConnectionsInput) Reset() {
	*x = UserConnectionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[464]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConnectionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConnectionsInput) ProtoMessage() {}

func (x *UserConnectionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[464]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConnectionsInput.ProtoReflect.Descriptor instead.
func (*UserConnectionsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{464}
}

type UserConnectionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conn []*UserConnection `protobuf:"bytes,1,rep,name=conn,proto3" json:"conn,omitempty"`
	Err  *string           `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UserConnectionsOutput) Reset() {
	*x = UserConnectionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[465]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConnectionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConnectionsOutput) ProtoMessage() {}

func (x *UserConnectionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[465]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConnectionsOutput.ProtoReflect.Descriptor instead.
func (*UserConnectionsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{465}
}

func (x *UserConnectionsOutput) GetConn() []*UserConnection {
	if x != nil {
		return x.Conn
	}
	return nil
}

func (x *UserConnectionsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UserGuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Icon        string   `protobuf:"bytes,3,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Owner       bool     `protobuf:"varint,4,opt,name=Owner,proto3" json:"Owner,omitempty"`
	Permissions int64    `protobuf:"varint,5,opt,name=Permissions,proto3" json:"Permissions,omitempty"`
	Features    []string `protobuf:"bytes,6,rep,name=Features,proto3" json:"Features,omitempty"`
}

func (x *UserGuild) Reset() {
	*x = UserGuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[466]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGuild) ProtoMessage() {}

func (x *UserGuild) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[466]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGuild.ProtoReflect.Descriptor instead.
func (*UserGuild) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{466}
}

func (x *UserGuild) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UserGuild) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserGuild) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UserGuild) GetOwner() bool {
	if x != nil {
		return x.Owner
	}
	return false
}

func (x *UserGuild) GetPermissions() int64 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

func (x *UserGuild) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

type UserGuildMemberInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
}

func (x *UserGuildMemberInput) Reset() {
	*x = UserGuildMemberInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[467]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGuildMemberInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGuildMemberInput) ProtoMessage() {}

func (x *UserGuildMemberInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[467]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGuildMemberInput.ProtoReflect.Descriptor instead.
func (*UserGuildMemberInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{467}
}

func (x *UserGuildMemberInput) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

type UserGuildMemberOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Member `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UserGuildMemberOutput) Reset() {
	*x = UserGuildMemberOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[468]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGuildMemberOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGuildMemberOutput) ProtoMessage() {}

func (x *UserGuildMemberOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[468]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGuildMemberOutput.ProtoReflect.Descriptor instead.
func (*UserGuildMemberOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{468}
}

func (x *UserGuildMemberOutput) GetSt() *Member {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *UserGuildMemberOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UserGuildsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit    int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	BeforeID string `protobuf:"bytes,2,opt,name=beforeID,proto3" json:"beforeID,omitempty"`
	AfterID  string `protobuf:"bytes,3,opt,name=afterID,proto3" json:"afterID,omitempty"`
}

func (x *UserGuildsInput) Reset() {
	*x = UserGuildsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[469]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGuildsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGuildsInput) ProtoMessage() {}

func (x *UserGuildsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[469]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGuildsInput.ProtoReflect.Descriptor instead.
func (*UserGuildsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{469}
}

func (x *UserGuildsInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *UserGuildsInput) GetBeforeID() string {
	if x != nil {
		return x.BeforeID
	}
	return ""
}

func (x *UserGuildsInput) GetAfterID() string {
	if x != nil {
		return x.AfterID
	}
	return ""
}

type UserGuildsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*UserGuild `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string      `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UserGuildsOutput) Reset() {
	*x = UserGuildsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[470]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGuildsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGuildsOutput) ProtoMessage() {}

func (x *UserGuildsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[470]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGuildsOutput.ProtoReflect.Descriptor instead.
func (*UserGuildsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{470}
}

func (x *UserGuildsOutput) GetSt() []*UserGuild {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *UserGuildsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UserInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserInput) Reset() {
	*x = UserInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[471]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInput) ProtoMessage() {}

func (x *UserInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[471]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInput.ProtoReflect.Descriptor instead.
func (*UserInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{471}
}

func (x *UserInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *User   `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UserOutput) Reset() {
	*x = UserOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[472]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOutput) ProtoMessage() {}

func (x *UserOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[472]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOutput.ProtoReflect.Descriptor instead.
func (*UserOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{472}
}

func (x *UserOutput) GetSt() *User {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *UserOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type UserUpdateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Avatar   string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *UserUpdateInput) Reset() {
	*x = UserUpdateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[473]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateInput) ProtoMessage() {}

func (x *UserUpdateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[473]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateInput.ProtoReflect.Descriptor instead.
func (*UserUpdateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{473}
}

func (x *UserUpdateInput) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserUpdateInput) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type UserUpdateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *User   `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *UserUpdateOutput) Reset() {
	*x = UserUpdateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[474]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateOutput) ProtoMessage() {}

func (x *UserUpdateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[474]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateOutput.ProtoReflect.Descriptor instead.
func (*UserUpdateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{474}
}

func (x *UserUpdateOutput) GetSt() *User {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *UserUpdateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type VoiceRegion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *VoiceRegion) Reset() {
	*x = VoiceRegion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[475]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceRegion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceRegion) ProtoMessage() {}

func (x *VoiceRegion) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[475]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceRegion.ProtoReflect.Descriptor instead.
func (*VoiceRegion) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{475}
}

func (x *VoiceRegion) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *VoiceRegion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VoiceRegionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VoiceRegionsInput) Reset() {
	*x = VoiceRegionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[476]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceRegionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceRegionsInput) ProtoMessage() {}

func (x *VoiceRegionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[476]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceRegionsInput.ProtoReflect.Descriptor instead.
func (*VoiceRegionsInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{476}
}

type VoiceRegionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  []*VoiceRegion `protobuf:"bytes,1,rep,name=st,proto3" json:"st,omitempty"`
	Err *string        `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *VoiceRegionsOutput) Reset() {
	*x = VoiceRegionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[477]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceRegionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceRegionsOutput) ProtoMessage() {}

func (x *VoiceRegionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[477]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceRegionsOutput.ProtoReflect.Descriptor instead.
func (*VoiceRegionsOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{477}
}

func (x *VoiceRegionsOutput) GetSt() []*VoiceRegion {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *VoiceRegionsOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type VoiceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID                 string  `protobuf:"bytes,1,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	ChannelID               string  `protobuf:"bytes,2,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	UserID                  string  `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Member                  *Member `protobuf:"bytes,4,opt,name=Member,proto3" json:"Member,omitempty"`
	SessionID               string  `protobuf:"bytes,5,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	Deaf                    bool    `protobuf:"varint,6,opt,name=Deaf,proto3" json:"Deaf,omitempty"`
	Mute                    bool    `protobuf:"varint,7,opt,name=Mute,proto3" json:"Mute,omitempty"`
	SelfDeaf                bool    `protobuf:"varint,8,opt,name=SelfDeaf,proto3" json:"SelfDeaf,omitempty"`
	SelfMute                bool    `protobuf:"varint,9,opt,name=SelfMute,proto3" json:"SelfMute,omitempty"`
	SelfStream              bool    `protobuf:"varint,10,opt,name=SelfStream,proto3" json:"SelfStream,omitempty"`
	SelfVideo               bool    `protobuf:"varint,11,opt,name=SelfVideo,proto3" json:"SelfVideo,omitempty"`
	Suppress                bool    `protobuf:"varint,12,opt,name=Suppress,proto3" json:"Suppress,omitempty"`
	RequestToSpeakTimestamp *Time   `protobuf:"bytes,13,opt,name=RequestToSpeakTimestamp,proto3" json:"RequestToSpeakTimestamp,omitempty"`
}

func (x *VoiceState) Reset() {
	*x = VoiceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[478]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceState) ProtoMessage() {}

func (x *VoiceState) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[478]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceState.ProtoReflect.Descriptor instead.
func (*VoiceState) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{478}
}

func (x *VoiceState) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *VoiceState) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *VoiceState) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *VoiceState) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *VoiceState) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *VoiceState) GetDeaf() bool {
	if x != nil {
		return x.Deaf
	}
	return false
}

func (x *VoiceState) GetMute() bool {
	if x != nil {
		return x.Mute
	}
	return false
}

func (x *VoiceState) GetSelfDeaf() bool {
	if x != nil {
		return x.SelfDeaf
	}
	return false
}

func (x *VoiceState) GetSelfMute() bool {
	if x != nil {
		return x.SelfMute
	}
	return false
}

func (x *VoiceState) GetSelfStream() bool {
	if x != nil {
		return x.SelfStream
	}
	return false
}

func (x *VoiceState) GetSelfVideo() bool {
	if x != nil {
		return x.SelfVideo
	}
	return false
}

func (x *VoiceState) GetSuppress() bool {
	if x != nil {
		return x.Suppress
	}
	return false
}

func (x *VoiceState) GetRequestToSpeakTimestamp() *Time {
	if x != nil {
		return x.RequestToSpeakTimestamp
	}
	return nil
}

type Webhook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type          int32  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	GuildID       string `protobuf:"bytes,3,opt,name=GuildID,proto3" json:"GuildID,omitempty"`
	ChannelID     string `protobuf:"bytes,4,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	User          *User  `protobuf:"bytes,5,opt,name=User,proto3" json:"User,omitempty"`
	Name          string `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	Avatar        string `protobuf:"bytes,7,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Token         string `protobuf:"bytes,8,opt,name=Token,proto3" json:"Token,omitempty"`
	ApplicationID string `protobuf:"bytes,9,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
}

func (x *Webhook) Reset() {
	*x = Webhook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[479]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Webhook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Webhook) ProtoMessage() {}

func (x *Webhook) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[479]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Webhook.ProtoReflect.Descriptor instead.
func (*Webhook) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{479}
}

func (x *Webhook) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Webhook) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Webhook) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *Webhook) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *Webhook) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Webhook) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Webhook) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Webhook) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Webhook) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

type WebhookCreateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar    string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *WebhookCreateInput) Reset() {
	*x = WebhookCreateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[480]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookCreateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookCreateInput) ProtoMessage() {}

func (x *WebhookCreateInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[480]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookCreateInput.ProtoReflect.Descriptor instead.
func (*WebhookCreateInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{480}
}

func (x *WebhookCreateInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *WebhookCreateInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebhookCreateInput) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type WebhookCreateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Webhook `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookCreateOutput) Reset() {
	*x = WebhookCreateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[481]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookCreateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookCreateOutput) ProtoMessage() {}

func (x *WebhookCreateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[481]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookCreateOutput.ProtoReflect.Descriptor instead.
func (*WebhookCreateOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{481}
}

func (x *WebhookCreateOutput) GetSt() *Webhook {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *WebhookCreateOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type WebhookDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID string `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
}

func (x *WebhookDeleteInput) Reset() {
	*x = WebhookDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[482]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookDeleteInput) ProtoMessage() {}

func (x *WebhookDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[482]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookDeleteInput.ProtoReflect.Descriptor instead.
func (*WebhookDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{482}
}

func (x *WebhookDeleteInput) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

type WebhookDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookDeleteOutput) Reset() {
	*x = WebhookDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[483]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookDeleteOutput) ProtoMessage() {}

func (x *WebhookDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[483]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookDeleteOutput.ProtoReflect.Descriptor instead.
func (*WebhookDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{483}
}

func (x *WebhookDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type WebhookDeleteWithTokenInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID string `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *WebhookDeleteWithTokenInput) Reset() {
	*x = WebhookDeleteWithTokenInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[484]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookDeleteWithTokenInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookDeleteWithTokenInput) ProtoMessage() {}

func (x *WebhookDeleteWithTokenInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[484]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookDeleteWithTokenInput.ProtoReflect.Descriptor instead.
func (*WebhookDeleteWithTokenInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{484}
}

func (x *WebhookDeleteWithTokenInput) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

func (x *WebhookDeleteWithTokenInput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type WebhookDeleteWithTokenOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Webhook `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookDeleteWithTokenOutput) Reset() {
	*x = WebhookDeleteWithTokenOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[485]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookDeleteWithTokenOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookDeleteWithTokenOutput) ProtoMessage() {}

func (x *WebhookDeleteWithTokenOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[485]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookDeleteWithTokenOutput.ProtoReflect.Descriptor instead.
func (*WebhookDeleteWithTokenOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{485}
}

func (x *WebhookDeleteWithTokenOutput) GetSt() *Webhook {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *WebhookDeleteWithTokenOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type WebhookEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content         string                  `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	Components      []*MessageComponent     `protobuf:"bytes,2,rep,name=Components,proto3" json:"Components,omitempty"`
	Embeds          []*MessageEmbed         `protobuf:"bytes,3,rep,name=Embeds,proto3" json:"Embeds,omitempty"`
	Files           []*File                 `protobuf:"bytes,4,rep,name=Files,proto3" json:"Files,omitempty"`
	AllowedMentions *MessageAllowedMentions `protobuf:"bytes,5,opt,name=AllowedMentions,proto3" json:"AllowedMentions,omitempty"`
}

func (x *WebhookEdit) Reset() {
	*x = WebhookEdit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[486]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEdit) ProtoMessage() {}

func (x *WebhookEdit) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[486]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEdit.ProtoReflect.Descriptor instead.
func (*WebhookEdit) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{486}
}

func (x *WebhookEdit) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *WebhookEdit) GetComponents() []*MessageComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *WebhookEdit) GetEmbeds() []*MessageEmbed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

func (x *WebhookEdit) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *WebhookEdit) GetAllowedMentions() *MessageAllowedMentions {
	if x != nil {
		return x.AllowedMentions
	}
	return nil
}

type WebhookEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID string `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar    string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	ChannelID string `protobuf:"bytes,4,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *WebhookEditInput) Reset() {
	*x = WebhookEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[487]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEditInput) ProtoMessage() {}

func (x *WebhookEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[487]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEditInput.ProtoReflect.Descriptor instead.
func (*WebhookEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{487}
}

func (x *WebhookEditInput) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

func (x *WebhookEditInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebhookEditInput) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *WebhookEditInput) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type WebhookEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Role   `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookEditOutput) Reset() {
	*x = WebhookEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[488]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEditOutput) ProtoMessage() {}

func (x *WebhookEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[488]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEditOutput.ProtoReflect.Descriptor instead.
func (*WebhookEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{488}
}

func (x *WebhookEditOutput) GetSt() *Role {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *WebhookEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type WebhookEditWithTokenInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID string `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Avatar    string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *WebhookEditWithTokenInput) Reset() {
	*x = WebhookEditWithTokenInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[489]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookEditWithTokenInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEditWithTokenInput) ProtoMessage() {}

func (x *WebhookEditWithTokenInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[489]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEditWithTokenInput.ProtoReflect.Descriptor instead.
func (*WebhookEditWithTokenInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{489}
}

func (x *WebhookEditWithTokenInput) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

func (x *WebhookEditWithTokenInput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WebhookEditWithTokenInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebhookEditWithTokenInput) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type WebhookEditWithTokenOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Role   `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookEditWithTokenOutput) Reset() {
	*x = WebhookEditWithTokenOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[490]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookEditWithTokenOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEditWithTokenOutput) ProtoMessage() {}

func (x *WebhookEditWithTokenOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[490]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEditWithTokenOutput.ProtoReflect.Descriptor instead.
func (*WebhookEditWithTokenOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{490}
}

func (x *WebhookEditWithTokenOutput) GetSt() *Role {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *WebhookEditWithTokenOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type WebhookExecuteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID string         `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
	Token     string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Wait      bool           `protobuf:"varint,3,opt,name=wait,proto3" json:"wait,omitempty"`
	Data      *WebhookParams `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WebhookExecuteInput) Reset() {
	*x = WebhookExecuteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[491]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookExecuteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookExecuteInput) ProtoMessage() {}

func (x *WebhookExecuteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[491]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookExecuteInput.ProtoReflect.Descriptor instead.
func (*WebhookExecuteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{491}
}

func (x *WebhookExecuteInput) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

func (x *WebhookExecuteInput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WebhookExecuteInput) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

func (x *WebhookExecuteInput) GetData() *WebhookParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebhookExecuteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Message `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookExecuteOutput) Reset() {
	*x = WebhookExecuteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[492]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookExecuteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookExecuteOutput) ProtoMessage() {}

func (x *WebhookExecuteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[492]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookExecuteOutput.ProtoReflect.Descriptor instead.
func (*WebhookExecuteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{492}
}

func (x *WebhookExecuteOutput) GetSt() *Message {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *WebhookExecuteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type WebhookInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID string `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
}

func (x *WebhookInput) Reset() {
	*x = WebhookInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[493]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookInput) ProtoMessage() {}

func (x *WebhookInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[493]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookInput.ProtoReflect.Descriptor instead.
func (*WebhookInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{493}
}

func (x *WebhookInput) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

type WebhookMessageDeleteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID string `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	MessageID string `protobuf:"bytes,3,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *WebhookMessageDeleteInput) Reset() {
	*x = WebhookMessageDeleteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[494]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookMessageDeleteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookMessageDeleteInput) ProtoMessage() {}

func (x *WebhookMessageDeleteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[494]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookMessageDeleteInput.ProtoReflect.Descriptor instead.
func (*WebhookMessageDeleteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{494}
}

func (x *WebhookMessageDeleteInput) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

func (x *WebhookMessageDeleteInput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WebhookMessageDeleteInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type WebhookMessageDeleteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *string `protobuf:"bytes,1,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookMessageDeleteOutput) Reset() {
	*x = WebhookMessageDeleteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[495]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookMessageDeleteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookMessageDeleteOutput) ProtoMessage() {}

func (x *WebhookMessageDeleteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[495]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookMessageDeleteOutput.ProtoReflect.Descriptor instead.
func (*WebhookMessageDeleteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{495}
}

func (x *WebhookMessageDeleteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type WebhookMessageEditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID string       `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
	Token     string       `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	MessageID string       `protobuf:"bytes,3,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Data      *WebhookEdit `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WebhookMessageEditInput) Reset() {
	*x = WebhookMessageEditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[496]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookMessageEditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookMessageEditInput) ProtoMessage() {}

func (x *WebhookMessageEditInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[496]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookMessageEditInput.ProtoReflect.Descriptor instead.
func (*WebhookMessageEditInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{496}
}

func (x *WebhookMessageEditInput) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

func (x *WebhookMessageEditInput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WebhookMessageEditInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *WebhookMessageEditInput) GetData() *WebhookEdit {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebhookMessageEditOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Message `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookMessageEditOutput) Reset() {
	*x = WebhookMessageEditOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[497]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookMessageEditOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookMessageEditOutput) ProtoMessage() {}

func (x *WebhookMessageEditOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[497]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookMessageEditOutput.ProtoReflect.Descriptor instead.
func (*WebhookMessageEditOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{497}
}

func (x *WebhookMessageEditOutput) GetSt() *Message {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *WebhookMessageEditOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type WebhookMessageInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID string `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	MessageID string `protobuf:"bytes,3,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *WebhookMessageInput) Reset() {
	*x = WebhookMessageInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[498]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookMessageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookMessageInput) ProtoMessage() {}

func (x *WebhookMessageInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[498]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookMessageInput.ProtoReflect.Descriptor instead.
func (*WebhookMessageInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{498}
}

func (x *WebhookMessageInput) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

func (x *WebhookMessageInput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WebhookMessageInput) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type WebhookMessageOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Err     *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookMessageOutput) Reset() {
	*x = WebhookMessageOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[499]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookMessageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookMessageOutput) ProtoMessage() {}

func (x *WebhookMessageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[499]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookMessageOutput.ProtoReflect.Descriptor instead.
func (*WebhookMessageOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{499}
}

func (x *WebhookMessageOutput) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *WebhookMessageOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type WebhookOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Webhook `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookOutput) Reset() {
	*x = WebhookOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[500]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookOutput) ProtoMessage() {}

func (x *WebhookOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[500]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookOutput.ProtoReflect.Descriptor instead.
func (*WebhookOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{500}
}

func (x *WebhookOutput) GetSt() *Webhook {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *WebhookOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type WebhookParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content         string                  `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	Username        string                  `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	AvatarURL       string                  `protobuf:"bytes,3,opt,name=AvatarURL,proto3" json:"AvatarURL,omitempty"`
	TTS             bool                    `protobuf:"varint,4,opt,name=TTS,proto3" json:"TTS,omitempty"`
	Files           []*File                 `protobuf:"bytes,5,rep,name=Files,proto3" json:"Files,omitempty"`
	Components      []*MessageComponent     `protobuf:"bytes,6,rep,name=Components,proto3" json:"Components,omitempty"`
	Embeds          []*MessageEmbed         `protobuf:"bytes,7,rep,name=Embeds,proto3" json:"Embeds,omitempty"`
	AllowedMentions *MessageAllowedMentions `protobuf:"bytes,8,opt,name=AllowedMentions,proto3" json:"AllowedMentions,omitempty"`
	Flags           int32                   `protobuf:"varint,9,opt,name=Flags,proto3" json:"Flags,omitempty"`
}

func (x *WebhookParams) Reset() {
	*x = WebhookParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[501]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookParams) ProtoMessage() {}

func (x *WebhookParams) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[501]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookParams.ProtoReflect.Descriptor instead.
func (*WebhookParams) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{501}
}

func (x *WebhookParams) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *WebhookParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *WebhookParams) GetAvatarURL() string {
	if x != nil {
		return x.AvatarURL
	}
	return ""
}

func (x *WebhookParams) GetTTS() bool {
	if x != nil {
		return x.TTS
	}
	return false
}

func (x *WebhookParams) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *WebhookParams) GetComponents() []*MessageComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *WebhookParams) GetEmbeds() []*MessageEmbed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

func (x *WebhookParams) GetAllowedMentions() *MessageAllowedMentions {
	if x != nil {
		return x.AllowedMentions
	}
	return nil
}

func (x *WebhookParams) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type WebhookThreadExecuteInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID string         `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
	Token     string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Wait      bool           `protobuf:"varint,3,opt,name=wait,proto3" json:"wait,omitempty"`
	ThreadID  string         `protobuf:"bytes,4,opt,name=threadID,proto3" json:"threadID,omitempty"`
	Data      *WebhookParams `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WebhookThreadExecuteInput) Reset() {
	*x = WebhookThreadExecuteInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[502]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookThreadExecuteInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookThreadExecuteInput) ProtoMessage() {}

func (x *WebhookThreadExecuteInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[502]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookThreadExecuteInput.ProtoReflect.Descriptor instead.
func (*WebhookThreadExecuteInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{502}
}

func (x *WebhookThreadExecuteInput) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

func (x *WebhookThreadExecuteInput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WebhookThreadExecuteInput) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

func (x *WebhookThreadExecuteInput) GetThreadID() string {
	if x != nil {
		return x.ThreadID
	}
	return ""
}

func (x *WebhookThreadExecuteInput) GetData() *WebhookParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebhookThreadExecuteOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Message `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookThreadExecuteOutput) Reset() {
	*x = WebhookThreadExecuteOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[503]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookThreadExecuteOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookThreadExecuteOutput) ProtoMessage() {}

func (x *WebhookThreadExecuteOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[503]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookThreadExecuteOutput.ProtoReflect.Descriptor instead.
func (*WebhookThreadExecuteOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{503}
}

func (x *WebhookThreadExecuteOutput) GetSt() *Message {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *WebhookThreadExecuteOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type WebhookWithTokenInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookID string `protobuf:"bytes,1,opt,name=webhookID,proto3" json:"webhookID,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *WebhookWithTokenInput) Reset() {
	*x = WebhookWithTokenInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[504]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookWithTokenInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookWithTokenInput) ProtoMessage() {}

func (x *WebhookWithTokenInput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[504]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookWithTokenInput.ProtoReflect.Descriptor instead.
func (*WebhookWithTokenInput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{504}
}

func (x *WebhookWithTokenInput) GetWebhookID() string {
	if x != nil {
		return x.WebhookID
	}
	return ""
}

func (x *WebhookWithTokenInput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type WebhookWithTokenOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	St  *Webhook `protobuf:"bytes,1,opt,name=st,proto3" json:"st,omitempty"`
	Err *string  `protobuf:"bytes,2,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *WebhookWithTokenOutput) Reset() {
	*x = WebhookWithTokenOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_proto_msgTypes[505]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookWithTokenOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookWithTokenOutput) ProtoMessage() {}

func (x *WebhookWithTokenOutput) ProtoReflect() protoreflect.Message {
	mi := &file_output_proto_msgTypes[505]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookWithTokenOutput.ProtoReflect.Descriptor instead.
func (*WebhookWithTokenOutput) Descriptor() ([]byte, []int) {
	return file_output_proto_rawDescGZIP(), []int{505}
}

func (x *WebhookWithTokenOutput) GetSt() *Webhook {
	if x != nil {
		return x.St
	}
	return nil
}

func (x *WebhookWithTokenOutput) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

var File_output_proto protoreflect.FileDescriptor

var file_output_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x03, 0x0a, 0x08, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c,
	0x12, 0x23, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x52, 0x0a, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x1c, 0x0a, 0x05, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52,
	0x05, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x1c, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x74, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x05, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x06, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x06, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x52, 0x07, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xa7, 0x04, 0x0a, 0x0b,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49,
	0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x50, 0x43, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x50, 0x43, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6f, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x42, 0x6f, 0x74, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x12, 0x30, 0x0a, 0x13, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x4f, 0x66,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x52, 0x4c, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x1b, 0x0a,
	0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b, 0x65,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b,
	0x65, 0x79, 0x12, 0x19, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x53, 0x4b, 0x55, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x4b, 0x55, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x6c, 0x75, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x6c, 0x75, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x2e, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x03, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x03, 0x61, 0x73, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x31, 0x0a, 0x19, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x1a,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x02, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x02, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72,
	0x22, 0xfb, 0x05, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x4e, 0x61, 0x6d,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x11, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x3a, 0x0a, 0x18, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x18, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x44, 0x4d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x44, 0x4d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x53, 0x46, 0x57, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x4e, 0x53, 0x46, 0x57, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x44, 0x0a, 0x16, 0x4e,
	0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x4b, 0x0a, 0x1d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x87,
	0x01, 0x0a, 0x24, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x25, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42,
	0x75, 0x6c, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x3d, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72,
	0x22, 0x76, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x12, 0x25, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x22, 0x68, 0x0a, 0x1e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x04, 0x63,
	0x63, 0x6d, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x65, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x1e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x31, 0x22, 0x8a, 0x01, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x22, 0x6c, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x2d, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x5f,
	0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6d, 0x64,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x44, 0x22,
	0x94, 0x06, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x11, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x18, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4d,
	0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x69, 0x6e, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x1a, 0x44, 0x0a, 0x16, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4b, 0x0a, 0x1d, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8c, 0x02, 0x0a, 0x1e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x64, 0x0a,
	0x11, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x11, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x44, 0x0a, 0x16, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x60, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x25, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x63, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x01, 0x0a,
	0x2b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x45, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x4d, 0x0a, 0x2c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0xb4, 0x01, 0x0a, 0x26, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6d, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6d,
	0x64, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x48, 0x0a, 0x27, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x6a, 0x0a, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6d, 0x64,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x44, 0x22,
	0x65, 0x0a, 0x21, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x23, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x45,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0x4a, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x22, 0x61, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x25, 0x0a,
	0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x36, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a,
	0x02, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x61, 0x70, 0x22, 0x56, 0x0a, 0x17, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x2e, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x44, 0x22, 0x38, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x28, 0x0a,
	0x10, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x02,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xee, 0x01, 0x0a, 0x19, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf9, 0x03, 0x0a, 0x21, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x67, 0x0a, 0x11, 0x4e, 0x61,
	0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x11, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7c, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x44, 0x0a, 0x16, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4b, 0x0a, 0x1d, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x26, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x22, 0x7c, 0x0a, 0x27, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x32, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x2c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x82, 0x01, 0x0a, 0x2d,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x32, 0x0a,
	0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x02, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72,
	0x22, 0x4c, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x02, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x61, 0x70, 0x22, 0x56,
	0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x02, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x1c, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x3f,
	0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x8c, 0x01, 0x0a, 0x06, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x61,
	0x72, 0x67, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x22, 0x86,
	0x01, 0x0a, 0x0e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x30, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x4e, 0x65, 0x77, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x4f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x4f, 0x6c, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x22, 0xe2, 0x01, 0x0a, 0x0d, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xf7, 0x01, 0x0a,
	0x0f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x44, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x79, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a,
	0x1c, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x03, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f,
	0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x0f, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x78, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x6d, 0x70, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x45, 0x78, 0x65, 0x6d, 0x70,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x62, 0x0a, 0x1d, 0x41, 0x75, 0x74,
	0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x64, 0x0a,
	0x1e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x23, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x75,
	0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x51, 0x0a, 0x1d, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x75, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x1e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x78, 0x0a, 0x1b, 0x41, 0x75, 0x74, 0x6f, 0x4d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x64, 0x69,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c,
	0x65, 0x22, 0x62, 0x0a, 0x1c, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x23, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x4b, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x75,
	0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65,
	0x49, 0x44, 0x22, 0x5e, 0x0a, 0x18, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x23,
	0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x75, 0x74,
	0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x34, 0x0a, 0x18, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x22, 0x5f, 0x0a, 0x19, 0x41, 0x75, 0x74, 0x6f,
	0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xd1, 0x01, 0x0a, 0x1d, 0x41, 0x75,
	0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x65, 0x78, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x67, 0x65, 0x78, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x4d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x8a, 0x09,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x50,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x53, 0x46, 0x57, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x4e, 0x53, 0x46, 0x57, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x25,
	0x0a, 0x0a, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x14, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x14, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x2a, 0x0a, 0x10, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0e, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x07, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x2f, 0x0a, 0x0d, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x61, 0x67, 0x52, 0x0d, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73, 0x12, 0x49, 0x0a,
	0x14, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x6f,
	0x72, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x14, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x44, 0x0a, 0x1d, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x1d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a,
	0x0a, 0x10, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46,
	0x6f, 0x72, 0x75, 0x6d, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x22, 0x32, 0x0a, 0x12, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x4e,
	0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x8b,
	0x06, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x53, 0x46, 0x57,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4e, 0x53, 0x46, 0x57, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x48, 0x0a, 0x14, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76,
	0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x14, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x1d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x41, 0x75,
	0x74, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x0d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x61, 0x67, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46, 0x6f, 0x72, 0x75,
	0x6d, 0x54, 0x61, 0x67, 0x52, 0x0d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x61, 0x67, 0x73, 0x12, 0x49, 0x0a, 0x14, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x2a,
	0x0a, 0x10, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46,
	0x6f, 0x72, 0x75, 0x6d, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73, 0x22, 0x59, 0x0a, 0x17,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x52, 0x0a, 0x10,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x4c, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x5f,
	0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x01, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x01, 0x72, 0x22,
	0x61, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x32, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x32, 0x22, 0x84, 0x01, 0x0a, 0x1f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x15, 0x0a, 0x01, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x01, 0x72, 0x22, 0x6c, 0x0a, 0x20, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12,
	0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22, 0x4b, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x49, 0x44, 0x22, 0x2c, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x22, 0x4f, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x15, 0x0a, 0x01,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x01, 0x69, 0x22, 0x53, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x17, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x33, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x4e, 0x0a,
	0x14, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x5a, 0x0a,
	0x1c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x72, 0x6f, 0x73, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x58, 0x0a, 0x1d, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x70, 0x6f, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x57, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x3b, 0x0a, 0x1a,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x3c, 0x0a, 0x1e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x01, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x52, 0x01, 0x6d, 0x22, 0x5a, 0x0a, 0x1f, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x7f, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12,
	0x23, 0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x05, 0x65,
	0x6d, 0x62, 0x65, 0x64, 0x22, 0x69, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x32, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22,
	0x82, 0x01, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x25, 0x0a,
	0x06, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x06, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x73, 0x22, 0x6a, 0x0a, 0x1e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x32, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32,
	0x22, 0x6f, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x64, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12,
	0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22, 0x51, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x14, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x54, 0x0a, 0x16, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x69, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x22, 0x38, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x60, 0x0a, 0x1e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a,
	0x1f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x61, 0x0a, 0x1c, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x22, 0x69, 0x0a, 0x1d,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12,
	0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22, 0x97, 0x01, 0x0a, 0x21, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x05, 0x65,
	0x6d, 0x62, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x12, 0x2f, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x22, 0x6e, 0x0a, 0x22, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x32, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x32, 0x22, 0x64, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44,
	0x12, 0x25, 0x0a, 0x06, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52,
	0x06, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x22, 0x6a, 0x0a, 0x1e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x32, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x32, 0x22, 0x9a, 0x01, 0x0a, 0x22, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x06, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x12,
	0x2f, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x6f, 0x0a, 0x23, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x32, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x32, 0x22, 0x51, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x64, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22, 0x87, 0x01, 0x0a, 0x1c, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x22, 0x69, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x32, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22,
	0x54, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x54, 0x53, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x54, 0x53, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22, 0x56,
	0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x55, 0x6e, 0x70, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x3a, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x70, 0x69, 0x6e, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x5a, 0x0a, 0x1e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x40,
	0x0a, 0x1f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72,
	0x22, 0x9c, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x44, 0x22,
	0x50, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x02,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72,
	0x72, 0x22, 0x3a, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x56, 0x0a,
	0x1b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x52, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4e, 0x65, 0x77, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x22, 0x58, 0x0a, 0x17, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x65, 0x77, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x48, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x58, 0x0a,
	0x1c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x9f, 0x01, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x6e, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x65, 0x6e, 0x79, 0x22, 0x3b, 0x0a, 0x1a, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x32, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x13, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72,
	0x22, 0x69, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x49,
	0x44, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x6d, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x61, 0x66, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x61, 0x66, 0x22, 0x3d, 0x0a, 0x1c, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x34, 0x0a, 0x14, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44,
	0x22, 0x50, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52,
	0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x52, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x57, 0x65, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x57, 0x65, 0x62, 0x22, 0xd6, 0x01, 0x0a, 0x05, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x43, 0x6f, 0x6c, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x4d, 0x0a, 0x0b, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x5d,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x06,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x84, 0x01,
	0x0a, 0x1a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x0b,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x77, 0x61, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74,
	0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x1b, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22, 0x6a, 0x0a,
	0x1a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x45, 0x0a, 0x1b, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31,
	0x22, 0x8a, 0x01, 0x0a, 0x18, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a,
	0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a,
	0x19, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x32, 0x22, 0x4e, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x08, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x61,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x1c,
	0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x0a, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x1d, 0x46, 0x6f, 0x72, 0x75,
	0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x02, 0x74, 0x68, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x1a, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x05, 0x65, 0x6d, 0x62,
	0x65, 0x64, 0x22, 0x56, 0x0a, 0x1b, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x18, 0x0a, 0x02, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x74, 0x68, 0x12, 0x15, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xa0, 0x01, 0x0a, 0x1b, 0x46,
	0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x06, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x22, 0x57, 0x0a,
	0x1c, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a,
	0x02, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x02, 0x74, 0x68, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x46, 0x6f, 0x72, 0x75, 0x6d,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x02, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x74, 0x68, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x56, 0x0a, 0x10,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x6f, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x23, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0x81, 0x01, 0x0a, 0x12, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x42, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x11, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x48, 0x0a, 0x0d, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x8c, 0x0e, 0x0a, 0x05, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x66, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x41, 0x66, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x70, 0x6c, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x66, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x66, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x1b, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x1b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a,
	0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x06, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x52, 0x06, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x53, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x08, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73,
	0x12, 0x21, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x09, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x4d, 0x61, 0x78, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x12, 0x24, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x17, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x08, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x07, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x07, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x0b, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x6e, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x45,
	0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x45, 0x78, 0x70, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x53, 0x46, 0x57, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4e, 0x53, 0x46, 0x57, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x66, 0x61, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4d,
	0x66, 0x61, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x28, 0x0a,
	0x0f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x56, 0x61, 0x6e, 0x69, 0x74, 0x79, 0x55, 0x52, 0x4c, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x56, 0x61, 0x6e, 0x69, 0x74, 0x79, 0x55, 0x52,
	0x4c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x54, 0x69, 0x65, 0x72, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x54, 0x69, 0x65,
	0x72, 0x12, 0x3a, 0x0a, 0x18, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x18, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12,
	0x32, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x4d,
	0x61, 0x78, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x16, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x0e, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x30, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x0e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x22, 0xb6, 0x01, 0x0a, 0x22, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5a, 0x0a, 0x28, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x22, 0x91, 0x01, 0x0a, 0x29, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x45, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xbe, 0x01, 0x0a, 0x0d, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x24, 0x0a, 0x08,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x08, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x38, 0x0a, 0x0f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0c, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x12,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x54, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a,
	0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x3d, 0x0a, 0x08,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x22, 0x5b, 0x0a, 0x13, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x42, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x7d, 0x0a, 0x1d, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x3f,
	0x0a, 0x1e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x47, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x42, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x41, 0x0a, 0x0d, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x4a, 0x0a, 0x0e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x52, 0x02, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x76,
	0x0a, 0x0e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4b, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42,
	0x61, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x67, 0x0a, 0x1e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12,
	0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x1f,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xd0, 0x02, 0x0a, 0x16, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x48, 0x0a, 0x14, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x52, 0x14, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x53, 0x46, 0x57, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4e, 0x53, 0x46, 0x57, 0x22, 0x5d, 0x0a, 0x17, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x74, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x18, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x2e, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x22,
	0x4e, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x5b, 0x0a, 0x19, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x3b, 0x0a, 0x1a,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x26, 0x0a, 0x10, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x4a, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x6a, 0x0a,
	0x1c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x1d, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x02,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72,
	0x72, 0x22, 0x2c, 0x0a, 0x10, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x22,
	0x4a, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x46, 0x0a, 0x0e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x01, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x01, 0x67, 0x22, 0x48, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x64, 0x69, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x44, 0x0a,
	0x0a, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x2b, 0x0a, 0x0f,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x22, 0x4e, 0x0a, 0x10, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a,
	0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x55,
	0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52,
	0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x4b, 0x0a, 0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x49, 0x44, 0x22, 0x37, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x6b, 0x0a, 0x13, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x1c, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x15,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x45, 0x0a,
	0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x10, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52,
	0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x2c, 0x0a, 0x10, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52,
	0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x2a, 0x0a, 0x0e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x63,
	0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x22, 0x4a, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x15,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x26, 0x0a,
	0x0a, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x22, 0x87, 0x01, 0x0a, 0x1b, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12,
	0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0x3d, 0x0a, 0x1c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x5d,
	0x0a, 0x1b, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x3d, 0x0a,
	0x1c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xdb, 0x01, 0x0a,
	0x19, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x47, 0x72, 0x61, 0x63,
	0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x73, 0x22, 0x3b, 0x0a, 0x1a, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64,
	0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x32, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x17, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x2d, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x44, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x02, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72,
	0x22, 0x2b, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x22, 0x31, 0x0a,
	0x10, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72,
	0x22, 0x72, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x14,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x4d, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x4d, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x61, 0x66, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x44, 0x65, 0x61, 0x66, 0x22, 0x5e, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x61, 0x66, 0x65, 0x6e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x61, 0x66, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x61, 0x66, 0x22, 0x38, 0x0a, 0x17, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x61, 0x66, 0x65, 0x6e, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x4a, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x38,
	0x0a, 0x17, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x6c, 0x0a, 0x20, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x21, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x77, 0x0a, 0x1b, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x1c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x70, 0x0a, 0x14, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4f, 0x0a,
	0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x02, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x44,
	0x0a, 0x10, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x15,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0x5c, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6d, 0x75,
	0x74, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4d, 0x75, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x68, 0x0a, 0x18, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72,
	0x22, 0x4b, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xca, 0x01,
	0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4d,
	0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4d, 0x75, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x65, 0x61, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x44,
	0x65, 0x61, 0x66, 0x12, 0x45, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x1a,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x22, 0x63, 0x0a, 0x17, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64, 0x64,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x22,
	0x39, 0x0a, 0x18, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x66, 0x0a, 0x1a, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x22, 0x3c, 0x0a, 0x1b, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72,
	0x22, 0x68, 0x0a, 0x17, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1b, 0x0a,
	0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x22, 0x39, 0x0a, 0x18, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x59, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x4c, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x02, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x5f,
	0x0a, 0x17, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x52, 0x0a, 0x18, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x44, 0x0a, 0x0b, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x8b, 0x06, 0x0a, 0x0b, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x1b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x41,
	0x66, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x41, 0x66, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x41, 0x66, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x66, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49,
	0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x70, 0x6c, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x12, 0x2e, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x16, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x19, 0x50, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x72, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x50, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x72,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xda, 0x02, 0x0a, 0x0c, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x70, 0x6c, 0x61,
	0x73, 0x68, 0x12, 0x1e, 0x0a, 0x06, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x06, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x36,
	0x0a, 0x16, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x78,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x78,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x02, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x44, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x50, 0x72, 0x75, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x4c, 0x0a,
	0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x3f, 0x0a, 0x0f, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x47, 0x0a, 0x10,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x51, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x15, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x48, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x44, 0x22, 0x36, 0x0a, 0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x67, 0x0a, 0x12, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x44, 0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x4b, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x45,
	0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x02, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x02, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x4e, 0x0a, 0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x44, 0x12, 0x1b, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22,
	0x4e, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x02, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x02, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x2b, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x10,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x15, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xb4, 0x04, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x12, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x12, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x31, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x4a, 0x0a, 0x0e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x6c, 0x0a,
	0x1e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x66, 0x0a, 0x1f, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x24,
	0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x54, 0x0a, 0x1e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x1f, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x1c,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x30, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0x64, 0x0a, 0x1d, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x3f, 0x0a, 0x21, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x18, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x19, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x97, 0x03, 0x0a, 0x19, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x12, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x12,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x31, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xbf, 0x01, 0x0a, 0x1d, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x77, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x1e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x02, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x53,
	0x0a, 0x19, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x1a, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x24, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x2c, 0x0a, 0x10, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53,
	0x70, 0x6c, 0x61, 0x73, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x70, 0x6c,
	0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x03, 0x69, 0x6d, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x03,
	0x69, 0x6d, 0x67, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x80, 0x03, 0x0a, 0x0d, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x55, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x55, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x07,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x23, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x3c, 0x0a,
	0x15, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x15, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x73, 0x44, 0x69, 0x72, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73,
	0x44, 0x69, 0x72, 0x74, 0x79, 0x22, 0x5e, 0x0a, 0x18, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3b, 0x0a, 0x19, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x1e, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x02,
	0x73, 0x74, 0x22, 0x58, 0x0a, 0x18, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x0a, 0x19,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x17, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x38, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x54, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x4b, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0x2f, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x22, 0x55, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a,
	0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x33, 0x0a, 0x17,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x22, 0x61, 0x0a, 0x18, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a,
	0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0x2e, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x44, 0x22, 0x4e, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0x30, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x22, 0x4e, 0x0a, 0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x57,
	0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x16, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22,
	0x30, 0x0a, 0x16, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x31, 0x22, 0x07, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xfe, 0x02, 0x0a, 0x0b, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x79, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53,
	0x79, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x28,
	0x0a, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x19,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x41, 0x74, 0x22, 0x38, 0x0a, 0x12, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x97, 0x03, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x41, 0x70, 0x70, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x06, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x11, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x73, 0x0a, 0x17, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a,
	0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x42, 0x0a, 0x18, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x57, 0x0a, 0x13, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x82, 0x03, 0x0a, 0x17, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x54, 0x54, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x54,
	0x54, 0x53, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x25, 0x0a, 0x06, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x06,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x07,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x50, 0x0a, 0x1e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x1f, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x76, 0x0a, 0x1c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x64, 0x69,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x72, 0x65, 0x73,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x45, 0x64, 0x69, 0x74, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x72, 0x65, 0x73, 0x70, 0x22, 0x69,
	0x0a, 0x1d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x20, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22, 0x4a, 0x0a, 0x18, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x19, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x22, 0xd6, 0x04, 0x0a,
	0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x05,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x07, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x07, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x55, 0x73, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x55, 0x73, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x4d, 0x61, 0x78, 0x55, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0a, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3a, 0x0a, 0x11, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x18,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x78,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x2f, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x77, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x77, 0x69, 0x74, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0x2f, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x29, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x44, 0x22, 0x46,
	0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17,
	0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x33, 0x0a, 0x15, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x16, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xf8, 0x02,
	0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x44, 0x12, 0x21, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x61,
	0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x44, 0x65, 0x61, 0x66, 0x12, 0x12, 0x0a,
	0x04, 0x4d, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4d, 0x75, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x19, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x0c, 0x50, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0c, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
	0x53, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x45, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x1a, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x22, 0xbc, 0x08, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x0f, 0x45,
	0x64, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0f, 0x45, 0x64, 0x69,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c,
	0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x54, 0x54, 0x53, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x54,
	0x54, 0x53, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x72, 0x79, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x4d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x72, 0x79, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x06,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x0b, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x52, 0x06, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x08, 0x4d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f,
	0x0a, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x06, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0f, 0x4d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x14, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0f, 0x4d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x2c,
	0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x0b,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x36, 0x0a, 0x11, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x06, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x06, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x0c, 0x53, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x0c, 0x53, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3f, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x44, 0x22, 0x7c, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x50, 0x61, 0x72, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49,
	0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45,
	0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x22, 0x12, 0x0a, 0x10, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0xfc, 0x02,
	0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x06, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x73, 0x12, 0x41, 0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x05, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x05, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x22, 0xe3, 0x03, 0x0a,
	0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x2b, 0x0a, 0x06, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x46, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x52, 0x06, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x52, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x05,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52,
	0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x31, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x22, 0x78, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x22, 0x55, 0x0a, 0x11,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x22, 0x66, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x22, 0x6f, 0x0a, 0x11, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55,
	0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x14,
	0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x3c, 0x0a, 0x14,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x73, 0x0a, 0x15, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x52,
	0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x52,
	0x4c, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x53, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x6f, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44,
	0x22, 0x42, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x22, 0x8a, 0x01, 0x0a, 0x1a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x45, 0x0a, 0x1b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x56, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x4d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x4d, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x05, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x22, 0xb9, 0x01, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4e, 0x0a, 0x16,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x5c, 0x0a, 0x1e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x1f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x78, 0x0a, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44, 0x22,
	0x4b, 0x0a, 0x21, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x68, 0x0a, 0x10,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x22, 0xe4, 0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x06, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52,
	0x06, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x54, 0x53, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x54, 0x54, 0x53, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x05,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x09,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x05, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x22, 0x7e, 0x0a,
	0x1e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a,
	0x1f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x02, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x63, 0x68, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x53, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x02, 0x63, 0x68, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0x2b, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x63, 0x0a, 0x13, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x65, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x65, 0x6e, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0xb1, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x08, 0x0a, 0x06, 0x52, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x21, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x44, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x22, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x3f, 0x0a,
	0x1e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x94,
	0x01, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x1d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x43, 0x0a,
	0x19, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x22, 0x68, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x72,
	0x6c, 0x53, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x72, 0x6c, 0x53,
	0x74, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x0d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x72, 0x6c, 0x53, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x72, 0x6c, 0x53, 0x74, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x19, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x44, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0xd0, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x48, 0x6f, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x48, 0x6f, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x48, 0x6f, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x48, 0x6f, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x4f, 0x0a, 0x07, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x70, 0x65, 0x63,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x70, 0x65, 0x63,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x4d,
	0x61, 0x78, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xfb, 0x01,
	0x0a, 0x0d, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x22, 0x0a,
	0x0c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x32, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x18, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x5a, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1e,
	0x0a, 0x02, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x02, 0x73, 0x69, 0x12, 0x15,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x38, 0x0a,
	0x18, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x3a, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x60, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x1e, 0x0a, 0x02, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x02, 0x73, 0x69,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x32, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x22, 0x54, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x02, 0x73, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x02, 0x73, 0x69, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xa0, 0x02, 0x0a, 0x07, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x61, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x61, 0x63,
	0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x25, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x61, 0x6d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4a, 0x6f,
	0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x10, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x31, 0x22, 0x22, 0x0a, 0x10, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x22, 0x79, 0x0a, 0x0c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x0d,
	0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0d, 0x4a, 0x6f, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22,
	0x4e, 0x0a, 0x14, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x3f, 0x0a, 0x15, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31,
	0x22, 0x4b, 0x0a, 0x11, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5a, 0x0a,
	0x12, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x51, 0x0a, 0x17, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x18,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31,
	0x22, 0x30, 0x0a, 0x12, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x49, 0x44, 0x22, 0x5d, 0x0a, 0x13, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72,
	0x72, 0x22, 0xc7, 0x01, 0x0a, 0x0e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x12, 0x30, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x41,
	0x75, 0x74, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x10, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x10, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x0b,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x41, 0x75,
	0x74, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x52,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x54, 0x61, 0x67,
	0x73, 0x22, 0x59, 0x0a, 0x17, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x18,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02,
	0x63, 0x68, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72,
	0x72, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x79, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x79, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x11, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x63, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x02, 0x63, 0x68, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x32, 0x0a, 0x12, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x5c, 0x0a, 0x13, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a,
	0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0x69, 0x0a, 0x14, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x06, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x5e, 0x0a, 0x15, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x74, 0x0a, 0x0b, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x07, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x48,
	0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x48, 0x61,
	0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x70, 0x0a, 0x1b, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x12, 0x1d, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x65, 0x0a, 0x1c, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x76,
	0x0a, 0x21, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x12, 0x1d, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6b, 0x0a, 0x22, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x07,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x06, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x0a, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a,
	0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3f, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x64,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x30, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x3f, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x75,
	0x73, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x03, 0x75, 0x73, 0x64,
	0x22, 0x3a, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x85, 0x01, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x64, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x64, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x12,
	0x29, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0a,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x46,
	0x4b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x41, 0x46, 0x4b, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x56, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x3c, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x40, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xae, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x72, 0x69,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x46, 0x41,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x4d,
	0x46, 0x41, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x6f, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x42, 0x6f, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x6d, 0x69,
	0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x3a, 0x0a, 0x22, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x44, 0x22, 0x70, 0x0a, 0x23, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x02, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x72, 0x0a, 0x28, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x05, 0x72, 0x63, 0x6f, 0x6e, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x22, 0x76, 0x0a, 0x29, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72,
	0x72, 0x22, 0x2c, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x13, 0x0a, 0x01, 0x75, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x01, 0x75, 0x22,
	0x51, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x03, 0x69, 0x6d, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x03,
	0x69, 0x6d, 0x67, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x29, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4b, 0x0a,
	0x10, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x18, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x15, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x3a, 0x0a, 0x16, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x53, 0x0a, 0x1b, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22,
	0x61, 0x0a, 0x1c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x22, 0x5b, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f,
	0x6e, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x6e, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x97,
	0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x15, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x5d, 0x0a, 0x0f, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x10, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1a,
	0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x23, 0x0a, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x42,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x02,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x45, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x48, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a,
	0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x31, 0x0a, 0x0b, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x1c, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x96,
	0x03, 0x0a, 0x0a, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1f, 0x0a,
	0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x65, 0x61, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x44, 0x65, 0x61, 0x66,
	0x12, 0x12, 0x0a, 0x04, 0x4d, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x4d, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x61, 0x66,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x61, 0x66,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x75, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x65, 0x6c, 0x66, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x53, 0x65, 0x6c, 0x66, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x65, 0x6c, 0x66, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x53, 0x65, 0x6c, 0x66, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x17,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xe8, 0x01, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12,
	0x19, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x22, 0x5e, 0x0a, 0x12, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x22, 0x4e, 0x0a, 0x13, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52,
	0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65,
	0x72, 0x72, 0x22, 0x32, 0x0a, 0x12, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x13, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x51, 0x0a, 0x1b,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x57, 0x0a, 0x1c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xe1, 0x01, 0x0a, 0x0b, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x52, 0x06, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x05,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7a, 0x0a, 0x10,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x11, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a,
	0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x7b, 0x0a, 0x19, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x64,
	0x69, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x22, 0x52, 0x0a, 0x1a, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15,
	0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x77, 0x61, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4f, 0x0a, 0x14, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x2c, 0x0a, 0x0c, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x22, 0x6d, 0x0a, 0x19, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x3b, 0x0a, 0x1a, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x18, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x67, 0x0a, 0x13, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x22, 0x59, 0x0a, 0x14, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x48, 0x0a, 0x0d,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a,
	0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0xc5, 0x02, 0x0a, 0x0d, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03,
	0x54, 0x54, 0x53, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x54, 0x54, 0x53, 0x12, 0x1b,
	0x0a, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25,
	0x0a, 0x06, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x06, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xa3,
	0x01, 0x0a, 0x19, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x77, 0x61, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x1a, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x4b, 0x0a, 0x15, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x51, 0x0a, 0x16, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x32, 0xb8, 0x76, 0x0a, 0x06,
	0x47, 0x61, 0x79, 0x77, 0x61, 0x79, 0x12, 0x34, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x12, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x0c,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x13, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x46, 0x0a,
	0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x17, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x46, 0x0a,
	0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x12, 0x17, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4f, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1b, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0d, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x0e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x4c, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x12, 0x19, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1f,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x0b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x31, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x15, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x17, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x73, 0x12, 0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x55, 0x0a, 0x16, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x1d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x22, 0x0a, 0x05, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x0b, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x57,
	0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16,
	0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x34, 0x0a, 0x0b, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x11,
	0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x12, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x64,
	0x69, 0x74, 0x12, 0x0f, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x64, 0x69, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x12, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x10, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x11, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2e,
	0x0a, 0x09, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x73, 0x12, 0x0f, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x10, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3d,
	0x0a, 0x0e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2b, 0x0a,
	0x08, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x12, 0x0e, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x42, 0x61, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0f, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x42, 0x61, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x42, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x42, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x49, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x19, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x12, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x3d, 0x0a, 0x0e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x12, 0x14, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x46, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x64, 0x0a, 0x1b, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a,
	0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74,
	0x12, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x64,
	0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x55, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x64,
	0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x1c, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1d, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x16, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f,
	0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x16, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x75,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x18,
	0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x19, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x44, 0x65, 0x61, 0x66, 0x65, 0x6e, 0x12, 0x17, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x61, 0x66, 0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x18, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44,
	0x65, 0x61, 0x66, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64,
	0x64, 0x12, 0x18, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x19, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64, 0x64,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x52, 0x0a, 0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12,
	0x1b, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x13, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x14, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x12, 0x1f, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x19, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x4f, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1b, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x12, 0x12, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x11, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40,
	0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x3a, 0x0a, 0x0d, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x64, 0x69,
	0x74, 0x12, 0x13, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x64, 0x69,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x43, 0x0a, 0x10,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x40, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x75, 0x6e,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72,
	0x75, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72,
	0x75, 0x6e, 0x65, 0x12, 0x10, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x75, 0x6e, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x11, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x75,
	0x6e, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x55, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1d, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4f, 0x0a, 0x14, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12,
	0x1a, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1b, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64,
	0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x55, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x1c, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1d, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x2e, 0x0a, 0x09, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x10, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x34, 0x0a, 0x0b, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x12, 0x11,
	0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x12, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x12, 0x10, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x11, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x45, 0x64, 0x69, 0x74, 0x12, 0x14, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x45, 0x64, 0x69,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x13, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x73, 0x12, 0x11, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x73,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x12, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x10, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x11, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x43, 0x0a, 0x10,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x45,
	0x64, 0x69, 0x74, 0x12, 0x14, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x43, 0x0a, 0x10, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x58, 0x0a, 0x17, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x14, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x17, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e,
	0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x46, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x45, 0x64, 0x69, 0x74, 0x12, 0x17, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18,
	0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x64,
	0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x0d, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x0e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x34, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x12,
	0x11, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x12, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x18, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x13, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a,
	0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x13,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x16, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x12, 0x18, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x19, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x12, 0x1f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x52, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x54, 0x53, 0x12, 0x1b,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x54, 0x53, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x54, 0x53, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x58, 0x0a, 0x17, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x12,
	0x1e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x1f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x58, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x67, 0x0a, 0x1c, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x6a, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x49, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x64, 0x69, 0x74, 0x12, 0x18, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x19, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x1f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x58, 0x0a, 0x17, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73,
	0x12, 0x1e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x64, 0x69, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x64, 0x69, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x4f, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1b, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x1f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x20, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x69, 0x6e, 0x12, 0x17, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x18, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x70, 0x69,
	0x6e, 0x12, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x55, 0x6e, 0x70, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x70,
	0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x52, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x12, 0x1b, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x12,
	0x15, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x61,
	0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x57, 0x69,
	0x74, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x4c, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4f,
	0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x1b, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x58, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x58, 0x0a, 0x17, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x70, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x70, 0x6f, 0x73, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x65,
	0x77, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x17, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4e, 0x65, 0x77, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x18, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x65, 0x77, 0x73, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x0d, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17,
	0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x13, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x0c,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x12, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x13, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28,
	0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x0d, 0x2e, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0e, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x42, 0x6f, 0x74, 0x12, 0x10, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x42, 0x6f, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x11, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x42, 0x6f, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x14, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x15, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x16, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x13, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x14, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x12, 0x0d, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x0e, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x43, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x16, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45,
	0x64, 0x69, 0x74, 0x12, 0x11, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x64, 0x69,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x12, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4f, 0x0a, 0x14, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1a, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x64, 0x69, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1b,
	0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x14, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x55, 0x0a, 0x16, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1c, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x1d, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3d,
	0x0a, 0x0e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x12, 0x14, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4f, 0x0a,
	0x14, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x1b, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3d,
	0x0a, 0x0e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x49, 0x0a,
	0x12, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x64, 0x69, 0x74, 0x12, 0x18, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x19, 0x2e,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64,
	0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4f, 0x0a, 0x14, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x1a, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1b, 0x2e, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x12,
	0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x19, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x52, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1b, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c,
	0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41,
	0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x64, 0x0a, 0x1b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x21, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x43,
	0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x16, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x12, 0x1f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x20, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x19, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x49,
	0x0a, 0x12, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x12, 0x18, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x19,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x11, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x12, 0x2e, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x58, 0x0a, 0x17, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x1d, 0x2e, 0x46, 0x6f, 0x72,
	0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x46, 0x6f, 0x72, 0x75,
	0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x46, 0x6f, 0x72,
	0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x16, 0x2e,
	0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x52,
	0x0a, 0x15, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x1b, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x55, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x12, 0x1c, 0x2e, 0x46,
	0x6f, 0x72, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1d, 0x2e, 0x46, 0x6f, 0x72,
	0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x10, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x4a, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x11, 0x2e, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x0b,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x11, 0x2e, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x12,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x15, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16, 0x2e, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x18, 0x2e, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x19, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x37, 0x0a, 0x0c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x13, 0x2e, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x13, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x49, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x19, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x15,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x55, 0x0a,
	0x16, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1d, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x67, 0x0a, 0x1c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x12, 0x22, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5b, 0x0a,
	0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x55, 0x0a, 0x16, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x45, 0x64, 0x69, 0x74, 0x12, 0x1c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x1d, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x70, 0x0a, 0x1f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x4f, 0x76, 0x65,
	0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x42, 0x75, 0x6c, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x1e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x1f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x49, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x19, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x12, 0x19, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x7c, 0x0a, 0x23, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x29, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2a, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x6a, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x76, 0x0a, 0x21, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x64, 0x69, 0x74, 0x12, 0x27, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x28, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x26,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x12, 0x2c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2d, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x19, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c,
	0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1a, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x58, 0x0a, 0x17,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1d, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x64, 0x69,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x64, 0x69, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x52, 0x0a, 0x15, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69,
	0x74, 0x12, 0x19, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64,
	0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x52, 0x0a, 0x15, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x1b, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c,
	0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x13,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a,
	0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x14, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x64, 0x69, 0x74, 0x12, 0x17, 0x2e, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c,
	0x0a, 0x13, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1a, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4f, 0x0a, 0x14,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1b, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a,
	0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x1a, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x58, 0x0a, 0x17, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1d, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x1f, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x1e, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x1f, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x41, 0x75, 0x74, 0x6f,
	0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x49, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x19, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x41,
	0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x55, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x6f,
	0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x64,
	0x69, 0x74, 0x12, 0x1c, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1d, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x5b, 0x0a, 0x18, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x41, 0x75,
	0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x41, 0x75,
	0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x76, 0x0a, 0x21,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x27, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x28, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x88, 0x01, 0x0a, 0x27, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2d, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x2e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x6a, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x7c, 0x0a, 0x23, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x29, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2a, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x2e,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x43,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x18, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x52, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x1c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x52, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x4c, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x58, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x67, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x55, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4a,
	0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x12, 0x1c, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x6e, 0x75,
	0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1d, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_output_proto_rawDescOnce sync.Once
	file_output_proto_rawDescData = file_output_proto_rawDesc
)

func file_output_proto_rawDescGZIP() []byte {
	file_output_proto_rawDescOnce.Do(func() {
		file_output_proto_rawDescData = protoimpl.X.CompressGZIP(file_output_proto_rawDescData)
	})
	return file_output_proto_rawDescData
}

var file_output_proto_msgTypes = make([]protoimpl.MessageInfo, 514)
var file_output_proto_goTypes = []interface{}{
	(*Activity)(nil),                                      // 0: Activity
	(*Application)(nil),                                   // 1: Application
	(*ApplicationAssetsInput)(nil),                        // 2: ApplicationAssetsInput
	(*ApplicationAssetsOutput)(nil),                       // 3: ApplicationAssetsOutput
	(*ApplicationBotCreateInput)(nil),                     // 4: ApplicationBotCreateInput
	(*ApplicationBotCreateOutput)(nil),                    // 5: ApplicationBotCreateOutput
	(*ApplicationCommand)(nil),                            // 6: ApplicationCommand
	(*ApplicationCommandBulkOverwriteInput)(nil),          // 7: ApplicationCommandBulkOverwriteInput
	(*ApplicationCommandBulkOverwriteOutput)(nil),         // 8: ApplicationCommandBulkOverwriteOutput
	(*ApplicationCommandCreateInput)(nil),                 // 9: ApplicationCommandCreateInput
	(*ApplicationCommandCreateOutput)(nil),                // 10: ApplicationCommandCreateOutput
	(*ApplicationCommandDeleteInput)(nil),                 // 11: ApplicationCommandDeleteInput
	(*ApplicationCommandDeleteOutput)(nil),                // 12: ApplicationCommandDeleteOutput
	(*ApplicationCommandEditInput)(nil),                   // 13: ApplicationCommandEditInput
	(*ApplicationCommandEditOutput)(nil),                  // 14: ApplicationCommandEditOutput
	(*ApplicationCommandInput)(nil),                       // 15: ApplicationCommandInput
	(*ApplicationCommandOption)(nil),                      // 16: ApplicationCommandOption
	(*ApplicationCommandOptionChoice)(nil),                // 17: ApplicationCommandOptionChoice
	(*ApplicationCommandOutput)(nil),                      // 18: ApplicationCommandOutput
	(*ApplicationCommandPermissions)(nil),                 // 19: ApplicationCommandPermissions
	(*ApplicationCommandPermissionsBatchEditInput)(nil),   // 20: ApplicationCommandPermissionsBatchEditInput
	(*ApplicationCommandPermissionsBatchEditOutput)(nil),  // 21: ApplicationCommandPermissionsBatchEditOutput
	(*ApplicationCommandPermissionsEditInput)(nil),        // 22: ApplicationCommandPermissionsEditInput
	(*ApplicationCommandPermissionsEditOutput)(nil),       // 23: ApplicationCommandPermissionsEditOutput
	(*ApplicationCommandPermissionsInput)(nil),            // 24: ApplicationCommandPermissionsInput
	(*ApplicationCommandPermissionsList)(nil),             // 25: ApplicationCommandPermissionsList
	(*ApplicationCommandPermissionsOutput)(nil),           // 26: ApplicationCommandPermissionsOutput
	(*ApplicationCommandsInput)(nil),                      // 27: ApplicationCommandsInput
	(*ApplicationCommandsOutput)(nil),                     // 28: ApplicationCommandsOutput
	(*ApplicationCreateInput)(nil),                        // 29: ApplicationCreateInput
	(*ApplicationCreateOutput)(nil),                       // 30: ApplicationCreateOutput
	(*ApplicationDeleteInput)(nil),                        // 31: ApplicationDeleteInput
	(*ApplicationDeleteOutput)(nil),                       // 32: ApplicationDeleteOutput
	(*ApplicationInput)(nil),                              // 33: ApplicationInput
	(*ApplicationOutput)(nil),                             // 34: ApplicationOutput
	(*ApplicationRoleConnection)(nil),                     // 35: ApplicationRoleConnection
	(*ApplicationRoleConnectionMetadata)(nil),             // 36: ApplicationRoleConnectionMetadata
	(*ApplicationRoleConnectionMetadataInput)(nil),        // 37: ApplicationRoleConnectionMetadataInput
	(*ApplicationRoleConnectionMetadataOutput)(nil),       // 38: ApplicationRoleConnectionMetadataOutput
	(*ApplicationRoleConnectionMetadataUpdateInput)(nil),  // 39: ApplicationRoleConnectionMetadataUpdateInput
	(*ApplicationRoleConnectionMetadataUpdateOutput)(nil), // 40: ApplicationRoleConnectionMetadataUpdateOutput
	(*ApplicationUpdateInput)(nil),                        // 41: ApplicationUpdateInput
	(*ApplicationUpdateOutput)(nil),                       // 42: ApplicationUpdateOutput
	(*ApplicationsInput)(nil),                             // 43: ApplicationsInput
	(*ApplicationsOutput)(nil),                            // 44: ApplicationsOutput
	(*Asset)(nil),                                         // 45: Asset
	(*Assets)(nil),                                        // 46: Assets
	(*AuditLogChange)(nil),                                // 47: AuditLogChange
	(*AuditLogEntry)(nil),                                 // 48: AuditLogEntry
	(*AuditLogOptions)(nil),                               // 49: AuditLogOptions
	(*AutoModerationAction)(nil),                          // 50: AutoModerationAction
	(*AutoModerationActionMetadata)(nil),                  // 51: AutoModerationActionMetadata
	(*AutoModerationRule)(nil),                            // 52: AutoModerationRule
	(*AutoModerationRuleCreateInput)(nil),                 // 53: AutoModerationRuleCreateInput
	(*AutoModerationRuleCreateOutput)(nil),                // 54: AutoModerationRuleCreateOutput
	(*AutoModerationRuleDeleteInput)(nil),                 // 55: AutoModerationRuleDeleteInput
	(*AutoModerationRuleDeleteOutput)(nil),                // 56: AutoModerationRuleDeleteOutput
	(*AutoModerationRuleEditInput)(nil),                   // 57: AutoModerationRuleEditInput
	(*AutoModerationRuleEditOutput)(nil),                  // 58: AutoModerationRuleEditOutput
	(*AutoModerationRuleInput)(nil),                       // 59: AutoModerationRuleInput
	(*AutoModerationRuleOutput)(nil),                      // 60: AutoModerationRuleOutput
	(*AutoModerationRulesInput)(nil),                      // 61: AutoModerationRulesInput
	(*AutoModerationRulesOutput)(nil),                     // 62: AutoModerationRulesOutput
	(*AutoModerationTriggerMetadata)(nil),                 // 63: AutoModerationTriggerMetadata
	(*Channel)(nil),                                       // 64: Channel
	(*ChannelDeleteInput)(nil),                            // 65: ChannelDeleteInput
	(*ChannelDeleteOutput)(nil),                           // 66: ChannelDeleteOutput
	(*ChannelEdit)(nil),                                   // 67: ChannelEdit
	(*ChannelEditComplexInput)(nil),                       // 68: ChannelEditComplexInput
	(*ChannelEditComplexOutput)(nil),                      // 69: ChannelEditComplexOutput
	(*ChannelEditInput)(nil),                              // 70: ChannelEditInput
	(*ChannelEditOutput)(nil),                             // 71: ChannelEditOutput
	(*ChannelFileSendInput)(nil),                          // 72: ChannelFileSendInput
	(*ChannelFileSendOutput)(nil),                         // 73: ChannelFileSendOutput
	(*ChannelFileSendWithMessageInput)(nil),               // 74: ChannelFileSendWithMessageInput
	(*ChannelFileSendWithMessageOutput)(nil),              // 75: ChannelFileSendWithMessageOutput
	(*ChannelFollow)(nil),                                 // 76: ChannelFollow
	(*ChannelInput)(nil),                                  // 77: ChannelInput
	(*ChannelInviteCreateInput)(nil),                      // 78: ChannelInviteCreateInput
	(*ChannelInviteCreateOutput)(nil),                     // 79: ChannelInviteCreateOutput
	(*ChannelInvitesInput)(nil),                           // 80: ChannelInvitesInput
	(*ChannelInvitesOutput)(nil),                          // 81: ChannelInvitesOutput
	(*ChannelMessageCrosspostInput)(nil),                  // 82: ChannelMessageCrosspostInput
	(*ChannelMessageCrosspostOutput)(nil),                 // 83: ChannelMessageCrosspostOutput
	(*ChannelMessageDeleteInput)(nil),                     // 84: ChannelMessageDeleteInput
	(*ChannelMessageDeleteOutput)(nil),                    // 85: ChannelMessageDeleteOutput
	(*ChannelMessageEditComplexInput)(nil),                // 86: ChannelMessageEditComplexInput
	(*ChannelMessageEditComplexOutput)(nil),               // 87: ChannelMessageEditComplexOutput
	(*ChannelMessageEditEmbedInput)(nil),                  // 88: ChannelMessageEditEmbedInput
	(*ChannelMessageEditEmbedOutput)(nil),                 // 89: ChannelMessageEditEmbedOutput
	(*ChannelMessageEditEmbedsInput)(nil),                 // 90: ChannelMessageEditEmbedsInput
	(*ChannelMessageEditEmbedsOutput)(nil),                // 91: ChannelMessageEditEmbedsOutput
	(*ChannelMessageEditInput)(nil),                       // 92: ChannelMessageEditInput
	(*ChannelMessageEditOutput)(nil),                      // 93: ChannelMessageEditOutput
	(*ChannelMessageInput)(nil),                           // 94: ChannelMessageInput
	(*ChannelMessageOutput)(nil),                          // 95: ChannelMessageOutput
	(*ChannelMessagePinInput)(nil),                        // 96: ChannelMessagePinInput
	(*ChannelMessagePinOutput)(nil),                       // 97: ChannelMessagePinOutput
	(*ChannelMessageSendComplexInput)(nil),                // 98: ChannelMessageSendComplexInput
	(*ChannelMessageSendComplexOutput)(nil),               // 99: ChannelMessageSendComplexOutput
	(*ChannelMessageSendEmbedInput)(nil),                  // 100: ChannelMessageSendEmbedInput
	(*ChannelMessageSendEmbedOutput)(nil),                 // 101: ChannelMessageSendEmbedOutput
	(*ChannelMessageSendEmbedReplyInput)(nil),             // 102: ChannelMessageSendEmbedReplyInput
	(*ChannelMessageSendEmbedReplyOutput)(nil),            // 103: ChannelMessageSendEmbedReplyOutput
	(*ChannelMessageSendEmbedsInput)(nil),                 // 104: ChannelMessageSendEmbedsInput
	(*ChannelMessageSendEmbedsOutput)(nil),                // 105: ChannelMessageSendEmbedsOutput
	(*ChannelMessageSendEmbedsReplyInput)(nil),            // 106: ChannelMessageSendEmbedsReplyInput
	(*ChannelMessageSendEmbedsReplyOutput)(nil),           // 107: ChannelMessageSendEmbedsReplyOutput
	(*ChannelMessageSendInput)(nil),                       // 108: ChannelMessageSendInput
	(*ChannelMessageSendOutput)(nil),                      // 109: ChannelMessageSendOutput
	(*ChannelMessageSendReplyInput)(nil),                  // 110: ChannelMessageSendReplyInput
	(*ChannelMessageSendReplyOutput)(nil),                 // 111: ChannelMessageSendReplyOutput
	(*ChannelMessageSendTTSInput)(nil),                    // 112: ChannelMessageSendTTSInput
	(*ChannelMessageSendTTSOutput)(nil),                   // 113: ChannelMessageSendTTSOutput
	(*ChannelMessageUnpinInput)(nil),                      // 114: ChannelMessageUnpinInput
	(*ChannelMessageUnpinOutput)(nil),                     // 115: ChannelMessageUnpinOutput
	(*ChannelMessagesBulkDeleteInput)(nil),                // 116: ChannelMessagesBulkDeleteInput
	(*ChannelMessagesBulkDeleteOutput)(nil),               // 117: ChannelMessagesBulkDeleteOutput
	(*ChannelMessagesInput)(nil),                          // 118: ChannelMessagesInput
	(*ChannelMessagesOutput)(nil),                         // 119: ChannelMessagesOutput
	(*ChannelMessagesPinnedInput)(nil),                    // 120: ChannelMessagesPinnedInput
	(*ChannelMessagesPinnedOutput)(nil),                   // 121: ChannelMessagesPinnedOutput
	(*ChannelNewsFollowInput)(nil),                        // 122: ChannelNewsFollowInput
	(*ChannelNewsFollowOutput)(nil),                       // 123: ChannelNewsFollowOutput
	(*ChannelOutput)(nil),                                 // 124: ChannelOutput
	(*ChannelPermissionDeleteInput)(nil),                  // 125: ChannelPermissionDeleteInput
	(*ChannelPermissionDeleteOutput)(nil),                 // 126: ChannelPermissionDeleteOutput
	(*ChannelPermissionSetInput)(nil),                     // 127: ChannelPermissionSetInput
	(*ChannelPermissionSetOutput)(nil),                    // 128: ChannelPermissionSetOutput
	(*ChannelTypingInput)(nil),                            // 129: ChannelTypingInput
	(*ChannelTypingOutput)(nil),                           // 130: ChannelTypingOutput
	(*ChannelVoiceJoinManualInput)(nil),                   // 131: ChannelVoiceJoinManualInput
	(*ChannelVoiceJoinManualOutput)(nil),                  // 132: ChannelVoiceJoinManualOutput
	(*ChannelWebhooksInput)(nil),                          // 133: ChannelWebhooksInput
	(*ChannelWebhooksOutput)(nil),                         // 134: ChannelWebhooksOutput
	(*ClientStatus)(nil),                                  // 135: ClientStatus
	(*Emoji)(nil),                                         // 136: Emoji
	(*EmojiParams)(nil),                                   // 137: EmojiParams
	(*File)(nil),                                          // 138: File
	(*FollowupMessageCreateInput)(nil),                    // 139: FollowupMessageCreateInput
	(*FollowupMessageCreateOutput)(nil),                   // 140: FollowupMessageCreateOutput
	(*FollowupMessageDeleteInput)(nil),                    // 141: FollowupMessageDeleteInput
	(*FollowupMessageDeleteOutput)(nil),                   // 142: FollowupMessageDeleteOutput
	(*FollowupMessageEditInput)(nil),                      // 143: FollowupMessageEditInput
	(*FollowupMessageEditOutput)(nil),                     // 144: FollowupMessageEditOutput
	(*ForumDefaultReaction)(nil),                          // 145: ForumDefaultReaction
	(*ForumTag)(nil),                                      // 146: ForumTag
	(*ForumThreadStartComplexInput)(nil),                  // 147: ForumThreadStartComplexInput
	(*ForumThreadStartComplexOutput)(nil),                 // 148: ForumThreadStartComplexOutput
	(*ForumThreadStartEmbedInput)(nil),                    // 149: ForumThreadStartEmbedInput
	(*ForumThreadStartEmbedOutput)(nil),                   // 150: ForumThreadStartEmbedOutput
	(*ForumThreadStartEmbedsInput)(nil),                   // 151: ForumThreadStartEmbedsInput
	(*ForumThreadStartEmbedsOutput)(nil),                  // 152: ForumThreadStartEmbedsOutput
	(*ForumThreadStartInput)(nil),                         // 153: ForumThreadStartInput
	(*ForumThreadStartOutput)(nil),                        // 154: ForumThreadStartOutput
	(*GatewayBotInput)(nil),                               // 155: GatewayBotInput
	(*GatewayBotOutput)(nil),                              // 156: GatewayBotOutput
	(*GatewayBotResponse)(nil),                            // 157: GatewayBotResponse
	(*GatewayInput)(nil),                                  // 158: GatewayInput
	(*GatewayOutput)(nil),                                 // 159: GatewayOutput
	(*Guild)(nil),                                         // 160: Guild
	(*GuildApplicationCommandPermissions)(nil),            // 161: GuildApplicationCommandPermissions
	(*GuildApplicationCommandsPermissionsInput)(nil),      // 162: GuildApplicationCommandsPermissionsInput
	(*GuildApplicationCommandsPermissionsOutput)(nil),     // 163: GuildApplicationCommandsPermissionsOutput
	(*GuildAuditLog)(nil),                                 // 164: GuildAuditLog
	(*GuildAuditLogInput)(nil),                            // 165: GuildAuditLogInput
	(*GuildAuditLogOutput)(nil),                           // 166: GuildAuditLogOutput
	(*GuildBan)(nil),                                      // 167: GuildBan
	(*GuildBanCreateInput)(nil),                           // 168: GuildBanCreateInput
	(*GuildBanCreateOutput)(nil),                          // 169: GuildBanCreateOutput
	(*GuildBanCreateWithReasonInput)(nil),                 // 170: GuildBanCreateWithReasonInput
	(*GuildBanCreateWithReasonOutput)(nil),                // 171: GuildBanCreateWithReasonOutput
	(*GuildBanDeleteInput)(nil),                           // 172: GuildBanDeleteInput
	(*GuildBanDeleteOutput)(nil),                          // 173: GuildBanDeleteOutput
	(*GuildBanInput)(nil),                                 // 174: GuildBanInput
	(*GuildBanOutput)(nil),                                // 175: GuildBanOutput
	(*GuildBansInput)(nil),                                // 176: GuildBansInput
	(*GuildBansOutput)(nil),                               // 177: GuildBansOutput
	(*GuildChannelCreateComplexInput)(nil),                // 178: GuildChannelCreateComplexInput
	(*GuildChannelCreateComplexOutput)(nil),               // 179: GuildChannelCreateComplexOutput
	(*GuildChannelCreateData)(nil),                        // 180: GuildChannelCreateData
	(*GuildChannelCreateInput)(nil),                       // 181: GuildChannelCreateInput
	(*GuildChannelCreateOutput)(nil),                      // 182: GuildChannelCreateOutput
	(*GuildChannelsInput)(nil),                            // 183: GuildChannelsInput
	(*GuildChannelsOutput)(nil),                           // 184: GuildChannelsOutput
	(*GuildChannelsReorderInput)(nil),                     // 185: GuildChannelsReorderInput
	(*GuildChannelsReorderOutput)(nil),                    // 186: GuildChannelsReorderOutput
	(*GuildCreateInput)(nil),                              // 187: GuildCreateInput
	(*GuildCreateOutput)(nil),                             // 188: GuildCreateOutput
	(*GuildCreateWithTemplateInput)(nil),                  // 189: GuildCreateWithTemplateInput
	(*GuildCreateWithTemplateOutput)(nil),                 // 190: GuildCreateWithTemplateOutput
	(*GuildDeleteInput)(nil),                              // 191: GuildDeleteInput
	(*GuildDeleteOutput)(nil),                             // 192: GuildDeleteOutput
	(*GuildEditInput)(nil),                                // 193: GuildEditInput
	(*GuildEditOutput)(nil),                               // 194: GuildEditOutput
	(*GuildEmbed)(nil),                                    // 195: GuildEmbed
	(*GuildEmbedEditInput)(nil),                           // 196: GuildEmbedEditInput
	(*GuildEmbedEditOutput)(nil),                          // 197: GuildEmbedEditOutput
	(*GuildEmbedInput)(nil),                               // 198: GuildEmbedInput
	(*GuildEmbedOutput)(nil),                              // 199: GuildEmbedOutput
	(*GuildEmojiCreateInput)(nil),                         // 200: GuildEmojiCreateInput
	(*GuildEmojiCreateOutput)(nil),                        // 201: GuildEmojiCreateOutput
	(*GuildEmojiDeleteInput)(nil),                         // 202: GuildEmojiDeleteInput
	(*GuildEmojiDeleteOutput)(nil),                        // 203: GuildEmojiDeleteOutput
	(*GuildEmojiEditInput)(nil),                           // 204: GuildEmojiEditInput
	(*GuildEmojiEditOutput)(nil),                          // 205: GuildEmojiEditOutput
	(*GuildEmojiInput)(nil),                               // 206: GuildEmojiInput
	(*GuildEmojiOutput)(nil),                              // 207: GuildEmojiOutput
	(*GuildEmojisInput)(nil),                              // 208: GuildEmojisInput
	(*GuildEmojisOutput)(nil),                             // 209: GuildEmojisOutput
	(*GuildIconInput)(nil),                                // 210: GuildIconInput
	(*GuildIconOutput)(nil),                               // 211: GuildIconOutput
	(*GuildInput)(nil),                                    // 212: GuildInput
	(*GuildIntegrationCreateInput)(nil),                   // 213: GuildIntegrationCreateInput
	(*GuildIntegrationCreateOutput)(nil),                  // 214: GuildIntegrationCreateOutput
	(*GuildIntegrationDeleteInput)(nil),                   // 215: GuildIntegrationDeleteInput
	(*GuildIntegrationDeleteOutput)(nil),                  // 216: GuildIntegrationDeleteOutput
	(*GuildIntegrationEditInput)(nil),                     // 217: GuildIntegrationEditInput
	(*GuildIntegrationEditOutput)(nil),                    // 218: GuildIntegrationEditOutput
	(*GuildIntegrationsInput)(nil),                        // 219: GuildIntegrationsInput
	(*GuildIntegrationsOutput)(nil),                       // 220: GuildIntegrationsOutput
	(*GuildInvitesInput)(nil),                             // 221: GuildInvitesInput
	(*GuildInvitesOutput)(nil),                            // 222: GuildInvitesOutput
	(*GuildLeaveInput)(nil),                               // 223: GuildLeaveInput
	(*GuildLeaveOutput)(nil),                              // 224: GuildLeaveOutput
	(*GuildMemberAddInput)(nil),                           // 225: GuildMemberAddInput
	(*GuildMemberAddOutput)(nil),                          // 226: GuildMemberAddOutput
	(*GuildMemberAddParams)(nil),                          // 227: GuildMemberAddParams
	(*GuildMemberDeafenInput)(nil),                        // 228: GuildMemberDeafenInput
	(*GuildMemberDeafenOutput)(nil),                       // 229: GuildMemberDeafenOutput
	(*GuildMemberDeleteInput)(nil),                        // 230: GuildMemberDeleteInput
	(*GuildMemberDeleteOutput)(nil),                       // 231: GuildMemberDeleteOutput
	(*GuildMemberDeleteWithReasonInput)(nil),              // 232: GuildMemberDeleteWithReasonInput
	(*GuildMemberDeleteWithReasonOutput)(nil),             // 233: GuildMemberDeleteWithReasonOutput
	(*GuildMemberEditComplexInput)(nil),                   // 234: GuildMemberEditComplexInput
	(*GuildMemberEditComplexOutput)(nil),                  // 235: GuildMemberEditComplexOutput
	(*GuildMemberEditInput)(nil),                          // 236: GuildMemberEditInput
	(*GuildMemberEditOutput)(nil),                         // 237: GuildMemberEditOutput
	(*GuildMemberInput)(nil),                              // 238: GuildMemberInput
	(*GuildMemberMoveInput)(nil),                          // 239: GuildMemberMoveInput
	(*GuildMemberMoveOutput)(nil),                         // 240: GuildMemberMoveOutput
	(*GuildMemberMuteInput)(nil),                          // 241: GuildMemberMuteInput
	(*GuildMemberMuteOutput)(nil),                         // 242: GuildMemberMuteOutput
	(*GuildMemberNicknameInput)(nil),                      // 243: GuildMemberNicknameInput
	(*GuildMemberNicknameOutput)(nil),                     // 244: GuildMemberNicknameOutput
	(*GuildMemberOutput)(nil),                             // 245: GuildMemberOutput
	(*GuildMemberParams)(nil),                             // 246: GuildMemberParams
	(*GuildMemberRoleAddInput)(nil),                       // 247: GuildMemberRoleAddInput
	(*GuildMemberRoleAddOutput)(nil),                      // 248: GuildMemberRoleAddOutput
	(*GuildMemberRoleRemoveInput)(nil),                    // 249: GuildMemberRoleRemoveInput
	(*GuildMemberRoleRemoveOutput)(nil),                   // 250: GuildMemberRoleRemoveOutput
	(*GuildMemberTimeoutInput)(nil),                       // 251: GuildMemberTimeoutInput
	(*GuildMemberTimeoutOutput)(nil),                      // 252: GuildMemberTimeoutOutput
	(*GuildMembersInput)(nil),                             // 253: GuildMembersInput
	(*GuildMembersOutput)(nil),                            // 254: GuildMembersOutput
	(*GuildMembersSearchInput)(nil),                       // 255: GuildMembersSearchInput
	(*GuildMembersSearchOutput)(nil),                      // 256: GuildMembersSearchOutput
	(*GuildOutput)(nil),                                   // 257: GuildOutput
	(*GuildParams)(nil),                                   // 258: GuildParams
	(*GuildPreview)(nil),                                  // 259: GuildPreview
	(*GuildPreviewInput)(nil),                             // 260: GuildPreviewInput
	(*GuildPreviewOutput)(nil),                            // 261: GuildPreviewOutput
	(*GuildPruneCountInput)(nil),                          // 262: GuildPruneCountInput
	(*GuildPruneCountOutput)(nil),                         // 263: GuildPruneCountOutput
	(*GuildPruneInput)(nil),                               // 264: GuildPruneInput
	(*GuildPruneOutput)(nil),                              // 265: GuildPruneOutput
	(*GuildRoleCreateInput)(nil),                          // 266: GuildRoleCreateInput
	(*GuildRoleCreateOutput)(nil),                         // 267: GuildRoleCreateOutput
	(*GuildRoleDeleteInput)(nil),                          // 268: GuildRoleDeleteInput
	(*GuildRoleDeleteOutput)(nil),                         // 269: GuildRoleDeleteOutput
	(*GuildRoleEditInput)(nil),                            // 270: GuildRoleEditInput
	(*GuildRoleEditOutput)(nil),                           // 271: GuildRoleEditOutput
	(*GuildRoleReorderInput)(nil),                         // 272: GuildRoleReorderInput
	(*GuildRoleReorderOutput)(nil),                        // 273: GuildRoleReorderOutput
	(*GuildRolesInput)(nil),                               // 274: GuildRolesInput
	(*GuildRolesOutput)(nil),                              // 275: GuildRolesOutput
	(*GuildScheduledEvent)(nil),                           // 276: GuildScheduledEvent
	(*GuildScheduledEventCreateInput)(nil),                // 277: GuildScheduledEventCreateInput
	(*GuildScheduledEventCreateOutput)(nil),               // 278: GuildScheduledEventCreateOutput
	(*GuildScheduledEventDeleteInput)(nil),                // 279: GuildScheduledEventDeleteInput
	(*GuildScheduledEventDeleteOutput)(nil),               // 280: GuildScheduledEventDeleteOutput
	(*GuildScheduledEventEditInput)(nil),                  // 281: GuildScheduledEventEditInput
	(*GuildScheduledEventEditOutput)(nil),                 // 282: GuildScheduledEventEditOutput
	(*GuildScheduledEventEntityMetadata)(nil),             // 283: GuildScheduledEventEntityMetadata
	(*GuildScheduledEventInput)(nil),                      // 284: GuildScheduledEventInput
	(*GuildScheduledEventOutput)(nil),                     // 285: GuildScheduledEventOutput
	(*GuildScheduledEventParams)(nil),                     // 286: GuildScheduledEventParams
	(*GuildScheduledEventUser)(nil),                       // 287: GuildScheduledEventUser
	(*GuildScheduledEventUsersInput)(nil),                 // 288: GuildScheduledEventUsersInput
	(*GuildScheduledEventUsersOutput)(nil),                // 289: GuildScheduledEventUsersOutput
	(*GuildScheduledEventsInput)(nil),                     // 290: GuildScheduledEventsInput
	(*GuildScheduledEventsOutput)(nil),                    // 291: GuildScheduledEventsOutput
	(*GuildSplashInput)(nil),                              // 292: GuildSplashInput
	(*GuildSplashOutput)(nil),                             // 293: GuildSplashOutput
	(*GuildTemplate)(nil),                                 // 294: GuildTemplate
	(*GuildTemplateCreateInput)(nil),                      // 295: GuildTemplateCreateInput
	(*GuildTemplateCreateOutput)(nil),                     // 296: GuildTemplateCreateOutput
	(*GuildTemplateDeleteInput)(nil),                      // 297: GuildTemplateDeleteInput
	(*GuildTemplateDeleteOutput)(nil),                     // 298: GuildTemplateDeleteOutput
	(*GuildTemplateEditInput)(nil),                        // 299: GuildTemplateEditInput
	(*GuildTemplateEditOutput)(nil),                       // 300: GuildTemplateEditOutput
	(*GuildTemplateInput)(nil),                            // 301: GuildTemplateInput
	(*GuildTemplateOutput)(nil),                           // 302: GuildTemplateOutput
	(*GuildTemplateParams)(nil),                           // 303: GuildTemplateParams
	(*GuildTemplateSyncInput)(nil),                        // 304: GuildTemplateSyncInput
	(*GuildTemplateSyncOutput)(nil),                       // 305: GuildTemplateSyncOutput
	(*GuildTemplatesInput)(nil),                           // 306: GuildTemplatesInput
	(*GuildTemplatesOutput)(nil),                          // 307: GuildTemplatesOutput
	(*GuildThreadsActiveInput)(nil),                       // 308: GuildThreadsActiveInput
	(*GuildThreadsActiveOutput)(nil),                      // 309: GuildThreadsActiveOutput
	(*GuildWebhooksInput)(nil),                            // 310: GuildWebhooksInput
	(*GuildWebhooksOutput)(nil),                           // 311: GuildWebhooksOutput
	(*GuildWithCountsInput)(nil),                          // 312: GuildWithCountsInput
	(*GuildWithCountsOutput)(nil),                         // 313: GuildWithCountsOutput
	(*HeartbeatLatencyInput)(nil),                         // 314: HeartbeatLatencyInput
	(*HeartbeatLatencyOutput)(nil),                        // 315: HeartbeatLatencyOutput
	(*Image)(nil),                                         // 316: Image
	(*Integration)(nil),                                   // 317: Integration
	(*IntegrationAccount)(nil),                            // 318: IntegrationAccount
	(*Interaction)(nil),                                   // 319: Interaction
	(*InteractionData)(nil),                               // 320: InteractionData
	(*InteractionRespondInput)(nil),                       // 321: InteractionRespondInput
	(*InteractionRespondOutput)(nil),                      // 322: InteractionRespondOutput
	(*InteractionResponse)(nil),                           // 323: InteractionResponse
	(*InteractionResponseData)(nil),                       // 324: InteractionResponseData
	(*InteractionResponseDeleteInput)(nil),                // 325: InteractionResponseDeleteInput
	(*InteractionResponseDeleteOutput)(nil),               // 326: InteractionResponseDeleteOutput
	(*InteractionResponseEditInput)(nil),                  // 327: InteractionResponseEditInput
	(*InteractionResponseEditOutput)(nil),                 // 328: InteractionResponseEditOutput
	(*InteractionResponseInput)(nil),                      // 329: InteractionResponseInput
	(*InteractionResponseOutput)(nil),                     // 330: InteractionResponseOutput
	(*Invite)(nil),                                        // 331: Invite
	(*InviteAcceptInput)(nil),                             // 332: InviteAcceptInput
	(*InviteAcceptOutput)(nil),                            // 333: InviteAcceptOutput
	(*InviteComplexInput)(nil),                            // 334: InviteComplexInput
	(*InviteComplexOutput)(nil),                           // 335: InviteComplexOutput
	(*InviteDeleteInput)(nil),                             // 336: InviteDeleteInput
	(*InviteDeleteOutput)(nil),                            // 337: InviteDeleteOutput
	(*InviteInput)(nil),                                   // 338: InviteInput
	(*InviteOutput)(nil),                                  // 339: InviteOutput
	(*InviteWithCountsInput)(nil),                         // 340: InviteWithCountsInput
	(*InviteWithCountsOutput)(nil),                        // 341: InviteWithCountsOutput
	(*Member)(nil),                                        // 342: Member
	(*Message)(nil),                                       // 343: Message
	(*MessageActivity)(nil),                               // 344: MessageActivity
	(*MessageAllowedMentions)(nil),                        // 345: MessageAllowedMentions
	(*MessageApplication)(nil),                            // 346: MessageApplication
	(*MessageAttachment)(nil),                             // 347: MessageAttachment
	(*MessageComponent)(nil),                              // 348: MessageComponent
	(*MessageEdit)(nil),                                   // 349: MessageEdit
	(*MessageEmbed)(nil),                                  // 350: MessageEmbed
	(*MessageEmbedAuthor)(nil),                            // 351: MessageEmbedAuthor
	(*MessageEmbedField)(nil),                             // 352: MessageEmbedField
	(*MessageEmbedFooter)(nil),                            // 353: MessageEmbedFooter
	(*MessageEmbedImage)(nil),                             // 354: MessageEmbedImage
	(*MessageEmbedProvider)(nil),                          // 355: MessageEmbedProvider
	(*MessageEmbedThumbnail)(nil),                         // 356: MessageEmbedThumbnail
	(*MessageEmbedVideo)(nil),                             // 357: MessageEmbedVideo
	(*MessageInteraction)(nil),                            // 358: MessageInteraction
	(*MessageReactionAddInput)(nil),                       // 359: MessageReactionAddInput
	(*MessageReactionAddOutput)(nil),                      // 360: MessageReactionAddOutput
	(*MessageReactionRemoveInput)(nil),                    // 361: MessageReactionRemoveInput
	(*MessageReactionRemoveOutput)(nil),                   // 362: MessageReactionRemoveOutput
	(*MessageReactions)(nil),                              // 363: MessageReactions
	(*MessageReactionsInput)(nil),                         // 364: MessageReactionsInput
	(*MessageReactionsOutput)(nil),                        // 365: MessageReactionsOutput
	(*MessageReactionsRemoveAllInput)(nil),                // 366: MessageReactionsRemoveAllInput
	(*MessageReactionsRemoveAllOutput)(nil),               // 367: MessageReactionsRemoveAllOutput
	(*MessageReactionsRemoveEmojiInput)(nil),              // 368: MessageReactionsRemoveEmojiInput
	(*MessageReactionsRemoveEmojiOutput)(nil),             // 369: MessageReactionsRemoveEmojiOutput
	(*MessageReference)(nil),                              // 370: MessageReference
	(*MessageSend)(nil),                                   // 371: MessageSend
	(*MessageThreadStartComplexInput)(nil),                // 372: MessageThreadStartComplexInput
	(*MessageThreadStartComplexOutput)(nil),               // 373: MessageThreadStartComplexOutput
	(*MessageThreadStartInput)(nil),                       // 374: MessageThreadStartInput
	(*MessageThreadStartOutput)(nil),                      // 375: MessageThreadStartOutput
	(*Party)(nil),                                         // 376: Party
	(*PermissionOverwrite)(nil),                           // 377: PermissionOverwrite
	(*Presence)(nil),                                      // 378: Presence
	(*Reader)(nil),                                        // 379: Reader
	(*RequestGuildMembersBatchInput)(nil),                 // 380: RequestGuildMembersBatchInput
	(*RequestGuildMembersBatchListInput)(nil),             // 381: RequestGuildMembersBatchListInput
	(*RequestGuildMembersBatchListOutput)(nil),            // 382: RequestGuildMembersBatchListOutput
	(*RequestGuildMembersBatchOutput)(nil),                // 383: RequestGuildMembersBatchOutput
	(*RequestGuildMembersInput)(nil),                      // 384: RequestGuildMembersInput
	(*RequestGuildMembersListInput)(nil),                  // 385: RequestGuildMembersListInput
	(*RequestGuildMembersListOutput)(nil),                 // 386: RequestGuildMembersListOutput
	(*RequestGuildMembersOutput)(nil),                     // 387: RequestGuildMembersOutput
	(*RequestInput)(nil),                                  // 388: RequestInput
	(*RequestOutput)(nil),                                 // 389: RequestOutput
	(*RequestWithBucketIDInput)(nil),                      // 390: RequestWithBucketIDInput
	(*RequestWithBucketIDOutput)(nil),                     // 391: RequestWithBucketIDOutput
	(*Role)(nil),                                          // 392: Role
	(*RoleParams)(nil),                                    // 393: RoleParams
	(*Secrets)(nil),                                       // 394: Secrets
	(*SessionInformation)(nil),                            // 395: SessionInformation
	(*StageInstance)(nil),                                 // 396: StageInstance
	(*StageInstanceCreateInput)(nil),                      // 397: StageInstanceCreateInput
	(*StageInstanceCreateOutput)(nil),                     // 398: StageInstanceCreateOutput
	(*StageInstanceDeleteInput)(nil),                      // 399: StageInstanceDeleteInput
	(*StageInstanceDeleteOutput)(nil),                     // 400: StageInstanceDeleteOutput
	(*StageInstanceEditInput)(nil),                        // 401: StageInstanceEditInput
	(*StageInstanceEditOutput)(nil),                       // 402: StageInstanceEditOutput
	(*StageInstanceInput)(nil),                            // 403: StageInstanceInput
	(*StageInstanceOutput)(nil),                           // 404: StageInstanceOutput
	(*StageInstanceParams)(nil),                           // 405: StageInstanceParams
	(*Sticker)(nil),                                       // 406: Sticker
	(*Team)(nil),                                          // 407: Team
	(*TeamMember)(nil),                                    // 408: TeamMember
	(*ThreadJoinInput)(nil),                               // 409: ThreadJoinInput
	(*ThreadJoinOutput)(nil),                              // 410: ThreadJoinOutput
	(*ThreadLeaveInput)(nil),                              // 411: ThreadLeaveInput
	(*ThreadLeaveOutput)(nil),                             // 412: ThreadLeaveOutput
	(*ThreadMember)(nil),                                  // 413: ThreadMember
	(*ThreadMemberAddInput)(nil),                          // 414: ThreadMemberAddInput
	(*ThreadMemberAddOutput)(nil),                         // 415: ThreadMemberAddOutput
	(*ThreadMemberInput)(nil),                             // 416: ThreadMemberInput
	(*ThreadMemberOutput)(nil),                            // 417: ThreadMemberOutput
	(*ThreadMemberRemoveInput)(nil),                       // 418: ThreadMemberRemoveInput
	(*ThreadMemberRemoveOutput)(nil),                      // 419: ThreadMemberRemoveOutput
	(*ThreadMembersInput)(nil),                            // 420: ThreadMembersInput
	(*ThreadMembersOutput)(nil),                           // 421: ThreadMembersOutput
	(*ThreadMetadata)(nil),                                // 422: ThreadMetadata
	(*ThreadStart)(nil),                                   // 423: ThreadStart
	(*ThreadStartComplexInput)(nil),                       // 424: ThreadStartComplexInput
	(*ThreadStartComplexOutput)(nil),                      // 425: ThreadStartComplexOutput
	(*ThreadStartInput)(nil),                              // 426: ThreadStartInput
	(*ThreadStartOutput)(nil),                             // 427: ThreadStartOutput
	(*ThreadsActiveInput)(nil),                            // 428: ThreadsActiveInput
	(*ThreadsActiveOutput)(nil),                           // 429: ThreadsActiveOutput
	(*ThreadsArchivedInput)(nil),                          // 430: ThreadsArchivedInput
	(*ThreadsArchivedOutput)(nil),                         // 431: ThreadsArchivedOutput
	(*ThreadsList)(nil),                                   // 432: ThreadsList
	(*ThreadsPrivateArchivedInput)(nil),                   // 433: ThreadsPrivateArchivedInput
	(*ThreadsPrivateArchivedOutput)(nil),                  // 434: ThreadsPrivateArchivedOutput
	(*ThreadsPrivateJoinedArchivedInput)(nil),             // 435: ThreadsPrivateJoinedArchivedInput
	(*ThreadsPrivateJoinedArchivedOutput)(nil),            // 436: ThreadsPrivateJoinedArchivedOutput
	(*Time)(nil),                                          // 437: Time
	(*TimeStamps)(nil),                                    // 438: TimeStamps
	(*UpdateGameStatusInput)(nil),                         // 439: UpdateGameStatusInput
	(*UpdateGameStatusOutput)(nil),                        // 440: UpdateGameStatusOutput
	(*UpdateListeningStatusInput)(nil),                    // 441: UpdateListeningStatusInput
	(*UpdateListeningStatusOutput)(nil),                   // 442: UpdateListeningStatusOutput
	(*UpdateStatusComplexInput)(nil),                      // 443: UpdateStatusComplexInput
	(*UpdateStatusComplexOutput)(nil),                     // 444: UpdateStatusComplexOutput
	(*UpdateStatusData)(nil),                              // 445: UpdateStatusData
	(*UpdateStreamingStatusInput)(nil),                    // 446: UpdateStreamingStatusInput
	(*UpdateStreamingStatusOutput)(nil),                   // 447: UpdateStreamingStatusOutput
	(*UpdateWatchStatusInput)(nil),                        // 448: UpdateWatchStatusInput
	(*UpdateWatchStatusOutput)(nil),                       // 449: UpdateWatchStatusOutput
	(*User)(nil),                                          // 450: User
	(*UserApplicationRoleConnectionInput)(nil),            // 451: UserApplicationRoleConnectionInput
	(*UserApplicationRoleConnectionOutput)(nil),           // 452: UserApplicationRoleConnectionOutput
	(*UserApplicationRoleConnectionUpdateInput)(nil),      // 453: UserApplicationRoleConnectionUpdateInput
	(*UserApplicationRoleConnectionUpdateOutput)(nil),     // 454: UserApplicationRoleConnectionUpdateOutput
	(*UserAvatarDecodeInput)(nil),                         // 455: UserAvatarDecodeInput
	(*UserAvatarDecodeOutput)(nil),                        // 456: UserAvatarDecodeOutput
	(*UserAvatarInput)(nil),                               // 457: UserAvatarInput
	(*UserAvatarOutput)(nil),                              // 458: UserAvatarOutput
	(*UserChannelCreateInput)(nil),                        // 459: UserChannelCreateInput
	(*UserChannelCreateOutput)(nil),                       // 460: UserChannelCreateOutput
	(*UserChannelPermissionsInput)(nil),                   // 461: UserChannelPermissionsInput
	(*UserChannelPermissionsOutput)(nil),                  // 462: UserChannelPermissionsOutput
	(*UserConnection)(nil),                                // 463: UserConnection
	(*UserConnectionsInput)(nil),                          // 464: UserConnectionsInput
	(*UserConnectionsOutput)(nil),                         // 465: UserConnectionsOutput
	(*UserGuild)(nil),                                     // 466: UserGuild
	(*UserGuildMemberInput)(nil),                          // 467: UserGuildMemberInput
	(*UserGuildMemberOutput)(nil),                         // 468: UserGuildMemberOutput
	(*UserGuildsInput)(nil),                               // 469: UserGuildsInput
	(*UserGuildsOutput)(nil),                              // 470: UserGuildsOutput
	(*UserInput)(nil),                                     // 471: UserInput
	(*UserOutput)(nil),                                    // 472: UserOutput
	(*UserUpdateInput)(nil),                               // 473: UserUpdateInput
	(*UserUpdateOutput)(nil),                              // 474: UserUpdateOutput
	(*VoiceRegion)(nil),                                   // 475: VoiceRegion
	(*VoiceRegionsInput)(nil),                             // 476: VoiceRegionsInput
	(*VoiceRegionsOutput)(nil),                            // 477: VoiceRegionsOutput
	(*VoiceState)(nil),                                    // 478: VoiceState
	(*Webhook)(nil),                                       // 479: Webhook
	(*WebhookCreateInput)(nil),                            // 480: WebhookCreateInput
	(*WebhookCreateOutput)(nil),                           // 481: WebhookCreateOutput
	(*WebhookDeleteInput)(nil),                            // 482: WebhookDeleteInput
	(*WebhookDeleteOutput)(nil),                           // 483: WebhookDeleteOutput
	(*WebhookDeleteWithTokenInput)(nil),                   // 484: WebhookDeleteWithTokenInput
	(*WebhookDeleteWithTokenOutput)(nil),                  // 485: WebhookDeleteWithTokenOutput
	(*WebhookEdit)(nil),                                   // 486: WebhookEdit
	(*WebhookEditInput)(nil),                              // 487: WebhookEditInput
	(*WebhookEditOutput)(nil),                             // 488: WebhookEditOutput
	(*WebhookEditWithTokenInput)(nil),                     // 489: WebhookEditWithTokenInput
	(*WebhookEditWithTokenOutput)(nil),                    // 490: WebhookEditWithTokenOutput
	(*WebhookExecuteInput)(nil),                           // 491: WebhookExecuteInput
	(*WebhookExecuteOutput)(nil),                          // 492: WebhookExecuteOutput
	(*WebhookInput)(nil),                                  // 493: WebhookInput
	(*WebhookMessageDeleteInput)(nil),                     // 494: WebhookMessageDeleteInput
	(*WebhookMessageDeleteOutput)(nil),                    // 495: WebhookMessageDeleteOutput
	(*WebhookMessageEditInput)(nil),                       // 496: WebhookMessageEditInput
	(*WebhookMessageEditOutput)(nil),                      // 497: WebhookMessageEditOutput
	(*WebhookMessageInput)(nil),                           // 498: WebhookMessageInput
	(*WebhookMessageOutput)(nil),                          // 499: WebhookMessageOutput
	(*WebhookOutput)(nil),                                 // 500: WebhookOutput
	(*WebhookParams)(nil),                                 // 501: WebhookParams
	(*WebhookThreadExecuteInput)(nil),                     // 502: WebhookThreadExecuteInput
	(*WebhookThreadExecuteOutput)(nil),                    // 503: WebhookThreadExecuteOutput
	(*WebhookWithTokenInput)(nil),                         // 504: WebhookWithTokenInput
	(*WebhookWithTokenOutput)(nil),                        // 505: WebhookWithTokenOutput
	nil,                                                   // 506: ApplicationCommand.NameLocalizationsEntry
	nil,                                                   // 507: ApplicationCommand.DescriptionLocalizationsEntry
	nil,                                                   // 508: ApplicationCommandOption.NameLocalizationsEntry
	nil,                                                   // 509: ApplicationCommandOption.DescriptionLocalizationsEntry
	nil,                                                   // 510: ApplicationCommandOptionChoice.NameLocalizationsEntry
	nil,                                                   // 511: ApplicationRoleConnection.MetadataEntry
	nil,                                                   // 512: ApplicationRoleConnectionMetadata.NameLocalizationsEntry
	nil,                                                   // 513: ApplicationRoleConnectionMetadata.DescriptionLocalizationsEntry
	(*anypb.Any)(nil),                                     // 514: google.protobuf.Any
}
var file_output_proto_depIdxs = []int32{
	437, // 0: Activity.CreatedAt:type_name -> Time
	438, // 1: Activity.Timestamps:type_name -> TimeStamps
	136, // 2: Activity.Emoji:type_name -> Emoji
	376, // 3: Activity.Party:type_name -> Party
	46,  // 4: Activity.Assets:type_name -> Assets
	394, // 5: Activity.Secrets:type_name -> Secrets
	450, // 6: Application.Owner:type_name -> User
	407, // 7: Application.Team:type_name -> Team
	45,  // 8: ApplicationAssetsOutput.ass:type_name -> Asset
	450, // 9: ApplicationBotCreateOutput.st:type_name -> User
	506, // 10: ApplicationCommand.NameLocalizations:type_name -> ApplicationCommand.NameLocalizationsEntry
	507, // 11: ApplicationCommand.DescriptionLocalizations:type_name -> ApplicationCommand.DescriptionLocalizationsEntry
	16,  // 12: ApplicationCommand.Options:type_name -> ApplicationCommandOption
	6,   // 13: ApplicationCommandBulkOverwriteInput.commands:type_name -> ApplicationCommand
	6,   // 14: ApplicationCommandBulkOverwriteOutput.createdCommands:type_name -> ApplicationCommand
	6,   // 15: ApplicationCommandCreateInput.cmd:type_name -> ApplicationCommand
	6,   // 16: ApplicationCommandCreateOutput.ccmd:type_name -> ApplicationCommand
	6,   // 17: ApplicationCommandEditInput.cmd:type_name -> ApplicationCommand
	6,   // 18: ApplicationCommandEditOutput.updated:type_name -> ApplicationCommand
	508, // 19: ApplicationCommandOption.NameLocalizations:type_name -> ApplicationCommandOption.NameLocalizationsEntry
	509, // 20: ApplicationCommandOption.DescriptionLocalizations:type_name -> ApplicationCommandOption.DescriptionLocalizationsEntry
	16,  // 21: ApplicationCommandOption.Options:type_name -> ApplicationCommandOption
	17,  // 22: ApplicationCommandOption.Choices:type_name -> ApplicationCommandOptionChoice
	510, // 23: ApplicationCommandOptionChoice.NameLocalizations:type_name -> ApplicationCommandOptionChoice.NameLocalizationsEntry
	514, // 24: ApplicationCommandOptionChoice.Value:type_name -> google.protobuf.Any
	6,   // 25: ApplicationCommandOutput.cmd:type_name -> ApplicationCommand
	161, // 26: ApplicationCommandPermissionsBatchEditInput.permissions:type_name -> GuildApplicationCommandPermissions
	25,  // 27: ApplicationCommandPermissionsEditInput.permissions:type_name -> ApplicationCommandPermissionsList
	19,  // 28: ApplicationCommandPermissionsList.Permissions:type_name -> ApplicationCommandPermissions
	161, // 29: ApplicationCommandPermissionsOutput.permissions:type_name -> GuildApplicationCommandPermissions
	6,   // 30: ApplicationCommandsOutput.cmd:type_name -> ApplicationCommand
	1,   // 31: ApplicationCreateInput.ap:type_name -> Application
	1,   // 32: ApplicationCreateOutput.st:type_name -> Application
	1,   // 33: ApplicationOutput.st:type_name -> Application
	511, // 34: ApplicationRoleConnection.Metadata:type_name -> ApplicationRoleConnection.MetadataEntry
	512, // 35: ApplicationRoleConnectionMetadata.NameLocalizations:type_name -> ApplicationRoleConnectionMetadata.NameLocalizationsEntry
	513, // 36: ApplicationRoleConnectionMetadata.DescriptionLocalizations:type_name -> ApplicationRoleConnectionMetadata.DescriptionLocalizationsEntry
	36,  // 37: ApplicationRoleConnectionMetadataOutput.st:type_name -> ApplicationRoleConnectionMetadata
	36,  // 38: ApplicationRoleConnectionMetadataUpdateInput.metadata:type_name -> ApplicationRoleConnectionMetadata
	36,  // 39: ApplicationRoleConnectionMetadataUpdateOutput.st:type_name -> ApplicationRoleConnectionMetadata
	1,   // 40: ApplicationUpdateInput.ap:type_name -> Application
	1,   // 41: ApplicationUpdateOutput.st:type_name -> Application
	1,   // 42: ApplicationsOutput.st:type_name -> Application
	514, // 43: AuditLogChange.NewValue:type_name -> google.protobuf.Any
	514, // 44: AuditLogChange.OldValue:type_name -> google.protobuf.Any
	47,  // 45: AuditLogEntry.Changes:type_name -> AuditLogChange
	49,  // 46: AuditLogEntry.Options:type_name -> AuditLogOptions
	51,  // 47: AutoModerationAction.Metadata:type_name -> AutoModerationActionMetadata
	63,  // 48: AutoModerationRule.TriggerMetadata:type_name -> AutoModerationTriggerMetadata
	50,  // 49: AutoModerationRule.Actions:type_name -> AutoModerationAction
	52,  // 50: AutoModerationRuleCreateInput.rule:type_name -> AutoModerationRule
	52,  // 51: AutoModerationRuleCreateOutput.st:type_name -> AutoModerationRule
	52,  // 52: AutoModerationRuleEditInput.rule:type_name -> AutoModerationRule
	52,  // 53: AutoModerationRuleEditOutput.st:type_name -> AutoModerationRule
	52,  // 54: AutoModerationRuleOutput.st:type_name -> AutoModerationRule
	52,  // 55: AutoModerationRulesOutput.st:type_name -> AutoModerationRule
	437, // 56: Channel.LastPinTimestamp:type_name -> Time
	450, // 57: Channel.Recipients:type_name -> User
	343, // 58: Channel.Messages:type_name -> Message
	377, // 59: Channel.PermissionOverwrites:type_name -> PermissionOverwrite
	422, // 60: Channel.ThreadMetadata:type_name -> ThreadMetadata
	413, // 61: Channel.Member:type_name -> ThreadMember
	413, // 62: Channel.Members:type_name -> ThreadMember
	146, // 63: Channel.AvailableTags:type_name -> ForumTag
	145, // 64: Channel.DefaultReactionEmoji:type_name -> ForumDefaultReaction
	64,  // 65: ChannelDeleteOutput.st:type_name -> Channel
	377, // 66: ChannelEdit.PermissionOverwrites:type_name -> PermissionOverwrite
	146, // 67: ChannelEdit.AvailableTags:type_name -> ForumTag
	145, // 68: ChannelEdit.DefaultReactionEmoji:type_name -> ForumDefaultReaction
	67,  // 69: ChannelEditComplexInput.data:type_name -> ChannelEdit
	64,  // 70: ChannelEditComplexOutput.st:type_name -> Channel
	67,  // 71: ChannelEditInput.data:type_name -> ChannelEdit
	64,  // 72: ChannelEditOutput.st:type_name -> Channel
	379, // 73: ChannelFileSendInput.r:type_name -> Reader
	343, // 74: ChannelFileSendOutput.field1:type_name -> Message
	379, // 75: ChannelFileSendWithMessageInput.r:type_name -> Reader
	343, // 76: ChannelFileSendWithMessageOutput.field1:type_name -> Message
	331, // 77: ChannelInviteCreateInput.i:type_name -> Invite
	331, // 78: ChannelInviteCreateOutput.st:type_name -> Invite
	331, // 79: ChannelInvitesOutput.st:type_name -> Invite
	343, // 80: ChannelMessageCrosspostOutput.st:type_name -> Message
	349, // 81: ChannelMessageEditComplexInput.m:type_name -> MessageEdit
	343, // 82: ChannelMessageEditComplexOutput.st:type_name -> Message
	350, // 83: ChannelMessageEditEmbedInput.embed:type_name -> MessageEmbed
	343, // 84: ChannelMessageEditEmbedOutput.field1:type_name -> Message
	350, // 85: ChannelMessageEditEmbedsInput.embeds:type_name -> MessageEmbed
	343, // 86: ChannelMessageEditEmbedsOutput.field1:type_name -> Message
	343, // 87: ChannelMessageEditOutput.field1:type_name -> Message
	343, // 88: ChannelMessageOutput.st:type_name -> Message
	371, // 89: ChannelMessageSendComplexInput.data:type_name -> MessageSend
	343, // 90: ChannelMessageSendComplexOutput.st:type_name -> Message
	350, // 91: ChannelMessageSendEmbedInput.embed:type_name -> MessageEmbed
	343, // 92: ChannelMessageSendEmbedOutput.field1:type_name -> Message
	350, // 93: ChannelMessageSendEmbedReplyInput.embed:type_name -> MessageEmbed
	370, // 94: ChannelMessageSendEmbedReplyInput.reference:type_name -> MessageReference
	343, // 95: ChannelMessageSendEmbedReplyOutput.field1:type_name -> Message
	350, // 96: ChannelMessageSendEmbedsInput.embeds:type_name -> MessageEmbed
	343, // 97: ChannelMessageSendEmbedsOutput.field1:type_name -> Message
	350, // 98: ChannelMessageSendEmbedsReplyInput.embeds:type_name -> MessageEmbed
	370, // 99: ChannelMessageSendEmbedsReplyInput.reference:type_name -> MessageReference
	343, // 100: ChannelMessageSendEmbedsReplyOutput.field1:type_name -> Message
	343, // 101: ChannelMessageSendOutput.field1:type_name -> Message
	370, // 102: ChannelMessageSendReplyInput.reference:type_name -> MessageReference
	343, // 103: ChannelMessageSendReplyOutput.field1:type_name -> Message
	343, // 104: ChannelMessageSendTTSOutput.field1:type_name -> Message
	343, // 105: ChannelMessagesOutput.st:type_name -> Message
	343, // 106: ChannelMessagesPinnedOutput.st:type_name -> Message
	76,  // 107: ChannelNewsFollowOutput.st:type_name -> ChannelFollow
	64,  // 108: ChannelOutput.st:type_name -> Channel
	479, // 109: ChannelWebhooksOutput.st:type_name -> Webhook
	450, // 110: Emoji.User:type_name -> User
	379, // 111: File.Reader:type_name -> Reader
	319, // 112: FollowupMessageCreateInput.interaction:type_name -> Interaction
	501, // 113: FollowupMessageCreateInput.data:type_name -> WebhookParams
	343, // 114: FollowupMessageCreateOutput.field1:type_name -> Message
	319, // 115: FollowupMessageDeleteInput.interaction:type_name -> Interaction
	319, // 116: FollowupMessageEditInput.interaction:type_name -> Interaction
	486, // 117: FollowupMessageEditInput.data:type_name -> WebhookEdit
	343, // 118: FollowupMessageEditOutput.field1:type_name -> Message
	423, // 119: ForumThreadStartComplexInput.threadData:type_name -> ThreadStart
	371, // 120: ForumThreadStartComplexInput.messageData:type_name -> MessageSend
	64,  // 121: ForumThreadStartComplexOutput.th:type_name -> Channel
	350, // 122: ForumThreadStartEmbedInput.embed:type_name -> MessageEmbed
	64,  // 123: ForumThreadStartEmbedOutput.th:type_name -> Channel
	350, // 124: ForumThreadStartEmbedsInput.embeds:type_name -> MessageEmbed
	64,  // 125: ForumThreadStartEmbedsOutput.th:type_name -> Channel
	64,  // 126: ForumThreadStartOutput.th:type_name -> Channel
	157, // 127: GatewayBotOutput.st:type_name -> GatewayBotResponse
	395, // 128: GatewayBotResponse.SessionStartLimit:type_name -> SessionInformation
	437, // 129: Guild.JoinedAt:type_name -> Time
	392, // 130: Guild.Roles:type_name -> Role
	136, // 131: Guild.Emojis:type_name -> Emoji
	406, // 132: Guild.Stickers:type_name -> Sticker
	342, // 133: Guild.Members:type_name -> Member
	378, // 134: Guild.Presences:type_name -> Presence
	64,  // 135: Guild.Channels:type_name -> Channel
	64,  // 136: Guild.Threads:type_name -> Channel
	478, // 137: Guild.VoiceStates:type_name -> VoiceState
	396, // 138: Guild.StageInstances:type_name -> StageInstance
	19,  // 139: GuildApplicationCommandPermissions.Permissions:type_name -> ApplicationCommandPermissions
	161, // 140: GuildApplicationCommandsPermissionsOutput.permissions:type_name -> GuildApplicationCommandPermissions
	479, // 141: GuildAuditLog.Webhooks:type_name -> Webhook
	450, // 142: GuildAuditLog.Users:type_name -> User
	48,  // 143: GuildAuditLog.AuditLogEntries:type_name -> AuditLogEntry
	317, // 144: GuildAuditLog.Integrations:type_name -> Integration
	164, // 145: GuildAuditLogOutput.st:type_name -> GuildAuditLog
	450, // 146: GuildBan.User:type_name -> User
	167, // 147: GuildBanOutput.st:type_name -> GuildBan
	167, // 148: GuildBansOutput.st:type_name -> GuildBan
	180, // 149: GuildChannelCreateComplexInput.data:type_name -> GuildChannelCreateData
	64,  // 150: GuildChannelCreateComplexOutput.st:type_name -> Channel
	377, // 151: GuildChannelCreateData.PermissionOverwrites:type_name -> PermissionOverwrite
	64,  // 152: GuildChannelCreateOutput.st:type_name -> Channel
	64,  // 153: GuildChannelsOutput.st:type_name -> Channel
	64,  // 154: GuildChannelsReorderInput.channels:type_name -> Channel
	160, // 155: GuildCreateOutput.st:type_name -> Guild
	160, // 156: GuildCreateWithTemplateOutput.st:type_name -> Guild
	160, // 157: GuildDeleteOutput.st:type_name -> Guild
	258, // 158: GuildEditInput.g:type_name -> GuildParams
	160, // 159: GuildEditOutput.st:type_name -> Guild
	195, // 160: GuildEmbedEditInput.data:type_name -> GuildEmbed
	195, // 161: GuildEmbedOutput.st:type_name -> GuildEmbed
	137, // 162: GuildEmojiCreateInput.data:type_name -> EmojiParams
	136, // 163: GuildEmojiCreateOutput.emoji:type_name -> Emoji
	137, // 164: GuildEmojiEditInput.data:type_name -> EmojiParams
	136, // 165: GuildEmojiEditOutput.emoji:type_name -> Emoji
	136, // 166: GuildEmojiOutput.emoji:type_name -> Emoji
	136, // 167: GuildEmojisOutput.emoji:type_name -> Emoji
	316, // 168: GuildIconOutput.img:type_name -> Image
	317, // 169: GuildIntegrationsOutput.st:type_name -> Integration
	331, // 170: GuildInvitesOutput.st:type_name -> Invite
	227, // 171: GuildMemberAddInput.data:type_name -> GuildMemberAddParams
	246, // 172: GuildMemberEditComplexInput.data:type_name -> GuildMemberParams
	342, // 173: GuildMemberEditComplexOutput.st:type_name -> Member
	246, // 174: GuildMemberEditInput.data:type_name -> GuildMemberParams
	342, // 175: GuildMemberEditOutput.st:type_name -> Member
	342, // 176: GuildMemberOutput.st:type_name -> Member
	437, // 177: GuildMemberParams.CommunicationDisabledUntil:type_name -> Time
	437, // 178: GuildMemberTimeoutInput.until:type_name -> Time
	342, // 179: GuildMembersOutput.st:type_name -> Member
	342, // 180: GuildMembersSearchOutput.st:type_name -> Member
	160, // 181: GuildOutput.st:type_name -> Guild
	136, // 182: GuildPreview.Emojis:type_name -> Emoji
	259, // 183: GuildPreviewOutput.st:type_name -> GuildPreview
	393, // 184: GuildRoleCreateInput.data:type_name -> RoleParams
	392, // 185: GuildRoleCreateOutput.st:type_name -> Role
	393, // 186: GuildRoleEditInput.data:type_name -> RoleParams
	392, // 187: GuildRoleEditOutput.st:type_name -> Role
	392, // 188: GuildRoleReorderInput.roles:type_name -> Role
	392, // 189: GuildRoleReorderOutput.st:type_name -> Role
	392, // 190: GuildRolesOutput.st:type_name -> Role
	437, // 191: GuildScheduledEvent.ScheduledStartTime:type_name -> Time
	437, // 192: GuildScheduledEvent.ScheduledEndTime:type_name -> Time
	283, // 193: GuildScheduledEvent.EntityMetadata:type_name -> GuildScheduledEventEntityMetadata
	450, // 194: GuildScheduledEvent.Creator:type_name -> User
	286, // 195: GuildScheduledEventCreateInput.event:type_name -> GuildScheduledEventParams
	276, // 196: GuildScheduledEventCreateOutput.st:type_name -> GuildScheduledEvent
	286, // 197: GuildScheduledEventEditInput.event:type_name -> GuildScheduledEventParams
	276, // 198: GuildScheduledEventEditOutput.st:type_name -> GuildScheduledEvent
	276, // 199: GuildScheduledEventOutput.st:type_name -> GuildScheduledEvent
	437, // 200: GuildScheduledEventParams.ScheduledStartTime:type_name -> Time
	437, // 201: GuildScheduledEventParams.ScheduledEndTime:type_name -> Time
	283, // 202: GuildScheduledEventParams.EntityMetadata:type_name -> GuildScheduledEventEntityMetadata
	450, // 203: GuildScheduledEventUser.User:type_name -> User
	342, // 204: GuildScheduledEventUser.Member:type_name -> Member
	287, // 205: GuildScheduledEventUsersOutput.st:type_name -> GuildScheduledEventUser
	276, // 206: GuildScheduledEventsOutput.st:type_name -> GuildScheduledEvent
	316, // 207: GuildSplashOutput.img:type_name -> Image
	450, // 208: GuildTemplate.Creator:type_name -> User
	437, // 209: GuildTemplate.CreatedAt:type_name -> Time
	437, // 210: GuildTemplate.UpdatedAt:type_name -> Time
	160, // 211: GuildTemplate.SerializedSourceGuild:type_name -> Guild
	303, // 212: GuildTemplateCreateInput.data:type_name -> GuildTemplateParams
	294, // 213: GuildTemplateCreateOutput.st:type_name -> GuildTemplate
	303, // 214: GuildTemplateEditInput.data:type_name -> GuildTemplateParams
	294, // 215: GuildTemplateEditOutput.st:type_name -> GuildTemplate
	294, // 216: GuildTemplateOutput.st:type_name -> GuildTemplate
	294, // 217: GuildTemplatesOutput.st:type_name -> GuildTemplate
	432, // 218: GuildThreadsActiveOutput.threads:type_name -> ThreadsList
	479, // 219: GuildWebhooksOutput.st:type_name -> Webhook
	160, // 220: GuildWithCountsOutput.st:type_name -> Guild
	450, // 221: Integration.User:type_name -> User
	318, // 222: Integration.Account:type_name -> IntegrationAccount
	437, // 223: Integration.SyncedAt:type_name -> Time
	320, // 224: Interaction.Data:type_name -> InteractionData
	343, // 225: Interaction.Message:type_name -> Message
	342, // 226: Interaction.Member:type_name -> Member
	450, // 227: Interaction.User:type_name -> User
	319, // 228: InteractionRespondInput.interaction:type_name -> Interaction
	323, // 229: InteractionRespondInput.resp:type_name -> InteractionResponse
	324, // 230: InteractionResponse.Data:type_name -> InteractionResponseData
	348, // 231: InteractionResponseData.Components:type_name -> MessageComponent
	350, // 232: InteractionResponseData.Embeds:type_name -> MessageEmbed
	345, // 233: InteractionResponseData.AllowedMentions:type_name -> MessageAllowedMentions
	138, // 234: InteractionResponseData.Files:type_name -> File
	17,  // 235: InteractionResponseData.Choices:type_name -> ApplicationCommandOptionChoice
	319, // 236: InteractionResponseDeleteInput.interaction:type_name -> Interaction
	319, // 237: InteractionResponseEditInput.interaction:type_name -> Interaction
	486, // 238: InteractionResponseEditInput.newresp:type_name -> WebhookEdit
	343, // 239: InteractionResponseEditOutput.field1:type_name -> Message
	319, // 240: InteractionResponseInput.interaction:type_name -> Interaction
	343, // 241: InteractionResponseOutput.field1:type_name -> Message
	160, // 242: Invite.Guild:type_name -> Guild
	64,  // 243: Invite.Channel:type_name -> Channel
	450, // 244: Invite.Inviter:type_name -> User
	437, // 245: Invite.CreatedAt:type_name -> Time
	450, // 246: Invite.TargetUser:type_name -> User
	1,   // 247: Invite.TargetApplication:type_name -> Application
	437, // 248: Invite.ExpiresAt:type_name -> Time
	331, // 249: InviteAcceptOutput.st:type_name -> Invite
	331, // 250: InviteComplexOutput.st:type_name -> Invite
	331, // 251: InviteDeleteOutput.st:type_name -> Invite
	331, // 252: InviteOutput.st:type_name -> Invite
	331, // 253: InviteWithCountsOutput.st:type_name -> Invite
	437, // 254: Member.JoinedAt:type_name -> Time
	450, // 255: Member.User:type_name -> User
	437, // 256: Member.PremiumSince:type_name -> Time
	437, // 257: Member.CommunicationDisabledUntil:type_name -> Time
	437, // 258: Message.Timestamp:type_name -> Time
	437, // 259: Message.EditedTimestamp:type_name -> Time
	450, // 260: Message.Author:type_name -> User
	347, // 261: Message.Attachments:type_name -> MessageAttachment
	348, // 262: Message.Components:type_name -> MessageComponent
	350, // 263: Message.Embeds:type_name -> MessageEmbed
	450, // 264: Message.Mentions:type_name -> User
	363, // 265: Message.Reactions:type_name -> MessageReactions
	342, // 266: Message.Member:type_name -> Member
	64,  // 267: Message.MentionChannels:type_name -> Channel
	344, // 268: Message.Activity:type_name -> MessageActivity
	346, // 269: Message.Application:type_name -> MessageApplication
	370, // 270: Message.MessageReference:type_name -> MessageReference
	343, // 271: Message.ReferencedMessage:type_name -> Message
	358, // 272: Message.Interaction:type_name -> MessageInteraction
	64,  // 273: Message.Thread:type_name -> Channel
	406, // 274: Message.StickerItems:type_name -> Sticker
	348, // 275: MessageEdit.Components:type_name -> MessageComponent
	350, // 276: MessageEdit.Embeds:type_name -> MessageEmbed
	345, // 277: MessageEdit.AllowedMentions:type_name -> MessageAllowedMentions
	138, // 278: MessageEdit.Files:type_name -> File
	347, // 279: MessageEdit.Attachments:type_name -> MessageAttachment
	350, // 280: MessageEdit.Embed:type_name -> MessageEmbed
	353, // 281: MessageEmbed.Footer:type_name -> MessageEmbedFooter
	354, // 282: MessageEmbed.Image:type_name -> MessageEmbedImage
	356, // 283: MessageEmbed.Thumbnail:type_name -> MessageEmbedThumbnail
	357, // 284: MessageEmbed.Video:type_name -> MessageEmbedVideo
	355, // 285: MessageEmbed.Provider:type_name -> MessageEmbedProvider
	351, // 286: MessageEmbed.Author:type_name -> MessageEmbedAuthor
	352, // 287: MessageEmbed.Fields:type_name -> MessageEmbedField
	450, // 288: MessageInteraction.User:type_name -> User
	342, // 289: MessageInteraction.Member:type_name -> Member
	136, // 290: MessageReactions.Emoji:type_name -> Emoji
	450, // 291: MessageReactionsOutput.st:type_name -> User
	350, // 292: MessageSend.Embeds:type_name -> MessageEmbed
	348, // 293: MessageSend.Components:type_name -> MessageComponent
	138, // 294: MessageSend.Files:type_name -> File
	345, // 295: MessageSend.AllowedMentions:type_name -> MessageAllowedMentions
	370, // 296: MessageSend.Reference:type_name -> MessageReference
	138, // 297: MessageSend.File:type_name -> File
	350, // 298: MessageSend.Embed:type_name -> MessageEmbed
	423, // 299: MessageThreadStartComplexInput.data:type_name -> ThreadStart
	64,  // 300: MessageThreadStartComplexOutput.ch:type_name -> Channel
	64,  // 301: MessageThreadStartOutput.ch:type_name -> Channel
	450, // 302: Presence.User:type_name -> User
	0,   // 303: Presence.Activities:type_name -> Activity
	135, // 304: Presence.ClientStatus:type_name -> ClientStatus
	514, // 305: RequestInput.data:type_name -> google.protobuf.Any
	514, // 306: RequestWithBucketIDInput.data:type_name -> google.protobuf.Any
	405, // 307: StageInstanceCreateInput.data:type_name -> StageInstanceParams
	396, // 308: StageInstanceCreateOutput.si:type_name -> StageInstance
	405, // 309: StageInstanceEditInput.data:type_name -> StageInstanceParams
	396, // 310: StageInstanceEditOutput.si:type_name -> StageInstance
	396, // 311: StageInstanceOutput.si:type_name -> StageInstance
	450, // 312: Sticker.User:type_name -> User
	408, // 313: Team.Members:type_name -> TeamMember
	450, // 314: TeamMember.User:type_name -> User
	437, // 315: ThreadMember.JoinTimestamp:type_name -> Time
	413, // 316: ThreadMemberOutput.member:type_name -> ThreadMember
	413, // 317: ThreadMembersOutput.members:type_name -> ThreadMember
	437, // 318: ThreadMetadata.ArchiveTimestamp:type_name -> Time
	423, // 319: ThreadStartComplexInput.data:type_name -> ThreadStart
	64,  // 320: ThreadStartComplexOutput.ch:type_name -> Channel
	64,  // 321: ThreadStartOutput.ch:type_name -> Channel
	432, // 322: ThreadsActiveOutput.threads:type_name -> ThreadsList
	437, // 323: ThreadsArchivedInput.before:type_name -> Time
	432, // 324: ThreadsArchivedOutput.threads:type_name -> ThreadsList
	64,  // 325: ThreadsList.Threads:type_name -> Channel
	413, // 326: ThreadsList.Members:type_name -> ThreadMember
	437, // 327: ThreadsPrivateArchivedInput.before:type_name -> Time
	432, // 328: ThreadsPrivateArchivedOutput.threads:type_name -> ThreadsList
	437, // 329: ThreadsPrivateJoinedArchivedInput.before:type_name -> Time
	432, // 330: ThreadsPrivateJoinedArchivedOutput.threads:type_name -> ThreadsList
	445, // 331: UpdateStatusComplexInput.usd:type_name -> UpdateStatusData
	0,   // 332: UpdateStatusData.Activities:type_name -> Activity
	35,  // 333: UserApplicationRoleConnectionOutput.st:type_name -> ApplicationRoleConnection
	35,  // 334: UserApplicationRoleConnectionUpdateInput.rconn:type_name -> ApplicationRoleConnection
	35,  // 335: UserApplicationRoleConnectionUpdateOutput.st:type_name -> ApplicationRoleConnection
	450, // 336: UserAvatarDecodeInput.u:type_name -> User
	316, // 337: UserAvatarDecodeOutput.img:type_name -> Image
	316, // 338: UserAvatarOutput.img:type_name -> Image
	64,  // 339: UserChannelCreateOutput.st:type_name -> Channel
	317, // 340: UserConnection.Integrations:type_name -> Integration
	463, // 341: UserConnectionsOutput.conn:type_name -> UserConnection
	342, // 342: UserGuildMemberOutput.st:type_name -> Member
	466, // 343: UserGuildsOutput.st:type_name -> UserGuild
	450, // 344: UserOutput.st:type_name -> User
	450, // 345: UserUpdateOutput.st:type_name -> User
	475, // 346: VoiceRegionsOutput.st:type_name -> VoiceRegion
	342, // 347: VoiceState.Member:type_name -> Member
	437, // 348: VoiceState.RequestToSpeakTimestamp:type_name -> Time
	450, // 349: Webhook.User:type_name -> User
	479, // 350: WebhookCreateOutput.st:type_name -> Webhook
	479, // 351: WebhookDeleteWithTokenOutput.st:type_name -> Webhook
	348, // 352: WebhookEdit.Components:type_name -> MessageComponent
	350, // 353: WebhookEdit.Embeds:type_name -> MessageEmbed
	138, // 354: WebhookEdit.Files:type_name -> File
	345, // 355: WebhookEdit.AllowedMentions:type_name -> MessageAllowedMentions
	392, // 356: WebhookEditOutput.st:type_name -> Role
	392, // 357: WebhookEditWithTokenOutput.st:type_name -> Role
	501, // 358: WebhookExecuteInput.data:type_name -> WebhookParams
	343, // 359: WebhookExecuteOutput.st:type_name -> Message
	486, // 360: WebhookMessageEditInput.data:type_name -> WebhookEdit
	343, // 361: WebhookMessageEditOutput.st:type_name -> Message
	343, // 362: WebhookMessageOutput.message:type_name -> Message
	479, // 363: WebhookOutput.st:type_name -> Webhook
	138, // 364: WebhookParams.Files:type_name -> File
	348, // 365: WebhookParams.Components:type_name -> MessageComponent
	350, // 366: WebhookParams.Embeds:type_name -> MessageEmbed
	345, // 367: WebhookParams.AllowedMentions:type_name -> MessageAllowedMentions
	501, // 368: WebhookThreadExecuteInput.data:type_name -> WebhookParams
	343, // 369: WebhookThreadExecuteOutput.st:type_name -> Message
	479, // 370: WebhookWithTokenOutput.st:type_name -> Webhook
	33,  // 371: Gayway.Application:input_type -> ApplicationInput
	43,  // 372: Gayway.Applications:input_type -> ApplicationsInput
	29,  // 373: Gayway.ApplicationCreate:input_type -> ApplicationCreateInput
	41,  // 374: Gayway.ApplicationUpdate:input_type -> ApplicationUpdateInput
	31,  // 375: Gayway.ApplicationDelete:input_type -> ApplicationDeleteInput
	2,   // 376: Gayway.ApplicationAssets:input_type -> ApplicationAssetsInput
	4,   // 377: Gayway.ApplicationBotCreate:input_type -> ApplicationBotCreateInput
	388, // 378: Gayway.Request:input_type -> RequestInput
	390, // 379: Gayway.RequestWithBucketID:input_type -> RequestWithBucketIDInput
	471, // 380: Gayway.User:input_type -> UserInput
	457, // 381: Gayway.UserAvatar:input_type -> UserAvatarInput
	455, // 382: Gayway.UserAvatarDecode:input_type -> UserAvatarDecodeInput
	473, // 383: Gayway.UserUpdate:input_type -> UserUpdateInput
	464, // 384: Gayway.UserConnections:input_type -> UserConnectionsInput
	459, // 385: Gayway.UserChannelCreate:input_type -> UserChannelCreateInput
	467, // 386: Gayway.UserGuildMember:input_type -> UserGuildMemberInput
	469, // 387: Gayway.UserGuilds:input_type -> UserGuildsInput
	461, // 388: Gayway.UserChannelPermissions:input_type -> UserChannelPermissionsInput
	212, // 389: Gayway.Guild:input_type -> GuildInput
	312, // 390: Gayway.GuildWithCounts:input_type -> GuildWithCountsInput
	260, // 391: Gayway.GuildPreview:input_type -> GuildPreviewInput
	187, // 392: Gayway.GuildCreate:input_type -> GuildCreateInput
	193, // 393: Gayway.GuildEdit:input_type -> GuildEditInput
	191, // 394: Gayway.GuildDelete:input_type -> GuildDeleteInput
	223, // 395: Gayway.GuildLeave:input_type -> GuildLeaveInput
	176, // 396: Gayway.GuildBans:input_type -> GuildBansInput
	168, // 397: Gayway.GuildBanCreate:input_type -> GuildBanCreateInput
	174, // 398: Gayway.GuildBan:input_type -> GuildBanInput
	170, // 399: Gayway.GuildBanCreateWithReason:input_type -> GuildBanCreateWithReasonInput
	172, // 400: Gayway.GuildBanDelete:input_type -> GuildBanDeleteInput
	253, // 401: Gayway.GuildMembers:input_type -> GuildMembersInput
	255, // 402: Gayway.GuildMembersSearch:input_type -> GuildMembersSearchInput
	238, // 403: Gayway.GuildMember:input_type -> GuildMemberInput
	225, // 404: Gayway.GuildMemberAdd:input_type -> GuildMemberAddInput
	230, // 405: Gayway.GuildMemberDelete:input_type -> GuildMemberDeleteInput
	232, // 406: Gayway.GuildMemberDeleteWithReason:input_type -> GuildMemberDeleteWithReasonInput
	236, // 407: Gayway.GuildMemberEdit:input_type -> GuildMemberEditInput
	234, // 408: Gayway.GuildMemberEditComplex:input_type -> GuildMemberEditComplexInput
	239, // 409: Gayway.GuildMemberMove:input_type -> GuildMemberMoveInput
	243, // 410: Gayway.GuildMemberNickname:input_type -> GuildMemberNicknameInput
	241, // 411: Gayway.GuildMemberMute:input_type -> GuildMemberMuteInput
	251, // 412: Gayway.GuildMemberTimeout:input_type -> GuildMemberTimeoutInput
	228, // 413: Gayway.GuildMemberDeafen:input_type -> GuildMemberDeafenInput
	247, // 414: Gayway.GuildMemberRoleAdd:input_type -> GuildMemberRoleAddInput
	249, // 415: Gayway.GuildMemberRoleRemove:input_type -> GuildMemberRoleRemoveInput
	183, // 416: Gayway.GuildChannels:input_type -> GuildChannelsInput
	178, // 417: Gayway.GuildChannelCreateComplex:input_type -> GuildChannelCreateComplexInput
	181, // 418: Gayway.GuildChannelCreate:input_type -> GuildChannelCreateInput
	185, // 419: Gayway.GuildChannelsReorder:input_type -> GuildChannelsReorderInput
	221, // 420: Gayway.GuildInvites:input_type -> GuildInvitesInput
	274, // 421: Gayway.GuildRoles:input_type -> GuildRolesInput
	266, // 422: Gayway.GuildRoleCreate:input_type -> GuildRoleCreateInput
	270, // 423: Gayway.GuildRoleEdit:input_type -> GuildRoleEditInput
	272, // 424: Gayway.GuildRoleReorder:input_type -> GuildRoleReorderInput
	268, // 425: Gayway.GuildRoleDelete:input_type -> GuildRoleDeleteInput
	262, // 426: Gayway.GuildPruneCount:input_type -> GuildPruneCountInput
	264, // 427: Gayway.GuildPrune:input_type -> GuildPruneInput
	219, // 428: Gayway.GuildIntegrations:input_type -> GuildIntegrationsInput
	213, // 429: Gayway.GuildIntegrationCreate:input_type -> GuildIntegrationCreateInput
	217, // 430: Gayway.GuildIntegrationEdit:input_type -> GuildIntegrationEditInput
	215, // 431: Gayway.GuildIntegrationDelete:input_type -> GuildIntegrationDeleteInput
	210, // 432: Gayway.GuildIcon:input_type -> GuildIconInput
	292, // 433: Gayway.GuildSplash:input_type -> GuildSplashInput
	198, // 434: Gayway.GuildEmbed:input_type -> GuildEmbedInput
	196, // 435: Gayway.GuildEmbedEdit:input_type -> GuildEmbedEditInput
	165, // 436: Gayway.GuildAuditLog:input_type -> GuildAuditLogInput
	208, // 437: Gayway.GuildEmojis:input_type -> GuildEmojisInput
	206, // 438: Gayway.GuildEmoji:input_type -> GuildEmojiInput
	200, // 439: Gayway.GuildEmojiCreate:input_type -> GuildEmojiCreateInput
	204, // 440: Gayway.GuildEmojiEdit:input_type -> GuildEmojiEditInput
	202, // 441: Gayway.GuildEmojiDelete:input_type -> GuildEmojiDeleteInput
	301, // 442: Gayway.GuildTemplate:input_type -> GuildTemplateInput
	189, // 443: Gayway.GuildCreateWithTemplate:input_type -> GuildCreateWithTemplateInput
	306, // 444: Gayway.GuildTemplates:input_type -> GuildTemplatesInput
	295, // 445: Gayway.GuildTemplateCreate:input_type -> GuildTemplateCreateInput
	304, // 446: Gayway.GuildTemplateSync:input_type -> GuildTemplateSyncInput
	299, // 447: Gayway.GuildTemplateEdit:input_type -> GuildTemplateEditInput
	297, // 448: Gayway.GuildTemplateDelete:input_type -> GuildTemplateDeleteInput
	77,  // 449: Gayway.Channel:input_type -> ChannelInput
	70,  // 450: Gayway.ChannelEdit:input_type -> ChannelEditInput
	68,  // 451: Gayway.ChannelEditComplex:input_type -> ChannelEditComplexInput
	65,  // 452: Gayway.ChannelDelete:input_type -> ChannelDeleteInput
	129, // 453: Gayway.ChannelTyping:input_type -> ChannelTypingInput
	118, // 454: Gayway.ChannelMessages:input_type -> ChannelMessagesInput
	94,  // 455: Gayway.ChannelMessage:input_type -> ChannelMessageInput
	108, // 456: Gayway.ChannelMessageSend:input_type -> ChannelMessageSendInput
	98,  // 457: Gayway.ChannelMessageSendComplex:input_type -> ChannelMessageSendComplexInput
	112, // 458: Gayway.ChannelMessageSendTTS:input_type -> ChannelMessageSendTTSInput
	100, // 459: Gayway.ChannelMessageSendEmbed:input_type -> ChannelMessageSendEmbedInput
	104, // 460: Gayway.ChannelMessageSendEmbeds:input_type -> ChannelMessageSendEmbedsInput
	110, // 461: Gayway.ChannelMessageSendReply:input_type -> ChannelMessageSendReplyInput
	102, // 462: Gayway.ChannelMessageSendEmbedReply:input_type -> ChannelMessageSendEmbedReplyInput
	106, // 463: Gayway.ChannelMessageSendEmbedsReply:input_type -> ChannelMessageSendEmbedsReplyInput
	92,  // 464: Gayway.ChannelMessageEdit:input_type -> ChannelMessageEditInput
	86,  // 465: Gayway.ChannelMessageEditComplex:input_type -> ChannelMessageEditComplexInput
	88,  // 466: Gayway.ChannelMessageEditEmbed:input_type -> ChannelMessageEditEmbedInput
	90,  // 467: Gayway.ChannelMessageEditEmbeds:input_type -> ChannelMessageEditEmbedsInput
	84,  // 468: Gayway.ChannelMessageDelete:input_type -> ChannelMessageDeleteInput
	116, // 469: Gayway.ChannelMessagesBulkDelete:input_type -> ChannelMessagesBulkDeleteInput
	96,  // 470: Gayway.ChannelMessagePin:input_type -> ChannelMessagePinInput
	114, // 471: Gayway.ChannelMessageUnpin:input_type -> ChannelMessageUnpinInput
	120, // 472: Gayway.ChannelMessagesPinned:input_type -> ChannelMessagesPinnedInput
	72,  // 473: Gayway.ChannelFileSend:input_type -> ChannelFileSendInput
	74,  // 474: Gayway.ChannelFileSendWithMessage:input_type -> ChannelFileSendWithMessageInput
	80,  // 475: Gayway.ChannelInvites:input_type -> ChannelInvitesInput
	78,  // 476: Gayway.ChannelInviteCreate:input_type -> ChannelInviteCreateInput
	127, // 477: Gayway.ChannelPermissionSet:input_type -> ChannelPermissionSetInput
	125, // 478: Gayway.ChannelPermissionDelete:input_type -> ChannelPermissionDeleteInput
	82,  // 479: Gayway.ChannelMessageCrosspost:input_type -> ChannelMessageCrosspostInput
	122, // 480: Gayway.ChannelNewsFollow:input_type -> ChannelNewsFollowInput
	338, // 481: Gayway.Invite:input_type -> InviteInput
	340, // 482: Gayway.InviteWithCounts:input_type -> InviteWithCountsInput
	334, // 483: Gayway.InviteComplex:input_type -> InviteComplexInput
	336, // 484: Gayway.InviteDelete:input_type -> InviteDeleteInput
	332, // 485: Gayway.InviteAccept:input_type -> InviteAcceptInput
	476, // 486: Gayway.VoiceRegions:input_type -> VoiceRegionsInput
	158, // 487: Gayway.Gateway:input_type -> GatewayInput
	155, // 488: Gayway.GatewayBot:input_type -> GatewayBotInput
	480, // 489: Gayway.WebhookCreate:input_type -> WebhookCreateInput
	133, // 490: Gayway.ChannelWebhooks:input_type -> ChannelWebhooksInput
	310, // 491: Gayway.GuildWebhooks:input_type -> GuildWebhooksInput
	493, // 492: Gayway.Webhook:input_type -> WebhookInput
	504, // 493: Gayway.WebhookWithToken:input_type -> WebhookWithTokenInput
	487, // 494: Gayway.WebhookEdit:input_type -> WebhookEditInput
	489, // 495: Gayway.WebhookEditWithToken:input_type -> WebhookEditWithTokenInput
	482, // 496: Gayway.WebhookDelete:input_type -> WebhookDeleteInput
	484, // 497: Gayway.WebhookDeleteWithToken:input_type -> WebhookDeleteWithTokenInput
	491, // 498: Gayway.WebhookExecute:input_type -> WebhookExecuteInput
	502, // 499: Gayway.WebhookThreadExecute:input_type -> WebhookThreadExecuteInput
	498, // 500: Gayway.WebhookMessage:input_type -> WebhookMessageInput
	496, // 501: Gayway.WebhookMessageEdit:input_type -> WebhookMessageEditInput
	494, // 502: Gayway.WebhookMessageDelete:input_type -> WebhookMessageDeleteInput
	359, // 503: Gayway.MessageReactionAdd:input_type -> MessageReactionAddInput
	361, // 504: Gayway.MessageReactionRemove:input_type -> MessageReactionRemoveInput
	366, // 505: Gayway.MessageReactionsRemoveAll:input_type -> MessageReactionsRemoveAllInput
	368, // 506: Gayway.MessageReactionsRemoveEmoji:input_type -> MessageReactionsRemoveEmojiInput
	364, // 507: Gayway.MessageReactions:input_type -> MessageReactionsInput
	372, // 508: Gayway.MessageThreadStartComplex:input_type -> MessageThreadStartComplexInput
	374, // 509: Gayway.MessageThreadStart:input_type -> MessageThreadStartInput
	424, // 510: Gayway.ThreadStartComplex:input_type -> ThreadStartComplexInput
	426, // 511: Gayway.ThreadStart:input_type -> ThreadStartInput
	147, // 512: Gayway.ForumThreadStartComplex:input_type -> ForumThreadStartComplexInput
	153, // 513: Gayway.ForumThreadStart:input_type -> ForumThreadStartInput
	149, // 514: Gayway.ForumThreadStartEmbed:input_type -> ForumThreadStartEmbedInput
	151, // 515: Gayway.ForumThreadStartEmbeds:input_type -> ForumThreadStartEmbedsInput
	409, // 516: Gayway.ThreadJoin:input_type -> ThreadJoinInput
	411, // 517: Gayway.ThreadLeave:input_type -> ThreadLeaveInput
	414, // 518: Gayway.ThreadMemberAdd:input_type -> ThreadMemberAddInput
	418, // 519: Gayway.ThreadMemberRemove:input_type -> ThreadMemberRemoveInput
	416, // 520: Gayway.ThreadMember:input_type -> ThreadMemberInput
	420, // 521: Gayway.ThreadMembers:input_type -> ThreadMembersInput
	428, // 522: Gayway.ThreadsActive:input_type -> ThreadsActiveInput
	308, // 523: Gayway.GuildThreadsActive:input_type -> GuildThreadsActiveInput
	430, // 524: Gayway.ThreadsArchived:input_type -> ThreadsArchivedInput
	433, // 525: Gayway.ThreadsPrivateArchived:input_type -> ThreadsPrivateArchivedInput
	435, // 526: Gayway.ThreadsPrivateJoinedArchived:input_type -> ThreadsPrivateJoinedArchivedInput
	9,   // 527: Gayway.ApplicationCommandCreate:input_type -> ApplicationCommandCreateInput
	13,  // 528: Gayway.ApplicationCommandEdit:input_type -> ApplicationCommandEditInput
	7,   // 529: Gayway.ApplicationCommandBulkOverwrite:input_type -> ApplicationCommandBulkOverwriteInput
	11,  // 530: Gayway.ApplicationCommandDelete:input_type -> ApplicationCommandDeleteInput
	15,  // 531: Gayway.ApplicationCommand:input_type -> ApplicationCommandInput
	27,  // 532: Gayway.ApplicationCommands:input_type -> ApplicationCommandsInput
	162, // 533: Gayway.GuildApplicationCommandsPermissions:input_type -> GuildApplicationCommandsPermissionsInput
	24,  // 534: Gayway.ApplicationCommandPermissions:input_type -> ApplicationCommandPermissionsInput
	22,  // 535: Gayway.ApplicationCommandPermissionsEdit:input_type -> ApplicationCommandPermissionsEditInput
	20,  // 536: Gayway.ApplicationCommandPermissionsBatchEdit:input_type -> ApplicationCommandPermissionsBatchEditInput
	321, // 537: Gayway.InteractionRespond:input_type -> InteractionRespondInput
	329, // 538: Gayway.InteractionResponse:input_type -> InteractionResponseInput
	327, // 539: Gayway.InteractionResponseEdit:input_type -> InteractionResponseEditInput
	325, // 540: Gayway.InteractionResponseDelete:input_type -> InteractionResponseDeleteInput
	139, // 541: Gayway.FollowupMessageCreate:input_type -> FollowupMessageCreateInput
	143, // 542: Gayway.FollowupMessageEdit:input_type -> FollowupMessageEditInput
	141, // 543: Gayway.FollowupMessageDelete:input_type -> FollowupMessageDeleteInput
	397, // 544: Gayway.StageInstanceCreate:input_type -> StageInstanceCreateInput
	403, // 545: Gayway.StageInstance:input_type -> StageInstanceInput
	401, // 546: Gayway.StageInstanceEdit:input_type -> StageInstanceEditInput
	399, // 547: Gayway.StageInstanceDelete:input_type -> StageInstanceDeleteInput
	290, // 548: Gayway.GuildScheduledEvents:input_type -> GuildScheduledEventsInput
	284, // 549: Gayway.GuildScheduledEvent:input_type -> GuildScheduledEventInput
	277, // 550: Gayway.GuildScheduledEventCreate:input_type -> GuildScheduledEventCreateInput
	281, // 551: Gayway.GuildScheduledEventEdit:input_type -> GuildScheduledEventEditInput
	279, // 552: Gayway.GuildScheduledEventDelete:input_type -> GuildScheduledEventDeleteInput
	288, // 553: Gayway.GuildScheduledEventUsers:input_type -> GuildScheduledEventUsersInput
	61,  // 554: Gayway.AutoModerationRules:input_type -> AutoModerationRulesInput
	59,  // 555: Gayway.AutoModerationRule:input_type -> AutoModerationRuleInput
	53,  // 556: Gayway.AutoModerationRuleCreate:input_type -> AutoModerationRuleCreateInput
	57,  // 557: Gayway.AutoModerationRuleEdit:input_type -> AutoModerationRuleEditInput
	55,  // 558: Gayway.AutoModerationRuleDelete:input_type -> AutoModerationRuleDeleteInput
	37,  // 559: Gayway.ApplicationRoleConnectionMetadata:input_type -> ApplicationRoleConnectionMetadataInput
	39,  // 560: Gayway.ApplicationRoleConnectionMetadataUpdate:input_type -> ApplicationRoleConnectionMetadataUpdateInput
	451, // 561: Gayway.UserApplicationRoleConnection:input_type -> UserApplicationRoleConnectionInput
	453, // 562: Gayway.UserApplicationRoleConnectionUpdate:input_type -> UserApplicationRoleConnectionUpdateInput
	314, // 563: Gayway.HeartbeatLatency:input_type -> HeartbeatLatencyInput
	439, // 564: Gayway.UpdateGameStatus:input_type -> UpdateGameStatusInput
	448, // 565: Gayway.UpdateWatchStatus:input_type -> UpdateWatchStatusInput
	446, // 566: Gayway.UpdateStreamingStatus:input_type -> UpdateStreamingStatusInput
	441, // 567: Gayway.UpdateListeningStatus:input_type -> UpdateListeningStatusInput
	443, // 568: Gayway.UpdateStatusComplex:input_type -> UpdateStatusComplexInput
	384, // 569: Gayway.RequestGuildMembers:input_type -> RequestGuildMembersInput
	385, // 570: Gayway.RequestGuildMembersList:input_type -> RequestGuildMembersListInput
	380, // 571: Gayway.RequestGuildMembersBatch:input_type -> RequestGuildMembersBatchInput
	381, // 572: Gayway.RequestGuildMembersBatchList:input_type -> RequestGuildMembersBatchListInput
	131, // 573: Gayway.ChannelVoiceJoinManual:input_type -> ChannelVoiceJoinManualInput
	34,  // 574: Gayway.Application:output_type -> ApplicationOutput
	44,  // 575: Gayway.Applications:output_type -> ApplicationsOutput
	30,  // 576: Gayway.ApplicationCreate:output_type -> ApplicationCreateOutput
	42,  // 577: Gayway.ApplicationUpdate:output_type -> ApplicationUpdateOutput
	32,  // 578: Gayway.ApplicationDelete:output_type -> ApplicationDeleteOutput
	3,   // 579: Gayway.ApplicationAssets:output_type -> ApplicationAssetsOutput
	5,   // 580: Gayway.ApplicationBotCreate:output_type -> ApplicationBotCreateOutput
	389, // 581: Gayway.Request:output_type -> RequestOutput
	391, // 582: Gayway.RequestWithBucketID:output_type -> RequestWithBucketIDOutput
	472, // 583: Gayway.User:output_type -> UserOutput
	458, // 584: Gayway.UserAvatar:output_type -> UserAvatarOutput
	456, // 585: Gayway.UserAvatarDecode:output_type -> UserAvatarDecodeOutput
	474, // 586: Gayway.UserUpdate:output_type -> UserUpdateOutput
	465, // 587: Gayway.UserConnections:output_type -> UserConnectionsOutput
	460, // 588: Gayway.UserChannelCreate:output_type -> UserChannelCreateOutput
	468, // 589: Gayway.UserGuildMember:output_type -> UserGuildMemberOutput
	470, // 590: Gayway.UserGuilds:output_type -> UserGuildsOutput
	462, // 591: Gayway.UserChannelPermissions:output_type -> UserChannelPermissionsOutput
	257, // 592: Gayway.Guild:output_type -> GuildOutput
	313, // 593: Gayway.GuildWithCounts:output_type -> GuildWithCountsOutput
	261, // 594: Gayway.GuildPreview:output_type -> GuildPreviewOutput
	188, // 595: Gayway.GuildCreate:output_type -> GuildCreateOutput
	194, // 596: Gayway.GuildEdit:output_type -> GuildEditOutput
	192, // 597: Gayway.GuildDelete:output_type -> GuildDeleteOutput
	224, // 598: Gayway.GuildLeave:output_type -> GuildLeaveOutput
	177, // 599: Gayway.GuildBans:output_type -> GuildBansOutput
	169, // 600: Gayway.GuildBanCreate:output_type -> GuildBanCreateOutput
	175, // 601: Gayway.GuildBan:output_type -> GuildBanOutput
	171, // 602: Gayway.GuildBanCreateWithReason:output_type -> GuildBanCreateWithReasonOutput
	173, // 603: Gayway.GuildBanDelete:output_type -> GuildBanDeleteOutput
	254, // 604: Gayway.GuildMembers:output_type -> GuildMembersOutput
	256, // 605: Gayway.GuildMembersSearch:output_type -> GuildMembersSearchOutput
	245, // 606: Gayway.GuildMember:output_type -> GuildMemberOutput
	226, // 607: Gayway.GuildMemberAdd:output_type -> GuildMemberAddOutput
	231, // 608: Gayway.GuildMemberDelete:output_type -> GuildMemberDeleteOutput
	233, // 609: Gayway.GuildMemberDeleteWithReason:output_type -> GuildMemberDeleteWithReasonOutput
	237, // 610: Gayway.GuildMemberEdit:output_type -> GuildMemberEditOutput
	235, // 611: Gayway.GuildMemberEditComplex:output_type -> GuildMemberEditComplexOutput
	240, // 612: Gayway.GuildMemberMove:output_type -> GuildMemberMoveOutput
	244, // 613: Gayway.GuildMemberNickname:output_type -> GuildMemberNicknameOutput
	242, // 614: Gayway.GuildMemberMute:output_type -> GuildMemberMuteOutput
	252, // 615: Gayway.GuildMemberTimeout:output_type -> GuildMemberTimeoutOutput
	229, // 616: Gayway.GuildMemberDeafen:output_type -> GuildMemberDeafenOutput
	248, // 617: Gayway.GuildMemberRoleAdd:output_type -> GuildMemberRoleAddOutput
	250, // 618: Gayway.GuildMemberRoleRemove:output_type -> GuildMemberRoleRemoveOutput
	184, // 619: Gayway.GuildChannels:output_type -> GuildChannelsOutput
	179, // 620: Gayway.GuildChannelCreateComplex:output_type -> GuildChannelCreateComplexOutput
	182, // 621: Gayway.GuildChannelCreate:output_type -> GuildChannelCreateOutput
	186, // 622: Gayway.GuildChannelsReorder:output_type -> GuildChannelsReorderOutput
	222, // 623: Gayway.GuildInvites:output_type -> GuildInvitesOutput
	275, // 624: Gayway.GuildRoles:output_type -> GuildRolesOutput
	267, // 625: Gayway.GuildRoleCreate:output_type -> GuildRoleCreateOutput
	271, // 626: Gayway.GuildRoleEdit:output_type -> GuildRoleEditOutput
	273, // 627: Gayway.GuildRoleReorder:output_type -> GuildRoleReorderOutput
	269, // 628: Gayway.GuildRoleDelete:output_type -> GuildRoleDeleteOutput
	263, // 629: Gayway.GuildPruneCount:output_type -> GuildPruneCountOutput
	265, // 630: Gayway.GuildPrune:output_type -> GuildPruneOutput
	220, // 631: Gayway.GuildIntegrations:output_type -> GuildIntegrationsOutput
	214, // 632: Gayway.GuildIntegrationCreate:output_type -> GuildIntegrationCreateOutput
	218, // 633: Gayway.GuildIntegrationEdit:output_type -> GuildIntegrationEditOutput
	216, // 634: Gayway.GuildIntegrationDelete:output_type -> GuildIntegrationDeleteOutput
	211, // 635: Gayway.GuildIcon:output_type -> GuildIconOutput
	293, // 636: Gayway.GuildSplash:output_type -> GuildSplashOutput
	199, // 637: Gayway.GuildEmbed:output_type -> GuildEmbedOutput
	197, // 638: Gayway.GuildEmbedEdit:output_type -> GuildEmbedEditOutput
	166, // 639: Gayway.GuildAuditLog:output_type -> GuildAuditLogOutput
	209, // 640: Gayway.GuildEmojis:output_type -> GuildEmojisOutput
	207, // 641: Gayway.GuildEmoji:output_type -> GuildEmojiOutput
	201, // 642: Gayway.GuildEmojiCreate:output_type -> GuildEmojiCreateOutput
	205, // 643: Gayway.GuildEmojiEdit:output_type -> GuildEmojiEditOutput
	203, // 644: Gayway.GuildEmojiDelete:output_type -> GuildEmojiDeleteOutput
	302, // 645: Gayway.GuildTemplate:output_type -> GuildTemplateOutput
	190, // 646: Gayway.GuildCreateWithTemplate:output_type -> GuildCreateWithTemplateOutput
	307, // 647: Gayway.GuildTemplates:output_type -> GuildTemplatesOutput
	296, // 648: Gayway.GuildTemplateCreate:output_type -> GuildTemplateCreateOutput
	305, // 649: Gayway.GuildTemplateSync:output_type -> GuildTemplateSyncOutput
	300, // 650: Gayway.GuildTemplateEdit:output_type -> GuildTemplateEditOutput
	298, // 651: Gayway.GuildTemplateDelete:output_type -> GuildTemplateDeleteOutput
	124, // 652: Gayway.Channel:output_type -> ChannelOutput
	71,  // 653: Gayway.ChannelEdit:output_type -> ChannelEditOutput
	69,  // 654: Gayway.ChannelEditComplex:output_type -> ChannelEditComplexOutput
	66,  // 655: Gayway.ChannelDelete:output_type -> ChannelDeleteOutput
	130, // 656: Gayway.ChannelTyping:output_type -> ChannelTypingOutput
	119, // 657: Gayway.ChannelMessages:output_type -> ChannelMessagesOutput
	95,  // 658: Gayway.ChannelMessage:output_type -> ChannelMessageOutput
	109, // 659: Gayway.ChannelMessageSend:output_type -> ChannelMessageSendOutput
	99,  // 660: Gayway.ChannelMessageSendComplex:output_type -> ChannelMessageSendComplexOutput
	113, // 661: Gayway.ChannelMessageSendTTS:output_type -> ChannelMessageSendTTSOutput
	101, // 662: Gayway.ChannelMessageSendEmbed:output_type -> ChannelMessageSendEmbedOutput
	105, // 663: Gayway.ChannelMessageSendEmbeds:output_type -> ChannelMessageSendEmbedsOutput
	111, // 664: Gayway.ChannelMessageSendReply:output_type -> ChannelMessageSendReplyOutput
	103, // 665: Gayway.ChannelMessageSendEmbedReply:output_type -> ChannelMessageSendEmbedReplyOutput
	107, // 666: Gayway.ChannelMessageSendEmbedsReply:output_type -> ChannelMessageSendEmbedsReplyOutput
	93,  // 667: Gayway.ChannelMessageEdit:output_type -> ChannelMessageEditOutput
	87,  // 668: Gayway.ChannelMessageEditComplex:output_type -> ChannelMessageEditComplexOutput
	89,  // 669: Gayway.ChannelMessageEditEmbed:output_type -> ChannelMessageEditEmbedOutput
	91,  // 670: Gayway.ChannelMessageEditEmbeds:output_type -> ChannelMessageEditEmbedsOutput
	85,  // 671: Gayway.ChannelMessageDelete:output_type -> ChannelMessageDeleteOutput
	117, // 672: Gayway.ChannelMessagesBulkDelete:output_type -> ChannelMessagesBulkDeleteOutput
	97,  // 673: Gayway.ChannelMessagePin:output_type -> ChannelMessagePinOutput
	115, // 674: Gayway.ChannelMessageUnpin:output_type -> ChannelMessageUnpinOutput
	121, // 675: Gayway.ChannelMessagesPinned:output_type -> ChannelMessagesPinnedOutput
	73,  // 676: Gayway.ChannelFileSend:output_type -> ChannelFileSendOutput
	75,  // 677: Gayway.ChannelFileSendWithMessage:output_type -> ChannelFileSendWithMessageOutput
	81,  // 678: Gayway.ChannelInvites:output_type -> ChannelInvitesOutput
	79,  // 679: Gayway.ChannelInviteCreate:output_type -> ChannelInviteCreateOutput
	128, // 680: Gayway.ChannelPermissionSet:output_type -> ChannelPermissionSetOutput
	126, // 681: Gayway.ChannelPermissionDelete:output_type -> ChannelPermissionDeleteOutput
	83,  // 682: Gayway.ChannelMessageCrosspost:output_type -> ChannelMessageCrosspostOutput
	123, // 683: Gayway.ChannelNewsFollow:output_type -> ChannelNewsFollowOutput
	339, // 684: Gayway.Invite:output_type -> InviteOutput
	341, // 685: Gayway.InviteWithCounts:output_type -> InviteWithCountsOutput
	335, // 686: Gayway.InviteComplex:output_type -> InviteComplexOutput
	337, // 687: Gayway.InviteDelete:output_type -> InviteDeleteOutput
	333, // 688: Gayway.InviteAccept:output_type -> InviteAcceptOutput
	477, // 689: Gayway.VoiceRegions:output_type -> VoiceRegionsOutput
	159, // 690: Gayway.Gateway:output_type -> GatewayOutput
	156, // 691: Gayway.GatewayBot:output_type -> GatewayBotOutput
	481, // 692: Gayway.WebhookCreate:output_type -> WebhookCreateOutput
	134, // 693: Gayway.ChannelWebhooks:output_type -> ChannelWebhooksOutput
	311, // 694: Gayway.GuildWebhooks:output_type -> GuildWebhooksOutput
	500, // 695: Gayway.Webhook:output_type -> WebhookOutput
	505, // 696: Gayway.WebhookWithToken:output_type -> WebhookWithTokenOutput
	488, // 697: Gayway.WebhookEdit:output_type -> WebhookEditOutput
	490, // 698: Gayway.WebhookEditWithToken:output_type -> WebhookEditWithTokenOutput
	483, // 699: Gayway.WebhookDelete:output_type -> WebhookDeleteOutput
	485, // 700: Gayway.WebhookDeleteWithToken:output_type -> WebhookDeleteWithTokenOutput
	492, // 701: Gayway.WebhookExecute:output_type -> WebhookExecuteOutput
	503, // 702: Gayway.WebhookThreadExecute:output_type -> WebhookThreadExecuteOutput
	499, // 703: Gayway.WebhookMessage:output_type -> WebhookMessageOutput
	497, // 704: Gayway.WebhookMessageEdit:output_type -> WebhookMessageEditOutput
	495, // 705: Gayway.WebhookMessageDelete:output_type -> WebhookMessageDeleteOutput
	360, // 706: Gayway.MessageReactionAdd:output_type -> MessageReactionAddOutput
	362, // 707: Gayway.MessageReactionRemove:output_type -> MessageReactionRemoveOutput
	367, // 708: Gayway.MessageReactionsRemoveAll:output_type -> MessageReactionsRemoveAllOutput
	369, // 709: Gayway.MessageReactionsRemoveEmoji:output_type -> MessageReactionsRemoveEmojiOutput
	365, // 710: Gayway.MessageReactions:output_type -> MessageReactionsOutput
	373, // 711: Gayway.MessageThreadStartComplex:output_type -> MessageThreadStartComplexOutput
	375, // 712: Gayway.MessageThreadStart:output_type -> MessageThreadStartOutput
	425, // 713: Gayway.ThreadStartComplex:output_type -> ThreadStartComplexOutput
	427, // 714: Gayway.ThreadStart:output_type -> ThreadStartOutput
	148, // 715: Gayway.ForumThreadStartComplex:output_type -> ForumThreadStartComplexOutput
	154, // 716: Gayway.ForumThreadStart:output_type -> ForumThreadStartOutput
	150, // 717: Gayway.ForumThreadStartEmbed:output_type -> ForumThreadStartEmbedOutput
	152, // 718: Gayway.ForumThreadStartEmbeds:output_type -> ForumThreadStartEmbedsOutput
	410, // 719: Gayway.ThreadJoin:output_type -> ThreadJoinOutput
	412, // 720: Gayway.ThreadLeave:output_type -> ThreadLeaveOutput
	415, // 721: Gayway.ThreadMemberAdd:output_type -> ThreadMemberAddOutput
	419, // 722: Gayway.ThreadMemberRemove:output_type -> ThreadMemberRemoveOutput
	417, // 723: Gayway.ThreadMember:output_type -> ThreadMemberOutput
	421, // 724: Gayway.ThreadMembers:output_type -> ThreadMembersOutput
	429, // 725: Gayway.ThreadsActive:output_type -> ThreadsActiveOutput
	309, // 726: Gayway.GuildThreadsActive:output_type -> GuildThreadsActiveOutput
	431, // 727: Gayway.ThreadsArchived:output_type -> ThreadsArchivedOutput
	434, // 728: Gayway.ThreadsPrivateArchived:output_type -> ThreadsPrivateArchivedOutput
	436, // 729: Gayway.ThreadsPrivateJoinedArchived:output_type -> ThreadsPrivateJoinedArchivedOutput
	10,  // 730: Gayway.ApplicationCommandCreate:output_type -> ApplicationCommandCreateOutput
	14,  // 731: Gayway.ApplicationCommandEdit:output_type -> ApplicationCommandEditOutput
	8,   // 732: Gayway.ApplicationCommandBulkOverwrite:output_type -> ApplicationCommandBulkOverwriteOutput
	12,  // 733: Gayway.ApplicationCommandDelete:output_type -> ApplicationCommandDeleteOutput
	18,  // 734: Gayway.ApplicationCommand:output_type -> ApplicationCommandOutput
	28,  // 735: Gayway.ApplicationCommands:output_type -> ApplicationCommandsOutput
	163, // 736: Gayway.GuildApplicationCommandsPermissions:output_type -> GuildApplicationCommandsPermissionsOutput
	26,  // 737: Gayway.ApplicationCommandPermissions:output_type -> ApplicationCommandPermissionsOutput
	23,  // 738: Gayway.ApplicationCommandPermissionsEdit:output_type -> ApplicationCommandPermissionsEditOutput
	21,  // 739: Gayway.ApplicationCommandPermissionsBatchEdit:output_type -> ApplicationCommandPermissionsBatchEditOutput
	322, // 740: Gayway.InteractionRespond:output_type -> InteractionRespondOutput
	330, // 741: Gayway.InteractionResponse:output_type -> InteractionResponseOutput
	328, // 742: Gayway.InteractionResponseEdit:output_type -> InteractionResponseEditOutput
	326, // 743: Gayway.InteractionResponseDelete:output_type -> InteractionResponseDeleteOutput
	140, // 744: Gayway.FollowupMessageCreate:output_type -> FollowupMessageCreateOutput
	144, // 745: Gayway.FollowupMessageEdit:output_type -> FollowupMessageEditOutput
	142, // 746: Gayway.FollowupMessageDelete:output_type -> FollowupMessageDeleteOutput
	398, // 747: Gayway.StageInstanceCreate:output_type -> StageInstanceCreateOutput
	404, // 748: Gayway.StageInstance:output_type -> StageInstanceOutput
	402, // 749: Gayway.StageInstanceEdit:output_type -> StageInstanceEditOutput
	400, // 750: Gayway.StageInstanceDelete:output_type -> StageInstanceDeleteOutput
	291, // 751: Gayway.GuildScheduledEvents:output_type -> GuildScheduledEventsOutput
	285, // 752: Gayway.GuildScheduledEvent:output_type -> GuildScheduledEventOutput
	278, // 753: Gayway.GuildScheduledEventCreate:output_type -> GuildScheduledEventCreateOutput
	282, // 754: Gayway.GuildScheduledEventEdit:output_type -> GuildScheduledEventEditOutput
	280, // 755: Gayway.GuildScheduledEventDelete:output_type -> GuildScheduledEventDeleteOutput
	289, // 756: Gayway.GuildScheduledEventUsers:output_type -> GuildScheduledEventUsersOutput
	62,  // 757: Gayway.AutoModerationRules:output_type -> AutoModerationRulesOutput
	60,  // 758: Gayway.AutoModerationRule:output_type -> AutoModerationRuleOutput
	54,  // 759: Gayway.AutoModerationRuleCreate:output_type -> AutoModerationRuleCreateOutput
	58,  // 760: Gayway.AutoModerationRuleEdit:output_type -> AutoModerationRuleEditOutput
	56,  // 761: Gayway.AutoModerationRuleDelete:output_type -> AutoModerationRuleDeleteOutput
	38,  // 762: Gayway.ApplicationRoleConnectionMetadata:output_type -> ApplicationRoleConnectionMetadataOutput
	40,  // 763: Gayway.ApplicationRoleConnectionMetadataUpdate:output_type -> ApplicationRoleConnectionMetadataUpdateOutput
	452, // 764: Gayway.UserApplicationRoleConnection:output_type -> UserApplicationRoleConnectionOutput
	454, // 765: Gayway.UserApplicationRoleConnectionUpdate:output_type -> UserApplicationRoleConnectionUpdateOutput
	315, // 766: Gayway.HeartbeatLatency:output_type -> HeartbeatLatencyOutput
	440, // 767: Gayway.UpdateGameStatus:output_type -> UpdateGameStatusOutput
	449, // 768: Gayway.UpdateWatchStatus:output_type -> UpdateWatchStatusOutput
	447, // 769: Gayway.UpdateStreamingStatus:output_type -> UpdateStreamingStatusOutput
	442, // 770: Gayway.UpdateListeningStatus:output_type -> UpdateListeningStatusOutput
	444, // 771: Gayway.UpdateStatusComplex:output_type -> UpdateStatusComplexOutput
	387, // 772: Gayway.RequestGuildMembers:output_type -> RequestGuildMembersOutput
	386, // 773: Gayway.RequestGuildMembersList:output_type -> RequestGuildMembersListOutput
	383, // 774: Gayway.RequestGuildMembersBatch:output_type -> RequestGuildMembersBatchOutput
	382, // 775: Gayway.RequestGuildMembersBatchList:output_type -> RequestGuildMembersBatchListOutput
	132, // 776: Gayway.ChannelVoiceJoinManual:output_type -> ChannelVoiceJoinManualOutput
	574, // [574:777] is the sub-list for method output_type
	371, // [371:574] is the sub-list for method input_type
	371, // [371:371] is the sub-list for extension type_name
	371, // [371:371] is the sub-list for extension extendee
	0,   // [0:371] is the sub-list for field type_name
}

func init() { file_output_proto_init() }
func file_output_proto_init() {
	if File_output_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_output_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationAssetsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationAssetsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationBotCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationBotCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandBulkOverwriteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandBulkOverwriteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandOptionChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandPermissionsBatchEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandPermissionsBatchEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandPermissionsEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandPermissionsEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandPermissionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandPermissionsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandPermissionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCommandsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationRoleConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationRoleConnectionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationRoleConnectionMetadataInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationRoleConnectionMetadataOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationRoleConnectionMetadataUpdateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationRoleConnectionMetadataUpdateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationUpdateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationUpdateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationActionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationRuleCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationRuleCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationRuleDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationRuleDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationRuleEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationRuleEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationRuleInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationRuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationRulesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationRulesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoModerationTriggerMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelEdit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelEditComplexInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelEditComplexOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelFileSendInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelFileSendOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelFileSendWithMessageInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelFileSendWithMessageOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelFollow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInviteCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInviteCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInvitesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInvitesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageCrosspostInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageCrosspostOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageEditComplexInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageEditComplexOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageEditEmbedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageEditEmbedOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageEditEmbedsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageEditEmbedsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessagePinInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessagePinOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendComplexInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendComplexOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendEmbedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendEmbedOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendEmbedReplyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendEmbedReplyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendEmbedsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendEmbedsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendEmbedsReplyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendEmbedsReplyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendReplyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendReplyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendTTSInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageSendTTSOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageUnpinInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessageUnpinOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessagesBulkDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessagesBulkDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessagesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessagesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessagesPinnedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessagesPinnedOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelNewsFollowInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelNewsFollowOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelPermissionDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelPermissionDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelPermissionSetInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelPermissionSetOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelTypingInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelTypingOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelVoiceJoinManualInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelVoiceJoinManualOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelWebhooksInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelWebhooksOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emoji); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmojiParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowupMessageCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowupMessageCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowupMessageDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowupMessageDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowupMessageEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowupMessageEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumDefaultReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumThreadStartComplexInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumThreadStartComplexOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumThreadStartEmbedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumThreadStartEmbedOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumThreadStartEmbedsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumThreadStartEmbedsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumThreadStartInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumThreadStartOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayBotInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayBotOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayBotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildApplicationCommandPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildApplicationCommandsPermissionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildApplicationCommandsPermissionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildAuditLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildAuditLogInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildAuditLogOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanCreateWithReasonInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanCreateWithReasonOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBanOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBansInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildBansOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelCreateComplexInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelCreateComplexOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelCreateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelsReorderInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelsReorderOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildCreateWithTemplateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildCreateWithTemplateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmbed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmbedEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmbedEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmbedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmbedOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojiCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojiCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojiDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojiDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojiEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojiEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojiInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojiOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojisInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEmojisOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIconInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIconOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIntegrationCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIntegrationCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIntegrationDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIntegrationDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIntegrationEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIntegrationEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIntegrationsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildIntegrationsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildInvitesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildInvitesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildLeaveInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildLeaveOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberAddInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberAddOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberAddParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberDeafenInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberDeafenOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberDeleteWithReasonInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberDeleteWithReasonOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberEditComplexInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberEditComplexOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberMoveInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberMoveOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberMuteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberMuteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberNicknameInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberNicknameOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberRoleAddInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberRoleAddOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberRoleRemoveInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberRoleRemoveOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberTimeoutInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberTimeoutOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMembersInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMembersOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMembersSearchInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMembersSearchOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildPreviewInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildPreviewOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildPruneCountInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildPruneCountOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildPruneInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildPruneOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRoleCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRoleCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRoleDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRoleDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRoleEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRoleEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRoleReorderInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRoleReorderOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRolesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRolesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventEntityMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventUsersInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventUsersOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildScheduledEventsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildSplashInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[293].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildSplashOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[294].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[295].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplateCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[296].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplateCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[297].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplateDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[298].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplateDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[299].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplateEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[300].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplateEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[301].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[302].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[303].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[304].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplateSyncInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[305].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplateSyncOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[306].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplatesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[307].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTemplatesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[308].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildThreadsActiveInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[309].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildThreadsActiveOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[310].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildWebhooksInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[311].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildWebhooksOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[312].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildWithCountsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[313].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildWithCountsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[314].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatLatencyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[315].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatLatencyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[316].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[317].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[318].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[319].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[320].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[321].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionRespondInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[322].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionRespondOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[323].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[324].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[325].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionResponseDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[326].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionResponseDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[327].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionResponseEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[328].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionResponseEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[329].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionResponseInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[330].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionResponseOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[331].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[332].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteAcceptInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[333].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteAcceptOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[334].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteComplexInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[335].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteComplexOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[336].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[337].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[338].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[339].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[340].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteWithCountsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[341].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteWithCountsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[342].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[343].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[344].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[345].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageAllowedMentions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[346].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[347].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[348].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[349].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEdit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[350].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[351].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[352].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[353].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedFooter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[354].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[355].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[356].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedThumbnail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[357].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[358].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInteraction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[359].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionAddInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[360].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionAddOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[361].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionRemoveInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[362].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionRemoveOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[363].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[364].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[365].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[366].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionsRemoveAllInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[367].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionsRemoveAllOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[368].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionsRemoveEmojiInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[369].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactionsRemoveEmojiOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[370].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[371].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[372].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageThreadStartComplexInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[373].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageThreadStartComplexOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[374].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageThreadStartInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[375].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageThreadStartOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[376].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Party); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[377].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionOverwrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[378].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Presence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[379].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[380].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGuildMembersBatchInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[381].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGuildMembersBatchListInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[382].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGuildMembersBatchListOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[383].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGuildMembersBatchOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[384].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGuildMembersInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[385].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGuildMembersListInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[386].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGuildMembersListOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[387].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGuildMembersOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[388].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[389].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[390].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestWithBucketIDInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[391].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestWithBucketIDOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[392].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[393].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[394].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secrets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[395].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[396].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[397].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInstanceCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[398].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInstanceCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[399].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInstanceDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[400].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInstanceDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[401].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInstanceEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[402].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInstanceEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[403].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInstanceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[404].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInstanceOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[405].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInstanceParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[406].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sticker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[407].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[408].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[409].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadJoinInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[410].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadJoinOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[411].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadLeaveInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[412].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadLeaveOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[413].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[414].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadMemberAddInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[415].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadMemberAddOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[416].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadMemberInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[417].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadMemberOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[418].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadMemberRemoveInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[419].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadMemberRemoveOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[420].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadMembersInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[421].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadMembersOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[422].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[423].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[424].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadStartComplexInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[425].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadStartComplexOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[426].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadStartInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[427].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadStartOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[428].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsActiveInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[429].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsActiveOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[430].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsArchivedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[431].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsArchivedOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[432].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[433].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsPrivateArchivedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[434].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsPrivateArchivedOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[435].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsPrivateJoinedArchivedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[436].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadsPrivateJoinedArchivedOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[437].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Time); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[438].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeStamps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[439].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGameStatusInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[440].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGameStatusOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[441].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListeningStatusInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[442].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListeningStatusOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[443].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusComplexInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[444].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusComplexOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[445].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[446].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStreamingStatusInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[447].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStreamingStatusOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[448].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWatchStatusInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[449].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWatchStatusOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[450].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[451].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserApplicationRoleConnectionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[452].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserApplicationRoleConnectionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[453].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserApplicationRoleConnectionUpdateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[454].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserApplicationRoleConnectionUpdateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[455].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAvatarDecodeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[456].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAvatarDecodeOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[457].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAvatarInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[458].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAvatarOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[459].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChannelCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[460].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChannelCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[461].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChannelPermissionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[462].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChannelPermissionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[463].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[464].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserConnectionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[465].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserConnectionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[466].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[467].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGuildMemberInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[468].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGuildMemberOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[469].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGuildsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[470].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGuildsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[471].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[472].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[473].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[474].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[475].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceRegion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[476].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceRegionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[477].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceRegionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[478].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[479].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Webhook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[480].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookCreateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[481].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookCreateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[482].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[483].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[484].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookDeleteWithTokenInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[485].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookDeleteWithTokenOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[486].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookEdit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[487].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[488].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[489].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookEditWithTokenInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[490].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookEditWithTokenOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[491].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookExecuteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[492].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookExecuteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[493].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[494].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookMessageDeleteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[495].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookMessageDeleteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[496].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookMessageEditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[497].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookMessageEditOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[498].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookMessageInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[499].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookMessageOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[500].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[501].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[502].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookThreadExecuteInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[503].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookThreadExecuteOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[504].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookWithTokenInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_proto_msgTypes[505].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookWithTokenOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_output_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[56].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[58].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[60].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[62].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[66].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[69].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[71].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[73].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[75].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[79].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[81].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[83].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[85].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[87].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[89].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[91].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[93].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[95].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[97].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[99].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[101].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[103].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[105].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[107].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[109].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[111].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[113].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[115].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[117].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[119].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[121].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[123].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[124].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[126].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[128].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[130].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[132].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[134].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[140].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[142].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[144].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[148].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[150].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[152].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[154].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[156].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[159].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[163].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[166].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[169].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[171].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[173].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[175].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[177].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[179].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[182].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[184].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[186].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[188].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[190].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[192].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[194].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[197].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[199].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[201].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[203].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[205].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[207].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[209].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[211].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[214].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[216].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[218].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[220].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[222].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[224].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[226].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[229].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[231].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[233].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[235].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[237].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[240].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[242].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[244].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[245].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[248].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[250].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[252].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[254].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[256].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[257].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[261].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[263].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[265].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[267].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[269].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[271].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[273].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[275].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[278].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[280].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[282].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[285].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[289].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[291].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[293].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[298].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[300].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[302].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[305].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[307].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[309].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[311].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[313].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[322].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[326].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[328].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[330].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[333].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[335].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[337].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[339].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[341].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[360].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[362].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[365].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[367].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[369].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[373].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[375].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[382].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[383].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[386].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[387].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[389].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[391].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[398].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[400].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[402].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[404].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[410].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[412].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[415].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[417].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[419].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[421].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[425].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[427].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[429].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[431].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[434].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[436].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[440].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[442].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[444].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[447].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[449].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[452].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[454].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[456].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[458].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[460].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[462].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[465].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[468].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[470].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[472].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[474].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[477].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[481].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[483].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[485].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[488].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[490].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[492].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[495].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[497].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[499].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[500].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[503].OneofWrappers = []interface{}{}
	file_output_proto_msgTypes[505].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_output_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   514,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_output_proto_goTypes,
		DependencyIndexes: file_output_proto_depIdxs,
		MessageInfos:      file_output_proto_msgTypes,
	}.Build()
	File_output_proto = out.File
	file_output_proto_rawDesc = nil
	file_output_proto_goTypes = nil
	file_output_proto_depIdxs = nil
}
